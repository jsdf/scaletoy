{"version":3,"sources":["logo.svg","downloadFile.js","Recorder.js","useQueryParam.js","MidiOutput.js","Keyboard.js","MidiExport.js","App.js","useValueObserver.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","downloadFile","blob","fileName","a","document","createElement","body","appendChild","style","url","URL","createObjectURL","href","download","click","revokeObjectURL","remove","makeNewRecorder","actx","inputNode","chunks","dest","createMediaStreamDestination","mediaRecorder","MediaRecorder","stream","connect","ondataavailable","evt","push","data","onstop","Blob","type","Recorder","props","recorderRef","React","useRef","_React$useState","useState","_React$useState2","Object","slicedToArray","recording","setRecording","toggleRecording","useCallback","s","useEffect","current","start","state","stop","react_default","onClick","memo","disabled","QUERY_PARAM_FORMATS","boolean","parse","v","stringify","JSON","integer","parseInt","string","useQueryParam","param","initialValue","format","_useState","item","window","location","searchParams","get","error","console","log","_useState2","storedValue","setStoredValue","value","valueToStore","set","history","replaceState","toString","MidiOutput","_ref","onChangeOutput","selectedOutput","outputs","setOutputs","navigator","requestMIDIAccess","then","access","Array","from","values","onstatechange","e","onChange","currentTarget","indexOf","key","map","output","i","name","whiteNotes","notesWithSharps","Set","styles","container","textAlign","keyboard","display","position","height","marginTop","marginBottom","cursor","whiteKey","borderBottomLeftRadius","borderBottomRightRadius","width","background","border","zIndex","noteLabel","highlighted","blackKey","highlightTypeColors","scale","chord","numKeys","length","octaves","keys","highlightKeys","highlightType","notePlayer","highlightKeysSharpified","useMemo","noteName","Tonal","acc","Note","makeHandlers","onMouseOver","buttons","triggerAttack","onMouseDown","onMouseUp","triggerRelease","onMouseOut","size","startAt","arguments","undefined","toConsumableArray","range","startOctave","forEach","octave","octaveOffset","note","noteOffset","noteNameSharp","assign","objectSpread","includes","left","has","MidiExport","beatDurationSeconds","bpm","strumming","exportHistory","midi","Midi","header","setTempo","track","addTrack","chordData","eventIdx","chordNotes","chordNotesForOctave","beatStart","strummingSeconds","strumDelay","addNote","time","duration","toArray","SIZE_ASC","SHOW_HISTORY","USE_SAMPLED_DX7","Boolean","strummingTimes","strummingTimesIndex","scaleTypesChordPatterns","major","minor","dorian","lydian","phrygian","ionian","mixolydian","locrian","allScales","romanNumerals","scaleTypesPosNames","reduce","scaleName","pattern","scaleType","pos","toUpperCase","Error","concat","getScaleChords","Scale","notes","pc","chords","chordType","Chord","sort","b","intervals","tonic","aliases","NOTE_ON","NOTE_OFF","velocityMidi","playNote","events","end","noteMidi","updatedEvents","ev","message","newEvents","addEvents","getReifiedNotesForChordForScale","chordName","scalePitchClassesNotesMap","tonicReified","interval","makeScaleData","scalePitchClasses","scaleNotes","reifyScaleNotesWithOctave","scalePosChords","Map","chordNames","quality","chordDatasByName","sizes","chordDatas","add","chordTypeColors","diminished","buttonStyle","color","padding","paddingBottom","overflow","flexColContainer","flexCol","flex","ChordButton","playChord","setLastChord","selected","borderColor","join","App","_ref2","audioApi","resumeAudio","resume","suspendAudio","suspend","_useQueryParam","_useQueryParam2","setKey","_useQueryParam3","_useQueryParam4","setStrumming","_useQueryParam5","_useQueryParam6","includeExtra","setIncludeExtra","lastChord","_useQueryParam7","_useQueryParam8","setOctave","_useQueryParam9","_useQueryParam10","setScaleType","_React$useState3","_React$useState4","highlightedKeys","setHighlightedKeys","setHighlightedChord","_React$useState5","_React$useState6","setHistory","clearHistory","scaleData","setHighlightedScale","toggleExtra","_React$useState7","_React$useState8","setEvents","_React$useState9","_React$useState10","midiOut","setMidiOut","playScale","slice","currentTime","lastStartTimeOffset","currentValue","valueRef","prevValue","useValueObserver","onMidi","send","dx7","id","setInterval","nextEvent","onTick","clearInterval","className","src_Recorder","event","min","max","hidden","readOnly","checked","src_Keyboard","reverse","filter","sizeIndex","_ref3","_ref4","Theme","_React$useState11","_React$useState12","darkMode","setDarkMode","documentElement","classList","top","right","AudioContext","Startup","_React$useState13","_React$useState14","startedAudio","setStartedAudio","_React$useState15","_React$useState16","setAudioApi","onStart","querySelector","visibility","initSampled","_initSampled","apply","this","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","Promise","all","bind","sampledDX7","sent","_ref6","initDX7Shim","onDX7Init","initDX7","process","App_App","fontSize","borderRadius","hostname","match","ReactDOM","render","src_App","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.46772f36.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","export default function downloadFile(blob, fileName) {\n  var a = document.createElement('a');\n  document.body.appendChild(a);\n  a.style = 'display: none';\n\n  const url = URL.createObjectURL(blob);\n  a.href = url;\n  a.download = fileName;\n  a.click();\n  URL.revokeObjectURL(url);\n  a.remove();\n}\n","import React from 'react';\nimport downloadFile from './downloadFile';\n\nfunction makeNewRecorder(actx, inputNode) {\n  const chunks = [];\n  const dest = actx.createMediaStreamDestination();\n  const mediaRecorder = new MediaRecorder(dest.stream);\n  inputNode.connect(dest);\n\n  mediaRecorder.ondataavailable = function(evt) {\n    // push each chunk (blobs) in an array\n    chunks.push(evt.data);\n  };\n\n  mediaRecorder.onstop = function(evt) {\n    // Make blob out of our blobs, and open it.\n    var blob = new Blob(chunks, {type: 'audio/ogg; codecs=opus'});\n\n    const fileName = 'audio.ogg';\n\n    downloadFile(blob, fileName);\n  };\n\n  return mediaRecorder;\n}\n\nfunction Recorder(props) {\n  const recorderRef = React.useRef(\n    makeNewRecorder(props.actx, props.inputNode)\n  );\n\n  const [recording, setRecording] = React.useState(false);\n\n  const toggleRecording = React.useCallback(() => setRecording(s => !s), [\n    setRecording,\n  ]);\n\n  React.useEffect(() => {\n    if (recording) {\n      recorderRef.current.start();\n    } else {\n      if (recorderRef.current.state !== 'inactive') {\n        recorderRef.current.stop();\n        recorderRef.current = makeNewRecorder(props.actx, props.inputNode);\n      }\n    }\n  }, [recording]);\n\n  return (\n    <button onClick={toggleRecording}>\n      {recording ? 'stop recording' : 'record audio'}\n    </button>\n  );\n}\n\nfunction ShimRecorder(props) {\n  if (typeof MediaRecorder == 'undefined') {\n    return <button disabled>[recording not available]</button>;\n  }\n\n  return <Recorder {...props} />;\n}\n\nexport default React.memo(ShimRecorder);\n","import {useState} from 'react';\n\nexport const QUERY_PARAM_FORMATS = {\n  boolean: {\n    parse: v => !(v == null || v === 'false'),\n    stringify: v => JSON.stringify(v),\n  },\n  integer: {\n    parse: v => parseInt(v, 10),\n    stringify: v => JSON.stringify(v),\n  },\n  string: {\n    parse: v => v,\n    stringify: v => v,\n  },\n};\n\nexport default function useQueryParam(param, initialValue, format) {\n  // State to store our value\n  // Pass initial state function to useState so logic is only executed once\n  const [storedValue, setStoredValue] = useState(() => {\n    try {\n      // Get from url by param\n      const item = new URL(window.location.href).searchParams.get(param);\n      // Parse stored json or if none return initialValue\n      return item != null ? format.parse(item) : initialValue;\n    } catch (error) {\n      // If error also return initialValue\n      console.log(error);\n      return initialValue;\n    }\n  });\n\n  // Return a wrapped version of useState's setter function that ...\n  // ... persists the new value to query params.\n  const setValue = value => {\n    try {\n      // Allow value to be a function so we have same API as useState\n      const valueToStore =\n        typeof value === 'function' ? value(storedValue) : value;\n      // Save state\n      setStoredValue(valueToStore);\n\n      const url = new URL(window.location.href);\n      url.searchParams.set(param, format.stringify(valueToStore));\n      window.history.replaceState(null, null, url.toString());\n    } catch (error) {\n      // A more advanced implementation would handle the error case\n      console.log(error);\n    }\n  };\n\n  return [storedValue, setValue];\n}\n","import React from 'react';\n\nexport default function MidiOutput({onChangeOutput, selectedOutput}) {\n  const [outputs, setOutputs] = React.useState([]);\n\n  React.useEffect(() => {\n    if (!navigator.requestMIDIAccess) {\n      return;\n    }\n    navigator.requestMIDIAccess().then(access => {\n      setOutputs(Array.from(access.outputs.values()));\n\n      access.onstatechange = function(e) {\n        setOutputs(Array.from(access.outputs.values()));\n      };\n    });\n  }, []);\n\n  return (\n    <label>\n      midi out:{' '}\n      <select\n        onChange={e => {\n          onChangeOutput(outputs[parseInt(e.currentTarget.value)]);\n        }}\n        value={outputs.indexOf(selectedOutput)}\n      >\n        <option key={-1} value={-1}>\n          (none)\n        </option>\n        {outputs.map((output, i) => (\n          <option key={i} value={i}>\n            {output.name}\n          </option>\n        ))}\n      </select>\n    </label>\n  );\n}\n","import React from 'react';\nimport * as Tonal from '@tonaljs/tonal';\nimport * as Note from '@tonaljs/note';\n\nfunction range(size, startAt = 0) {\n  return [...Array(size).keys()].map(i => i + startAt);\n}\n\nconst whiteNotes = ['C', 'D', 'E', 'F', 'G', 'A', 'B'];\nconst notesWithSharps = new Set(['C', 'D', 'F', 'G', 'A']);\n\nconst styles = {\n  container: {\n    textAlign: 'center',\n  },\n  keyboard: {\n    display: 'inline-block',\n    position: 'relative',\n    height: 70,\n    marginTop: 16,\n    marginBottom: 20,\n    cursor: 'pointer',\n  },\n  whiteKey: {\n    position: 'absolute',\n    borderBottomLeftRadius: 4,\n    borderBottomRightRadius: 4,\n    width: 20,\n    height: 70,\n    background: 'white',\n    border: 'solid 1px black',\n    zIndex: 0,\n  },\n  noteLabel: {\n    width: 20,\n    marginTop: 70,\n  },\n  highlighted: {\n    background: 'orange',\n  },\n  blackKey: {\n    position: 'absolute',\n    borderBottomLeftRadius: 3,\n    borderBottomRightRadius: 3,\n    width: 9,\n    height: 50,\n    background: 'black',\n    border: 'solid 1px black',\n\n    zIndex: 1,\n  },\n};\n\nconst highlightTypeColors = {\n  scale: '#4287f5',\n  chord: 'orange',\n};\n\nfunction Keyboard(props: {\n  highlightKeys: Array<string>,\n  startOctave: number,\n  octaves: number,\n  highlightType: string,\n  notePlayer: Object,\n}) {\n  const numKeys = whiteNotes.length * props.octaves;\n  const keys = [];\n\n  const {highlightKeys, highlightType, notePlayer} = props;\n\n  const highlightKeysSharpified = React.useMemo(\n    () =>\n      highlightKeys\n        ? highlightKeys.map(noteName => {\n            if (Tonal.note(noteName).acc === 'b') {\n              return Note.enharmonic(noteName);\n            }\n\n            return noteName;\n          })\n        : null,\n    [highlightKeys]\n  );\n\n  function makeHandlers(noteName) {\n    return {\n      onMouseOver: e => {\n        if (e.buttons > 0) {\n          notePlayer.triggerAttack(noteName);\n        }\n      },\n      onMouseDown: () => notePlayer.triggerAttack(noteName),\n      onMouseUp: () => notePlayer.triggerRelease(noteName),\n      onMouseOut: () => notePlayer.triggerRelease(noteName),\n    };\n  }\n\n  range(props.octaves, props.startOctave).forEach((octave, octaveOffset) => {\n    whiteNotes.forEach((note, noteOffset) => {\n      const noteName = note + octave;\n      const noteNameSharp = note + '#' + octave;\n      keys.push(\n        <div\n          key={noteName}\n          {...makeHandlers(noteName)}\n          style={{\n            ...styles.whiteKey,\n            ...(highlightKeysSharpified &&\n            highlightKeysSharpified.includes(noteName)\n              ? {background: highlightTypeColors[highlightType]}\n              : null),\n            left:\n              (octaveOffset * whiteNotes.length + noteOffset) *\n              (styles.whiteKey.width - 1),\n          }}\n        >\n          <div style={styles.noteLabel}>{noteName}</div>\n        </div>\n      );\n\n      if (notesWithSharps.has(note)) {\n        keys.push(\n          <div\n            key={noteNameSharp}\n            {...makeHandlers(noteNameSharp)}\n            style={{\n              ...styles.blackKey,\n              ...(highlightKeysSharpified &&\n              highlightKeysSharpified.includes(noteNameSharp)\n                ? {background: highlightTypeColors[highlightType]}\n                : null),\n              left:\n                (octaveOffset * whiteNotes.length + noteOffset + 1) *\n                  (styles.whiteKey.width - 1) -\n                (styles.blackKey.width - 1) / 2,\n            }}\n          />\n        );\n      }\n    });\n  });\n  return (\n    <div style={styles.container}>\n      <div style={{...styles.keyboard, width: numKeys * styles.whiteKey.width}}>\n        {keys}\n      </div>\n    </div>\n  );\n}\n\nexport default React.memo(Keyboard);\n","import React from 'react';\nimport {Midi} from '@tonejs/midi';\nimport downloadFile from './downloadFile';\nimport * as Tonal from '@tonaljs/tonal';\n\nexport default function({history, beatDurationSeconds, bpm, strumming}) {\n  const exportHistory = React.useCallback(() => {\n    // create a new midi file\n    const midi = new Midi();\n    midi.header.setTempo(bpm);\n    // add a track\n    const track = midi.addTrack();\n\n    history.forEach((chordData, eventIdx) => {\n      const chordNotes = chordData.chordNotesForOctave;\n      const beatStart = eventIdx * beatDurationSeconds * 2;\n      const strummingSeconds = strumming / 1000;\n\n      chordNotes.forEach((noteName, i) => {\n        const strumDelay = i * strummingSeconds;\n\n        track.addNote({\n          midi: Tonal.note(noteName).midi,\n          // seconds\n          time: beatStart + strumDelay,\n          duration: beatDurationSeconds + strumDelay,\n        });\n      });\n    });\n\n    const blob = new Blob([midi.toArray()], {type: 'audio/midi'});\n    downloadFile(blob, 'export.mid');\n  }, [history]);\n\n  return <button onClick={exportHistory}>export midi</button>;\n}\n","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport * as Tonal from '@tonaljs/tonal';\nimport * as Scale from '@tonaljs/scale';\nimport * as Chord from '@tonaljs/chord';\nimport * as Note from '@tonaljs/note';\nimport Recorder from './Recorder';\nimport useQueryParam, {QUERY_PARAM_FORMATS} from './useQueryParam';\nimport useValueObserver from './useValueObserver';\nimport MidiOutput from './MidiOutput';\nimport Keyboard from './Keyboard';\nimport MidiExport from './MidiExport';\n\nconst SHOW_NOTE_NAMES = true;\nconst SHOW_NOTE_OCTS = true;\nconst SHOW_FULL_CHORD_NAMES = false;\nconst SIZE_ASC = true;\nconst SHOW_HISTORY = true;\nconst USE_SAMPLED_DX7 = Boolean(\n  new URL(document.location).searchParams.get('sampled')\n);\n\nconst strummingTimes = [0, 10, 30, 50, 75, 100, 150, 200];\nconst strummingTimesIndex = {};\nstrummingTimes.forEach((v, i) => {\n  strummingTimesIndex[v] = i;\n});\n\nfunction transposeByOctaves(note, shift) {\n  return `${note.pc}${note.oct + shift}`;\n}\n\nfunction getChordsBySize(chords, key) {\n  return chords\n    .map(chordType => Chord.chord(`${key}${chordType}`))\n    .sort((a, b) => a.intervals.length - b.intervals.length)\n    .map(chord => `${chord.tonic}${chord.aliases[0]}`);\n}\n\nconst keys = ['C', 'C#', 'D', 'D#', 'E', 'F', 'F#', 'G', 'G#', 'A', 'Bb', 'B'];\n\nconst scaleTypesChordPatterns = {\n  major: ['major', 'minor', 'minor', 'major', 'major', 'minor', 'diminished'],\n  minor: ['minor', 'diminished', 'major', 'minor', 'minor', 'major', 'major'],\n  dorian: ['minor', 'minor', 'major', 'major', 'minor', 'diminished', 'major'],\n  lydian: ['major', 'major', 'minor', 'diminished', 'major', 'minor', 'minor'],\n  phrygian: [\n    'minor',\n    'major',\n    'major',\n    'minor',\n    'diminished',\n    'major',\n    'minor',\n  ],\n  ionian: ['major', 'minor', 'minor', 'major', 'major', 'minor', 'diminished'],\n  mixolydian: [\n    'major',\n    'minor',\n    'diminished',\n    'major',\n    'minor',\n    'minor',\n    'major',\n  ],\n  locrian: ['diminished', 'major', 'minor', 'minor', 'major', 'major', 'minor'],\n};\n\nconst allScales = Object.keys(scaleTypesChordPatterns);\n\nconst romanNumerals = ['i', 'ii', 'iii', 'iv', 'v', 'vi', 'vii'];\n// const scaleTypesPosNames = {\n//   major: ['I', 'ii', 'iii', 'VI', 'V', 'vi', 'vii*'],\n//   minor: ['i', 'ii*', 'III', 'iv', 'v', 'VI', 'VII'],\n// };\nconst scaleTypesPosNames = Object.keys(scaleTypesChordPatterns).reduce(\n  (acc, scaleName) => {\n    const pattern = scaleTypesChordPatterns[scaleName];\n\n    acc[scaleName] = pattern.map((scaleType, i) => {\n      const pos = romanNumerals[i];\n\n      switch (scaleType) {\n        case 'major':\n          return pos.toUpperCase();\n        case 'minor':\n          return pos;\n        case 'diminished':\n          return pos + '\\xB0';\n        default:\n          throw new Error(`unknown scaleType '${scaleType}'`);\n      }\n    });\n\n    return acc;\n  },\n  {}\n);\n\nfunction getScaleChords(key, scaleType) {\n  return Scale.scale(key + ' ' + scaleType).notes.map((pc, pos) =>\n    getChordsBySize(\n      Scale.scaleChords(scaleTypesChordPatterns[scaleType][pos]),\n      pc\n    )\n  );\n}\n\nconst bpm = 140;\nconst beatDurationSeconds = (1 / bpm) * 60;\n\nconst NOTE_ON = 0x90;\nconst NOTE_OFF = 0x80;\nconst velocityMidi = 80;\n\nfunction onTick(events, audioApi, onMidi) {\n  let i = 0;\n  for (; i < events.length; i++) {\n    const nextEvent = events[i];\n    if (nextEvent.time > audioApi.actx.currentTime) {\n      break;\n    }\n\n    onMidi(nextEvent.message);\n  }\n\n  return i === 0 ? events : events.slice(i);\n}\n\nfunction playNote(events, noteName, start, end) {\n  const noteMidi = Tonal.note(noteName).midi;\n\n  let updatedEvents = events;\n  // end any upcoming events for this key\n  events.forEach(ev => {\n    if (ev.message[1] == noteMidi) {\n      ev.time = start - 0.01;\n      ev.message[0] = NOTE_OFF;\n    }\n  });\n\n  return addEvents(updatedEvents, [\n    {\n      message: [NOTE_ON, noteMidi, velocityMidi],\n      time: start,\n    },\n    {\n      message: [NOTE_OFF, noteMidi, velocityMidi],\n      time: end,\n    },\n  ]);\n}\n\nfunction addEvents(events, newEvents) {\n  const updatedEvents = events.concat(newEvents);\n  updatedEvents.sort((a, b) => a.time - b.time);\n  return updatedEvents;\n}\n\nfunction makeOctaveScaleNoteSequence(key, octave, scaleType) {\n  const scaleNotes = Scale.scale(`${key}${octave} ${scaleType}`).notes;\n\n  scaleNotes.push(transposeByOctaves(Tonal.note(scaleNotes[0]), 1));\n\n  return scaleNotes;\n}\n\n// get the notes for a chord, for an octave\nfunction getReifiedNotesForChord(chordName, octave) {\n  const chordData = Chord.chord(chordName);\n  const tonicReified = chordData.tonic + octave;\n  const notes = chordData.intervals.map(interval =>\n    Tonal.transpose(tonicReified, interval)\n  );\n  return notes;\n}\n\n// we need to make sure that the tonic is from the correct octave when the\n// scale spans multiple octaves\nfunction getReifiedNotesForChordForScale(chordName, scalePitchClassesNotesMap) {\n  const chordData = Chord.chord(chordName);\n  const tonicReified = scalePitchClassesNotesMap[chordData.tonic];\n  const notes = chordData.intervals.map(interval =>\n    Note.simplify(Tonal.transpose(tonicReified, interval))\n  );\n  return notes;\n}\n\nfunction reifyScaleNotesWithOctave(scale, octave) {\n  return scale.intervals.map(interval =>\n    Tonal.transpose(`${scale.tonic}${octave}`, interval)\n  );\n}\n\nfunction makeScaleData(key, scaleType, octave) {\n  const scale = Scale.scale(`${key} ${scaleType}`);\n  const scalePitchClasses = scale.notes;\n\n  const scaleNotes = reifyScaleNotesWithOctave(scale, octave);\n  const scalePitchClassesNotesMap = {};\n  scaleNotes.forEach(noteName => {\n    scalePitchClassesNotesMap[Tonal.note(noteName).pc] = noteName;\n  });\n\n  const scalePosChords = new Map(\n    getScaleChords(key, scaleType).map((chordNames, pos) => {\n      return [\n        pos,\n\n        chordNames.map(chordName => {\n          const chord = Chord.chord(chordName);\n          return {\n            pos,\n            chord,\n            chordType: scaleTypesChordPatterns[scaleType][pos],\n            chordNotesForOctave: getReifiedNotesForChordForScale(\n              chordName,\n              scalePitchClassesNotesMap\n            ),\n            chordName,\n            size:\n              chord.intervals.length * (chord.quality === 'Unknown' ? -1 : 1),\n          };\n        }),\n      ];\n    })\n  );\n\n  const chordDatasByName = new Map(\n    Array.from(scalePosChords.values).map(chordData => [\n      chordData.chordName,\n      chordData,\n    ])\n  );\n\n  const sizes = new Set();\n\n  scalePosChords.forEach((chordDatas, pos) => {\n    chordDatas.forEach(chordData => {\n      sizes.add(chordData.size);\n    });\n  });\n\n  return {\n    scaleType,\n    key,\n    scalePitchClasses,\n    scalePosChords,\n    scaleNotes,\n    chordDatasByName,\n    sizes: Array.from(sizes).sort((a, b) => a - b),\n  };\n}\n\nconst chordTypeColors = {\n  major: 'rgb(127,199,175)',\n  minor: 'rgb(255,158,157)',\n  diminished: 'rgb(218,216,167)',\n};\n\nconst buttonStyle = {\n  display: 'block',\n  width: '100%',\n  cursor: 'pointer',\n  color: 'black',\n  padding: 4,\n  paddingBottom: 8,\n  height: 46,\n  overflow: 'hidden',\n  textAlign: 'center',\n};\n\nconst flexColContainer = {\n  display: 'flex',\n};\nconst flexCol = {\n  flex: 1,\n};\n\nconst ChordButton = React.memo(\n  ({\n    chordData,\n    playChord,\n    setLastChord,\n    octave,\n    strumming,\n    selected,\n    onMouseOver,\n  }) => {\n    return (\n      <div\n        style={{\n          ...buttonStyle,\n          background: chordTypeColors[chordData.chordType],\n          border: '1px solid',\n          borderColor: selected ? 'rgba(0,0,0,0.2)' : 'transparent',\n        }}\n        onClick={() => {\n          playChord(chordData, octave, strumming);\n          setLastChord(chordData.chordName);\n          console.log(chordData);\n        }}\n        onMouseOver={() => {\n          onMouseOver(chordData.chordNotesForOctave);\n        }}\n      >\n        <div>\n          {chordData.chordName}\n          {SHOW_FULL_CHORD_NAMES && (\n            <div>\n              <small>\n                {chordData.chord.name.length > 3 ? (\n                  chordData.chord.name\n                ) : (\n                  // bad data, don't show\n                  <span>&nbsp;</span>\n                )}\n              </small>\n            </div>\n          )}\n          {true && (\n            <div>\n              {SHOW_NOTE_NAMES && SHOW_NOTE_OCTS && (\n                <small>{chordData.chordNotesForOctave.join()}</small>\n              )}\n\n              {SHOW_NOTE_NAMES && !SHOW_NOTE_OCTS && (\n                <small>{chordData.chord.notes.join()}</small>\n              )}\n            </div>\n          )}\n        </div>\n      </div>\n    );\n  }\n);\n\nfunction App({audioApi}) {\n  const resumeAudio = React.useCallback(() => audioApi.actx.resume(), [\n    audioApi,\n  ]);\n  const suspendAudio = React.useCallback(() => audioApi.actx.suspend(), [\n    audioApi,\n  ]);\n\n  const [key, setKey] = useQueryParam('key', 'C', QUERY_PARAM_FORMATS.string);\n  const [strumming, setStrumming] = useQueryParam(\n    'strumming',\n    strummingTimes[2],\n    QUERY_PARAM_FORMATS.integer\n  );\n\n  const [includeExtra, setIncludeExtra] = useQueryParam(\n    'includeExtra',\n    false,\n    QUERY_PARAM_FORMATS.boolean\n  );\n  const [lastChord, setLastChord] = React.useState(null);\n  const [octave, setOctave] = useQueryParam(\n    'octave',\n    4,\n    QUERY_PARAM_FORMATS.integer\n  );\n  const [scaleType, setScaleType] = useQueryParam(\n    'scaleType',\n    'major',\n    QUERY_PARAM_FORMATS.string\n  );\n\n  const [highlightedKeys, setHighlightedKeys] = React.useState(null);\n  const setHighlightedChord = React.useCallback(keys =>\n    setHighlightedKeys({keys, type: 'chord'})\n  );\n\n  const [history, setHistory] = React.useState([]);\n  const clearHistory = React.useCallback(() => setHistory([]), [setHistory]);\n\n  const scaleData = React.useMemo(() => makeScaleData(key, scaleType, octave), [\n    key,\n    scaleType,\n    octave,\n  ]);\n  const setHighlightedScale = React.useCallback(() => {\n    setHighlightedKeys({keys: scaleData.scaleNotes, type: 'scale'});\n  }, [scaleData]);\n\n  const toggleExtra = React.useCallback(() => setIncludeExtra(s => !s));\n\n  const [events, setEvents] = React.useState([]);\n  const [midiOut, setMidiOut] = React.useState(null);\n\n  const playScale = React.useCallback(() => {\n    setEvents(events => {\n      let updatedEvents = events;\n      const scaleNotes = scaleData.scaleNotes.slice();\n      scaleNotes.push(Tonal.transpose(scaleNotes[0], '8P'));\n      const currentTime = audioApi.actx.currentTime;\n      let lastStartTimeOffset = 0;\n      scaleNotes.forEach(noteName => {\n        lastStartTimeOffset += beatDurationSeconds;\n\n        updatedEvents = playNote(\n          updatedEvents,\n          noteName,\n          currentTime + lastStartTimeOffset,\n          currentTime + lastStartTimeOffset + beatDurationSeconds\n        );\n      });\n\n      return updatedEvents;\n    });\n  }, [setEvents, audioApi, scaleData]);\n\n  const playChord = React.useCallback(\n    (chordData, octave, strumming) => {\n      const chordNotes = chordData.chordNotesForOctave;\n\n      setEvents(events => {\n        let updatedEvents = events;\n\n        const currentTime = audioApi.actx.currentTime;\n\n        chordNotes.forEach((noteName, i) => {\n          const strumDelay = i * (strumming / 1000);\n          updatedEvents = playNote(\n            updatedEvents,\n            noteName,\n            currentTime + strumDelay,\n            currentTime + beatDurationSeconds + i * (strumming / 1000)\n          );\n        });\n\n        return updatedEvents;\n      });\n\n      setHistory(s => s.concat(chordData));\n    },\n    [setEvents, audioApi]\n  );\n\n  useValueObserver(scaleData, setHighlightedScale);\n\n  const onMidi = React.useMemo(() => {\n    if (midiOut) {\n      if (!midiOut.send) {\n        debugger;\n      }\n      return message => midiOut.send(message);\n    } else if (audioApi.dx7) {\n      return message => audioApi.dx7.onMidi(message);\n    }\n    return message => {};\n  }, [audioApi, midiOut]);\n\n  const notePlayer = React.useMemo(() => {\n    return {\n      triggerAttack(noteName) {\n        onMidi([NOTE_ON, Tonal.note(noteName).midi, velocityMidi]);\n      },\n      triggerRelease(noteName) {\n        onMidi([NOTE_OFF, Tonal.note(noteName).midi, velocityMidi]);\n      },\n    };\n  }, [onMidi]);\n\n  // startup\n  React.useEffect(() => {\n    // start event-consuming interval\n    const id = setInterval(() => {\n      setEvents(events => onTick(events, audioApi, onMidi));\n    }, 1);\n    return () => {\n      clearInterval(id);\n    };\n  }, [onMidi]);\n\n  return (\n    <div className=\"App\">\n      <button onClick={suspendAudio}>pause audio</button>\n      <button onClick={resumeAudio}>resume audio</button>\n      {audioApi.dx7 && (\n        <Recorder actx={audioApi.actx} inputNode={audioApi.dx7} />\n      )}\n      <MidiOutput selectedOutput={midiOut} onChangeOutput={setMidiOut} />\n      <div onMouseOver={setHighlightedScale}>\n        <label>\n          key:{' '}\n          <select\n            value={scaleData.key}\n            onChange={event => setKey(event.currentTarget.value)}\n          >\n            {keys.map(key => (\n              <option key={key} value={key}>\n                {key}\n              </option>\n            ))}\n          </select>\n        </label>{' '}\n        <label>\n          octave:{' '}\n          <select\n            value={octave}\n            onChange={event => setOctave(parseInt(event.currentTarget.value))}\n          >\n            {[1, 2, 3, 4, 5, 6, 7].map(key => (\n              <option key={key} value={key}>\n                {key}\n              </option>\n            ))}\n          </select>\n        </label>{' '}\n        <label>\n          scale type:{' '}\n          <select\n            value={scaleType}\n            onChange={event => setScaleType(event.currentTarget.value)}\n          >\n            {allScales.map(key => (\n              <option key={key} value={key}>\n                {key}\n              </option>\n            ))}\n          </select>\n        </label>{' '}\n        <label>scale notes: </label>\n        {scaleData.scaleNotes.join()}{' '}\n        <button onClick={playScale}>play scale</button>{' '}\n        <label>\n          strumming:\n          <input\n            type=\"range\"\n            min={0}\n            max={strummingTimes.length - 1}\n            value={strummingTimesIndex[strumming]}\n            onChange={e => {\n              setStrumming(strummingTimes[parseInt(e.currentTarget.value)]);\n            }}\n          />{' '}\n          <input hidden type=\"number\" value={strumming} readOnly />\n        </label>\n        <label>\n          <input\n            type=\"checkbox\"\n            onChange={toggleExtra}\n            checked={includeExtra}\n          />\n          include extra chords\n        </label>\n      </div>\n\n      <Keyboard\n        highlightKeys={highlightedKeys ? highlightedKeys.keys : null}\n        startOctave={octave}\n        octaves={3}\n        highlightType={highlightedKeys ? highlightedKeys.type : 'scale'}\n        notePlayer={notePlayer}\n      />\n\n      {SHOW_HISTORY && (\n        <div style={{textAlign: 'left'}}>\n          <details>\n            <summary style={{textAlign: 'left'}}>\n              <div style={{display: 'initial'}}>history/export</div>\n            </summary>\n            <div style={{padding: '8px 0'}}>\n              <MidiExport\n                bpm={bpm}\n                history={history}\n                strumming={strumming}\n                beatDurationSeconds={beatDurationSeconds}\n              />\n              <button onClick={clearHistory}>clear history</button>\n            </div>\n            <div style={{width: `90vw`, overflow: 'auto', display: 'flex'}}>\n              {history\n                .slice()\n                .reverse()\n                .map((chordData, i) => (\n                  <div key={i} style={{width: `${(1 / 7) * 100}vw`}}>\n                    <ChordButton\n                      {...{\n                        chordData,\n                        playChord,\n                        setLastChord: () => {},\n                        octave,\n                        strumming,\n                        selected: false,\n                        onMouseOver: setHighlightedChord,\n                      }}\n                    />\n                  </div>\n                ))}\n              {history.length === 0 && (\n                <div>played chords will appear here</div>\n              )}\n            </div>\n          </details>\n        </div>\n      )}\n\n      <div style={flexColContainer}>\n        <div style={flexCol}>\n          {scaleData.sizes\n            .filter(size => (includeExtra ? true : size > 0))\n            .sort((a, b) => (SIZE_ASC ? a - b : b - a))\n            .map((size, sizeIndex) => (\n              <div key={sizeIndex}>\n                {false && <div style={{flex: 1}}>{size}</div>}\n                <br />\n                <div key={size} style={{display: 'flex'}}>\n                  {Array.from(scaleData.scalePosChords).map(\n                    ([pos, chordDatas]) => {\n                      return (\n                        <div key={pos} style={{flex: 1}}>\n                          {sizeIndex === 0 && (\n                            <div>{scaleTypesPosNames[scaleType][pos]}</div>\n                          )}\n\n                          {chordDatas\n                            .filter(chordData => chordData.size === size)\n                            // silly heuristic for simpler chords\n                            .sort(\n                              (a, b) => a.chordName.length - b.chordName.length\n                            )\n                            .map((chordData, i) => (\n                              <ChordButton\n                                key={i}\n                                {...{\n                                  chordData,\n                                  playChord,\n                                  setLastChord,\n                                  octave,\n                                  strumming,\n                                  selected: chordData.chordName === lastChord,\n                                  onMouseOver: setHighlightedChord,\n                                }}\n                              />\n                            ))}\n                        </div>\n                      );\n                    }\n                  )}\n                </div>\n              </div>\n            ))}\n        </div>\n      </div>\n      <pre style={{height: 300, overflow: 'auto'}}>\n        {events.map(ev => JSON.stringify(ev)).join('\\n')}\n      </pre>\n    </div>\n  );\n}\n\nfunction Theme() {\n  const [darkMode, setDarkMode] = React.useState(false);\n\n  React.useEffect(() => {\n    if (darkMode) {\n      document.documentElement.classList.add('dark-mode');\n    } else {\n      document.documentElement.classList.remove('dark-mode');\n    }\n  }, [darkMode]);\n\n  return (\n    <div style={{position: 'absolute', top: 0, right: 0}}>\n      <label>\n        dark mode:{' '}\n        <input\n          type=\"checkbox\"\n          checked={darkMode}\n          onChange={() => setDarkMode(s => !s)}\n        />\n      </label>\n    </div>\n  );\n}\n\nconst CAN_AUTOPLAY_AUDIO = new AudioContext().state == 'running';\n\nfunction Startup() {\n  const [startedAudio, setStartedAudio] = React.useState(false);\n  const [audioApi, setAudioApi] = React.useState(null);\n\n  const onStart = React.useCallback(() => {\n    document.querySelector('.dx7').style.visibility = 'visible';\n    setStartedAudio(true);\n  }, [setStartedAudio]);\n\n  React.useEffect(() => {\n    async function initSampled() {\n      const {sampledDX7} = await import('./sampledDX7');\n\n      sampledDX7().then(({dx7, actx}) => {\n        window.initDX7Shim(dx7, actx);\n      });\n    }\n    window.onDX7Init = (dx7, actx) => {\n      if (!dx7) {\n        // fall back to sampled\n        return initSampled();\n      }\n      const newAudioApi = {\n        dx7,\n        actx,\n      };\n\n      setAudioApi(newAudioApi);\n      if (actx.state === 'running') {\n        onStart();\n      }\n    };\n    if (USE_SAMPLED_DX7) {\n      initSampled();\n    } else {\n      window.initDX7(process.env.PUBLIC_URL);\n    }\n  }, []);\n\n  if (audioApi && startedAudio) {\n    return (\n      <div>\n        <App audioApi={audioApi} />\n        <Theme />\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"App\">\n      {audioApi ? (\n        <button\n          style={{fontSize: 42, borderRadius: 9, cursor: 'pointer'}}\n          onClick={() => {\n            audioApi.actx.resume();\n            onStart();\n          }}\n        >\n          start\n        </button>\n      ) : (\n        'loading'\n      )}\n    </div>\n  );\n}\n\nexport default Startup;\n","import React from 'react';\n\nexport default function useValueObserver(\n  currentValue,\n  onChange: (value, prevValue) => void\n) {\n  const valueRef = React.useRef(currentValue);\n\n  React.useEffect(() => {\n    const prevValue = valueRef.current;\n    valueRef.current = currentValue;\n\n    if (prevValue !== currentValue) {\n      onChange(currentValue, prevValue);\n    }\n  }, [currentValue, onChange]);\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}