{"version":3,"sources":["simplifyEnharmonics.js","useKeyboardInteractions.js","useLocalStorage.js","useValueObserver.js","Keyboard.js","useQueryParam.js","downloadFile.js","Recorder.js","MidiDeviceSelector.js","Scaleboard.js","MidiExport.js","Details.js","Select.js","Range.js","Checkbox.js","ChordButton.js","App.js","Startup.js","serviceWorker.js","index.js","keyboardStyles.js"],"names":["__webpack_require__","d","__webpack_exports__","simplifyEnharmonics","_tonaljs_tonal__WEBPACK_IMPORTED_MODULE_0__","_tonaljs_note__WEBPACK_IMPORTED_MODULE_1__","noteName","noteNameSimplified","Note","Tonal","acc","useKeyboardInteractions","_ref","notePlayer","_React$useState","React","useState","Set","_React$useState2","Object","_Users_jfriend_code_scaletoy_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","pressedKeys","setPressedKeys","pressedKeysRef","useRef","pressedKeysAPI","useMemo","setKeyPressed","prev","current","has","triggerAttack","updated","add","setKeyReleased","delete","triggerRelease","makeHandlers","onMouseOver","e","buttons","onMouseDown","onMouseUp","onMouseOut","useLocalStorage","baseKey","initialValue","key","concat","_useState","item","window","localStorage","getItem","JSON","parse","error","console","log","_useState2","storedValue","setStoredValue","value","valueToStore","Function","setItem","stringify","useValueObserver","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","currentValue","onChange","valueRef","useEffect","prevValue","whiteNotes","notesWithSharps","highlightTypeColors","scale","chord","memo","props","numKeys","length","octaves","keys","highlightKeys","highlightType","highlightKeysSharpified","map","_useKeyboardInteracti","size","startAt","arguments","undefined","_Users_jfriend_code_scaletoy_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_1__","Array","i","range","startOctave","forEach","octave","octaveOffset","note","noteOffset","noteNameSharp","push","react__WEBPACK_IMPORTED_MODULE_2___default","a","createElement","assign","style","_Users_jfriend_code_scaletoy_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","styles","whiteKey","includes","background","pressed","left","width","noteLabel","blackKey","container","keyboard","QUERY_PARAM_FORMATS","boolean","v","integer","parsed","parseInt","Number","isNaN","Error","toString","string","useQueryParam","param","format","URL","location","href","searchParams","get","url","set","history","replaceState","downloadFile","blob","fileName","document","body","appendChild","createObjectURL","download","click","revokeObjectURL","remove","makeNewRecorder","actx","inputNode","chunks","dest","createMediaStreamDestination","mediaRecorder","MediaRecorder","stream","connect","ondataavailable","evt","data","onstop","Blob","type","Recorder","recorderRef","slicedToArray","recording","setRecording","toggleRecording","useCallback","s","start","state","stop","react_default","onClick","disabled","MidiDeviceSelector","selectedPort","availablePorts","setAvailablePorts","accessType","navigator","requestMIDIAccess","then","access","from","values","onstatechange","currentTarget","indexOf","port","name","scaleDegreeImportance","objectSpread","keyboardStyles","tonicKey","marginTop","fontSize","qwerty","split","atStartOfOctave","scaleSteps","_React$useMemo","simplifiedPitchClasses","scalePitchClasses","importance","slice","simplifiedPitchClassesForImportance","notesScaleDegrees","Map","scaleDegree","sortedPitchClassesForImportance","sort","b","qwertyToNoteName","qwertyOffset","index","getQwertyOffset","Math","min","max","floor","qwertyHandlers","setOctave","addEventListener","removeEventListener","toConsumableArray","isTonic","showScaleDegrees","MidiExport","beatDurationSeconds","bpm","strumming","exportHistory","midi","Midi","header","setTempo","track","addTrack","chordData","eventIdx","chordNotes","chordNotesForOctave","beatStart","strummingSeconds","strumDelay","addNote","time","duration","toArray","Details","summary","children","startOpen","open","setOpen","onToggle","preventDefault","stopPropagation","Select","label","options","event","parseFloat","Range","step","formatValue","showValue","Fragment","readOnly","Checkbox","checked","chordTypeColors","major","minor","diminished","buttonStyle","display","cursor","color","padding","paddingBottom","height","overflow","textAlign","playChord","endChord","source","strumMode","selected","noteNames","chordStartedRef","intervals","join","chordType","border","borderColor","onMouseEnter","onMouseLeave","chordName","SIZE_ASC","SHOW_HISTORY","strummingTimes","strummingTimesIndex","scaleTypesChordPatterns","dorian","lydian","phrygian","ionian","mixolydian","locrian","allScales","romanNumerals","scaleTypesPosNames","reduce","scaleName","pattern","scaleType","pos","toUpperCase","getScaleChords","Scale","notes","pc","chords","Chord","tonic","aliases","NOTE_ON","NOTE_OFF","velocityMidi","playNoteOnOff","events","end","noteMidi","updatedEvents","ev","message","addEvents","newEvents","getReifiedNotesForChordForScale","scalePitchClassesNotesMap","tonicReified","interval","makeScaleData","scaleNotes","reifyScaleNotesWithOctave","scalePosChords","chordNames","quality","sizes","chordDatas","flexColContainer","flexCol","flex","alignLeft","alignCenter","App","audioApi","resumeAudio","resume","suspendAudio","suspend","_useQueryParam","_useQueryParam2","setKey","_useQueryParam3","_useQueryParam4","setStrumming","_useQueryParam5","_useQueryParam6","setStrumMode","_useQueryParam7","_useQueryParam8","includeExtra","setIncludeExtra","_useQueryParam9","_useQueryParam10","oneShot","setOneShot","lastChord","setLastChord","_useQueryParam11","_useQueryParam12","_useQueryParam13","_useQueryParam14","setScaleType","_useQueryParam15","_useQueryParam16","setShowScaleDegrees","_useQueryParam17","_useQueryParam18","setScaleSteps","_useQueryParam19","_useQueryParam20","chordPaletteOctaves","setChordPaletteOctaves","_React$useState3","_React$useState4","highlightedKeys","setHighlightedKeys","setHighlightedChord","_React$useState5","_React$useState6","setHistory","clearHistory","scaleData","chordDataByOctave","setHighlightedScale","_React$useState7","_React$useState8","setEvents","_React$useState9","_React$useState10","midiOut","setMidiOut","playScale","currentTime","lastStartTimeOffset","reverse","knuthShuffle","playNoteOn","playNoteOff","onMidi","send","dx7","id","setInterval","nextEvent","onTick","clearInterval","className","src_Recorder","src_Scaleboard","Keyboard","src_ChordButton","filter","sizeIndex","_ref2","_ref3","USE_SAMPLED_DX7","Boolean","nonnull","Theme","_useLocalStorage","_useLocalStorage2","darkMode","setDarkMode","documentElement","classList","position","top","right","Startup","startedAudio","setStartedAudio","setAudioApi","onStart","querySelector","visibility","initSampled","_initSampled","apply","this","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","next","Promise","all","bind","sampledDX7","sent","initDX7Shim","onDX7Init","initDX7","process","Route","lazy","useRouting","Suspense","fallback","borderRadius","hostname","match","ReactDOM","render","src_Startup","getElementById","serviceWorker","ready","registration","unregister","marginBottom","borderBottomLeftRadius","borderBottomRightRadius","zIndex","highlighted"],"mappings":"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","file":"static/js/main.a875a467.chunk.js","sourcesContent":["import * as Tonal from '@tonaljs/tonal';\nimport * as Note from '@tonaljs/note';\n\n// convert flats and multiple sharps to natural or sharp form\nexport default function simplifyEnharmonics(noteName) {\n  const noteNameSimplified = Note.simplify(noteName);\n  if (Tonal.note(noteNameSimplified).acc === 'b') {\n    return Note.enharmonic(noteNameSimplified);\n  }\n\n  return noteNameSimplified;\n}\n","import React from 'react';\n\nexport default function useKeyboardInteractions({notePlayer}) {\n  const [pressedKeys, setPressedKeys] = React.useState(() => new Set());\n\n  const pressedKeysRef = React.useRef(new Set());\n\n  const pressedKeysAPI = React.useMemo(() => {\n    return {\n      setKeyPressed(noteName) {\n        const prev = pressedKeysRef.current;\n\n        if (!prev.has(noteName)) {\n          notePlayer.triggerAttack(noteName);\n          const updated = new Set(prev).add(noteName);\n          pressedKeysRef.current = updated;\n          setPressedKeys(updated);\n        }\n      },\n      setKeyReleased(noteName) {\n        const prev = pressedKeysRef.current;\n\n        if (prev.has(noteName)) {\n          const updated = new Set(prev);\n          updated.delete(noteName);\n          pressedKeysRef.current = updated;\n          setPressedKeys(updated);\n          notePlayer.triggerRelease(noteName);\n        }\n      },\n    };\n  }, [setPressedKeys, notePlayer]);\n\n  function makeHandlers(noteName) {\n    return {\n      onMouseOver: (e) => {\n        if (e.buttons > 0) {\n          pressedKeysAPI.setKeyPressed(noteName);\n        }\n      },\n      onMouseDown: () => {\n        pressedKeysAPI.setKeyPressed(noteName);\n      },\n      onMouseUp: () => {\n        pressedKeysAPI.setKeyReleased(noteName);\n      },\n      onMouseOut: () => {\n        pressedKeysAPI.setKeyReleased(noteName);\n      },\n    };\n  }\n\n  return {pressedKeys, pressedKeysAPI, makeHandlers};\n}\n","import {useState} from 'react';\n\nexport default function useLocalStorage(baseKey, initialValue) {\n  const key = `scaletoy-${baseKey}`;\n  // State to store our value\n  // Pass initial state function to useState so logic is only executed once\n  const [storedValue, setStoredValue] = useState(() => {\n    try {\n      // Get from local storage by key\n      const item = window.localStorage.getItem(key);\n      // Parse stored json or if none return initialValue\n      return item ? JSON.parse(item) : initialValue;\n    } catch (error) {\n      // If error also return initialValue\n      console.log(error);\n      return initialValue;\n    }\n  });\n\n  // Return a wrapped version of useState's setter function that ...\n  // ... persists the new value to localStorage.\n  const setValue = value => {\n    try {\n      // Allow value to be a function so we have same API as useState\n      const valueToStore =\n        value instanceof Function ? value(storedValue) : value;\n      // Save state\n      setStoredValue(valueToStore);\n      // Save to local storage\n      window.localStorage.setItem(key, JSON.stringify(valueToStore));\n    } catch (error) {\n      // A more advanced implementation would handle the error case\n      console.log(error);\n    }\n  };\n\n  return [storedValue, setValue];\n}\n","import React from 'react';\n\nexport default function useValueObserver(\n  currentValue,\n  onChange: (value, prevValue) => void\n) {\n  const valueRef = React.useRef(currentValue);\n\n  React.useEffect(() => {\n    const prevValue = valueRef.current;\n    valueRef.current = currentValue;\n\n    if (prevValue !== currentValue) {\n      onChange(currentValue, prevValue);\n    }\n  }, [currentValue, onChange]);\n}\n","import React from 'react';\nimport simplifyEnharmonics from './simplifyEnharmonics';\nimport useKeyboardInteractions from './useKeyboardInteractions';\nimport styles from './keyboardStyles';\n\nfunction range(size, startAt = 0) {\n  return [...Array(size).keys()].map((i) => i + startAt);\n}\n\nconst whiteNotes = ['C', 'D', 'E', 'F', 'G', 'A', 'B'];\nconst notesWithSharps = new Set(['C', 'D', 'F', 'G', 'A']);\n\nconst highlightTypeColors = {\n  scale: '#4287f5',\n  chord: 'orange',\n};\n\nfunction Keyboard(props: {\n  highlightKeys: Array<string>;\n  startOctave: number;\n  octaves: number;\n  highlightType: string;\n  notePlayer: Object;\n}) {\n  const numKeys = whiteNotes.length * props.octaves;\n  const keys = [];\n\n  const {highlightKeys, highlightType, notePlayer} = props;\n\n  const highlightKeysSharpified = React.useMemo(\n    () => (highlightKeys ? highlightKeys.map(simplifyEnharmonics) : null),\n    [highlightKeys]\n  );\n\n  const {pressedKeys, makeHandlers} = useKeyboardInteractions({notePlayer});\n\n  range(props.octaves, props.startOctave).forEach((octave, octaveOffset) => {\n    whiteNotes.forEach((note, noteOffset) => {\n      const noteName = note + octave;\n      const noteNameSharp = note + '#' + octave;\n      keys.push(\n        <div\n          key={noteName}\n          {...makeHandlers(noteName)}\n          style={{\n            ...styles.whiteKey,\n            ...(highlightKeysSharpified &&\n            highlightKeysSharpified.includes(noteName)\n              ? {background: highlightTypeColors[highlightType]}\n              : null),\n            ...(pressedKeys.has(noteName) ? styles.pressed : null),\n            left:\n              (octaveOffset * whiteNotes.length + noteOffset) *\n              (styles.whiteKey.width - 1),\n          }}\n        >\n          <div style={styles.noteLabel}>{note === 'C' ? noteName : note}</div>\n        </div>\n      );\n\n      if (notesWithSharps.has(note)) {\n        keys.push(\n          <div\n            key={noteNameSharp}\n            {...makeHandlers(noteNameSharp)}\n            style={{\n              ...styles.blackKey,\n              ...(highlightKeysSharpified &&\n              highlightKeysSharpified.includes(noteNameSharp)\n                ? {background: highlightTypeColors[highlightType]}\n                : null),\n              left:\n                (octaveOffset * whiteNotes.length + noteOffset + 1) *\n                  (styles.whiteKey.width - 1) -\n                (styles.blackKey.width - 1) / 2,\n            }}\n          />\n        );\n      }\n    });\n  });\n  return (\n    <div style={styles.container}>\n      <div style={{...styles.keyboard, width: numKeys * styles.whiteKey.width}}>\n        {keys}\n      </div>\n    </div>\n  );\n}\n\nexport default React.memo(Keyboard);\n","import {useState} from 'react';\n\nexport const QUERY_PARAM_FORMATS = {\n  boolean: {\n    parse: (v) => !(v == null || v === 'false'),\n    stringify: (v) => JSON.stringify(v),\n  },\n  integer: {\n    parse: (v) => {\n      const parsed = parseInt(v, 10);\n      if (Number.isNaN(parsed)) {\n        debugger;\n        throw new Error('invalid int when parsing: ' + v);\n      }\n      return parsed;\n    },\n    stringify: (v) => v.toString(),\n  },\n  string: {\n    parse: (v) => v,\n    stringify: (v) => v,\n  },\n};\n\nexport default function useQueryParam(param, initialValue, format) {\n  // State to store our value\n  // Pass initial state function to useState so logic is only executed once\n  const [storedValue, setStoredValue] = useState(() => {\n    try {\n      // Get from url by param\n      const item = new URL(window.location.href).searchParams.get(param);\n      // Parse stored json or if none return initialValue\n      return item != null ? format.parse(item) : initialValue;\n    } catch (error) {\n      // If error also return initialValue\n      console.log(error);\n      return initialValue;\n    }\n  });\n\n  // Return a wrapped version of useState's setter function that ...\n  // ... persists the new value to query params.\n  const setValue = (value) => {\n    try {\n      // Allow value to be a function so we have same API as useState\n      const valueToStore =\n        typeof value === 'function' ? value(storedValue) : value;\n      // Save state\n      setStoredValue(valueToStore);\n\n      const url = new URL(window.location.href);\n      url.searchParams.set(param, format.stringify(valueToStore));\n      window.history.replaceState(null, null, url.toString());\n    } catch (error) {\n      // A more advanced implementation would handle the error case\n      console.log(error);\n    }\n  };\n\n  return [storedValue, setValue];\n}\n","export default function downloadFile(blob, fileName) {\n  var a = document.createElement('a');\n  document.body.appendChild(a);\n  a.style = 'display: none';\n\n  const url = URL.createObjectURL(blob);\n  a.href = url;\n  a.download = fileName;\n  a.click();\n  URL.revokeObjectURL(url);\n  a.remove();\n}\n","import React from 'react';\nimport downloadFile from './downloadFile';\n\nfunction makeNewRecorder(actx, inputNode) {\n  const chunks = [];\n  const dest = actx.createMediaStreamDestination();\n  const mediaRecorder = new MediaRecorder(dest.stream);\n  inputNode.connect(dest);\n\n  mediaRecorder.ondataavailable = function(evt) {\n    // push each chunk (blobs) in an array\n    chunks.push(evt.data);\n  };\n\n  mediaRecorder.onstop = function(evt) {\n    // Make blob out of our blobs, and open it.\n    var blob = new Blob(chunks, {type: 'audio/ogg; codecs=opus'});\n\n    const fileName = 'audio.ogg';\n\n    downloadFile(blob, fileName);\n  };\n\n  return mediaRecorder;\n}\n\nfunction Recorder(props) {\n  const recorderRef = React.useRef(\n    makeNewRecorder(props.actx, props.inputNode)\n  );\n\n  const [recording, setRecording] = React.useState(false);\n\n  const toggleRecording = React.useCallback(() => setRecording(s => !s), [\n    setRecording,\n  ]);\n\n  React.useEffect(() => {\n    if (recording) {\n      recorderRef.current.start();\n    } else {\n      if (recorderRef.current.state !== 'inactive') {\n        recorderRef.current.stop();\n        recorderRef.current = makeNewRecorder(props.actx, props.inputNode);\n      }\n    }\n  }, [recording]);\n\n  return (\n    <button onClick={toggleRecording}>\n      {recording ? 'stop recording' : 'record audio'}\n    </button>\n  );\n}\n\nfunction ShimRecorder(props) {\n  if (typeof MediaRecorder == 'undefined') {\n    return <button disabled>[recording not available]</button>;\n  }\n\n  return <Recorder {...props} />;\n}\n\nexport default React.memo(ShimRecorder);\n","import React from 'react';\n\nexport default function MidiDeviceSelector({type, onChange, selectedPort}) {\n  const [availablePorts, setAvailablePorts] = React.useState([]);\n\n  const accessType = type == 'input' ? 'inputs' : 'outputs';\n\n  React.useEffect(() => {\n    if (!navigator.requestMIDIAccess) {\n      return;\n    }\n    navigator.requestMIDIAccess().then(access => {\n      setAvailablePorts(Array.from(access[accessType].values()));\n\n      access.onstatechange = function(e) {\n        setAvailablePorts(Array.from(access[accessType].values()));\n      };\n    });\n  }, []);\n\n  return (\n    <label>\n      midi {type == 'input' ? 'in' : 'out'}:{' '}\n      <select\n        onChange={e => {\n          onChange(availablePorts[parseInt(e.currentTarget.value)]);\n        }}\n        value={availablePorts.indexOf(selectedPort)}\n      >\n        <option key={-1} value={-1}>\n          (none)\n        </option>\n        {availablePorts.map((port, i) => (\n          <option key={i} value={i}>\n            {port.name}\n          </option>\n        ))}\n      </select>\n    </label>\n  );\n}\n","import React from 'react';\nimport simplifyEnharmonics from './simplifyEnharmonics';\nimport useKeyboardInteractions from './useKeyboardInteractions';\nimport keyboardStyles from './keyboardStyles';\n\n// tonic, dominant, submediant, mediant, supertonic, leading tone, subdominant\nconst scaleDegreeImportance = [1, 5, 6, 3, 2, 7];\n\nfunction range(size, startAt = 0) {\n  return [...Array(size).keys()].map((i) => i + startAt);\n}\n\nconst styles = {\n  ...keyboardStyles,\n  tonicKey: {\n    background: '#ccc',\n  },\n  noteLabel: {\n    width: 20,\n    marginTop: 70,\n    fontSize: 10,\n  },\n};\n\nconst highlightTypeColors = {\n  scale: '#4287f5',\n  chord: 'orange',\n};\n\nconst qwerty = \"asdfghjkl;'\".split('');\n\nfunction wrap(kX, kLowerBound, kUpperBound) {\n  let range_size = kUpperBound - kLowerBound + 1;\n\n  if (kX < kLowerBound)\n    kX += range_size * ((kLowerBound - kX) / range_size + 1);\n\n  return kLowerBound + ((kX - kLowerBound) % range_size);\n}\n\nfunction getQwertyOffset(key) {\n  const index = qwerty.indexOf(key);\n  if (index > -1) {\n    return index;\n  }\n  return null;\n}\n\nfunction atStartOfOctave(note) {\n  return note[0] > 'B';\n}\n\nfunction Scaleboard(props: {\n  highlightKeys: Array<string>;\n  startOctave: number;\n  octaves: number;\n  highlightType: string;\n  notePlayer: Object;\n  scalePitchClasses: Array<string>;\n  showScaleDegrees: boolean;\n  scaleSteps: number;\n  setOctave: (s) => void;\n}) {\n  const numKeys = props.scaleSteps * props.octaves;\n  const keys = [];\n\n  const {highlightKeys, highlightType, notePlayer} = props;\n\n  const highlightKeysSharpified = React.useMemo(\n    () => (highlightKeys ? highlightKeys.map(simplifyEnharmonics) : null),\n    [highlightKeys]\n  );\n\n  const {pressedKeys, pressedKeysAPI, makeHandlers} = useKeyboardInteractions({\n    notePlayer,\n  });\n\n  const {\n    simplifiedPitchClasses,\n    importance,\n    simplifiedPitchClassesForImportance,\n    notesScaleDegrees,\n    sortedPitchClassesForImportance,\n  } = React.useMemo(() => {\n    const simplifiedPitchClasses = props.scalePitchClasses.map(\n      simplifyEnharmonics\n    );\n    const importance = scaleDegreeImportance.slice(0, props.scaleSteps);\n\n    const simplifiedPitchClassesForImportance = importance.map(\n      (i) => simplifiedPitchClasses[i - 1]\n    );\n\n    const notesScaleDegrees = new Map(\n      scaleDegreeImportance.map((scaleDegree) => [\n        simplifiedPitchClasses[scaleDegree - 1],\n        scaleDegree,\n      ])\n    );\n\n    const sortedPitchClassesForImportance = simplifiedPitchClassesForImportance\n      .slice()\n      .sort((a, b) => {\n        if (atStartOfOctave(a) === atStartOfOctave(b)) {\n          return a < b ? -1 : 1;\n        }\n\n        return atStartOfOctave(a) ? -1 : 1;\n      });\n\n    return {\n      simplifiedPitchClasses,\n      importance,\n      simplifiedPitchClassesForImportance,\n      notesScaleDegrees,\n      sortedPitchClassesForImportance,\n    };\n  }, [props.scalePitchClasses, props.scaleSteps]);\n\n  const qwertyToNoteName = React.useCallback(\n    (key) => {\n      const qwertyOffset = getQwertyOffset(key);\n      if (qwertyOffset == null) {\n        return null;\n      }\n\n      const pitchClass =\n        sortedPitchClassesForImportance[\n          qwertyOffset % sortedPitchClassesForImportance.length\n        ];\n\n      return (\n        pitchClass +\n        Math.min(\n          7,\n          Math.max(\n            0,\n            props.startOctave +\n              Math.floor(qwertyOffset / sortedPitchClassesForImportance.length)\n          )\n        )\n      );\n    },\n    [sortedPitchClassesForImportance, props.startOctave]\n  );\n\n  React.useEffect(() => {\n    const qwertyHandlers = {\n      onKeyDown(e) {\n        const noteName = qwertyToNoteName(e.key);\n        if (noteName != null) {\n          pressedKeysAPI.setKeyPressed(noteName);\n        }\n        switch (e.key) {\n          case 'z':\n            props.setOctave((s) => Math.max(s - 1, 0));\n            break;\n          case 'x':\n            props.setOctave((s) => Math.min(s + 1, 7));\n            break;\n        }\n      },\n      onKeyUp(e) {\n        const noteName = qwertyToNoteName(e.key);\n        if (noteName != null) {\n          pressedKeysAPI.setKeyReleased(noteName);\n        }\n      },\n    };\n\n    document.addEventListener('keydown', qwertyHandlers.onKeyDown);\n    document.addEventListener('keyup', qwertyHandlers.onKeyUp);\n    return () => {\n      document.removeEventListener('keydown', qwertyHandlers.onKeyDown);\n      document.removeEventListener('keyup', qwertyHandlers.onKeyUp);\n    };\n  }, [pressedKeysAPI, qwertyToNoteName, props.setOctave]);\n\n  range(props.octaves, props.startOctave).forEach((octave, octaveOffset) => {\n    sortedPitchClassesForImportance.forEach((note, noteOffset) => {\n      const noteName = note + octave;\n      const isTonic = note === props.scalePitchClasses[0];\n      keys.push(\n        <div\n          key={noteName}\n          {...makeHandlers(noteName)}\n          style={{\n            ...styles.whiteKey,\n            ...(isTonic ? styles.tonicKey : null),\n            ...(highlightKeysSharpified &&\n            highlightKeysSharpified.includes(noteName)\n              ? {background: highlightTypeColors[highlightType]}\n              : null),\n            ...(pressedKeys.has(noteName) ? styles.pressed : null),\n            left:\n              (octaveOffset * simplifiedPitchClassesForImportance.length +\n                noteOffset) *\n              (styles.whiteKey.width - 1),\n          }}\n        >\n          <div style={styles.noteLabel}>\n            {props.showScaleDegrees\n              ? notesScaleDegrees.get(note)\n              : isTonic\n              ? noteName\n              : note}\n          </div>\n        </div>\n      );\n    });\n  });\n  return (\n    <div style={styles.container}>\n      <div style={{...styles.keyboard, width: numKeys * styles.whiteKey.width}}>\n        {keys}\n      </div>\n    </div>\n  );\n}\n\nexport default React.memo(Scaleboard);\n","import React from 'react';\nimport {Midi} from '@tonejs/midi';\nimport downloadFile from './downloadFile';\nimport * as Tonal from '@tonaljs/tonal';\n\nexport default function({history, beatDurationSeconds, bpm, strumming}) {\n  const exportHistory = React.useCallback(() => {\n    // create a new midi file\n    const midi = new Midi();\n    midi.header.setTempo(bpm);\n    // add a track\n    const track = midi.addTrack();\n\n    history.forEach((chordData, eventIdx) => {\n      const chordNotes = chordData.chordNotesForOctave;\n      const beatStart = eventIdx * beatDurationSeconds * 2;\n      const strummingSeconds = strumming / 1000;\n\n      chordNotes.forEach((noteName, i) => {\n        const strumDelay = i * strummingSeconds;\n\n        track.addNote({\n          midi: Tonal.note(noteName).midi,\n          // seconds\n          time: beatStart + strumDelay,\n          duration: beatDurationSeconds + strumDelay,\n        });\n      });\n    });\n\n    const blob = new Blob([midi.toArray()], {type: 'audio/midi'});\n    downloadFile(blob, 'export.mid');\n  }, [history]);\n\n  return <button onClick={exportHistory}>export midi</button>;\n}\n","import React from 'react';\n\nexport default function Details({summary, children, startOpen}) {\n  const [open, setOpen] = React.useState(startOpen);\n\n  const onToggle = React.useCallback(\n    (e) => {\n      e.preventDefault();\n      e.stopPropagation();\n      setOpen(!open);\n    },\n    [open]\n  );\n\n  return (\n    <details open={open}>\n      <summary onClick={onToggle}>{summary}</summary>\n      {open && children}\n    </details>\n  );\n}\n","import React from 'react';\n\nexport default function Select({label, options, type, value, onChange}) {\n  return (\n    <label>\n      {label}:{' '}\n      <select\n        value={value}\n        onChange={React.useCallback(\n          (event) =>\n            onChange(\n              type === 'number'\n                ? parseFloat(event.currentTarget.value)\n                : event.currentTarget.value\n            ),\n          [onChange, type]\n        )}\n      >\n        {options.map((key) => {\n          return (\n            <option key={key} value={key}>\n              {key}\n            </option>\n          );\n        })}\n      </select>\n    </label>\n  );\n}\n","import React from 'react';\n\nexport default function Range({\n  label,\n  min,\n  max,\n  step,\n  value,\n  formatValue,\n  showValue,\n  onChange,\n}) {\n  return (\n    <label>\n      {label}:{' '}\n      <input\n        type=\"range\"\n        min={min}\n        max={max}\n        value={value}\n        onChange={React.useCallback(\n          (e) => {\n            onChange(parseInt(e.currentTarget.value));\n          },\n          [onChange]\n        )}\n      />\n      {showValue && (\n        <>\n          {' '}\n          <input\n            type=\"number\"\n            value={formatValue ? formatValue(value) : value}\n            readOnly\n          />\n        </>\n      )}\n    </label>\n  );\n}\n","import React from 'react';\n\nexport default function Checkbox({label, checked, onChange}) {\n  return (\n    <label>\n      <input\n        type=\"checkbox\"\n        onChange={React.useCallback(() => onChange((s) => !s), [onChange])}\n        checked={checked}\n      />\n      {label}\n    </label>\n  );\n}\n","import React from 'react';\n\nimport {useRef} from 'react';\n\nconst SHOW_NOTE_NAMES = true;\nconst SHOW_NOTE_OCTS = true;\nconst SHOW_FULL_CHORD_NAMES = false;\n\nconst chordTypeColors = {\n  major: 'rgb(127,199,175)',\n  minor: 'rgb(255,158,157)',\n  diminished: 'rgb(218,216,167)',\n};\n\nconst buttonStyle = {\n  display: 'block',\n  width: '100%',\n  cursor: 'pointer',\n  color: 'black',\n  padding: 4,\n  paddingBottom: 8,\n  height: SHOW_FULL_CHORD_NAMES ? 62 : 46,\n  overflow: 'hidden',\n  textAlign: 'center',\n};\n\nexport default React.memo(function ChordButton({\n  chordData,\n  playChord,\n  endChord,\n  source,\n  octave,\n  strumming,\n  strumMode,\n  selected,\n  showScaleDegrees,\n  onMouseOver,\n}) {\n  let noteNames = null;\n\n  const chordStartedRef = useRef(false);\n\n  if (SHOW_NOTE_NAMES) {\n    if (showScaleDegrees) {\n      noteNames = (\n        <div>\n          <small>\n            {chordData.chord.intervals\n              // .map((v) => v.replace(/\\D*/g, ''))\n              .join()}\n          </small>\n        </div>\n      );\n    } else {\n      noteNames = (\n        <div>\n          <small>\n            {SHOW_NOTE_OCTS\n              ? chordData.chordNotesForOctave.join()\n              : chordData.chord.notes.join()}\n          </small>\n        </div>\n      );\n    }\n  }\n\n  return (\n    <div\n      style={{\n        ...buttonStyle,\n        background: chordTypeColors[chordData.chordType],\n        border: '1px solid',\n        borderColor: selected ? 'rgba(0,0,0,0.2)' : 'transparent',\n      }}\n      onMouseDown={() => {\n        chordStartedRef.current = true;\n        playChord(chordData, strumming, strumMode, source);\n        console.log(chordData);\n      }}\n      onMouseUp={() => {\n        if (chordStartedRef.current) {\n          endChord(chordData, strumming, strumMode, source);\n        }\n        chordStartedRef.current = false;\n      }}\n      onMouseEnter={(e) => {\n        if (e.buttons > 0) {\n          chordStartedRef.current = true;\n          playChord(chordData, strumming, strumMode, source);\n        }\n        onMouseOver(chordData.chordNotesForOctave);\n      }}\n      onMouseLeave={(e) => {\n        if (e.buttons > 0) {\n          if (chordStartedRef.current) {\n            endChord(chordData, strumming, strumMode, source);\n          }\n          chordStartedRef.current = false;\n        }\n      }}\n    >\n      <div>\n        {chordData.chordName}\n        {SHOW_FULL_CHORD_NAMES && (\n          <div>\n            <small>\n              {chordData.chord.name.length > 3 ? (\n                chordData.chord.name\n              ) : (\n                // bad data, don't show\n                <span>&nbsp;</span>\n              )}\n            </small>\n          </div>\n        )}\n        {noteNames}\n      </div>\n    </div>\n  );\n});\n","import React from 'react';\nimport {knuthShuffle} from 'knuth-shuffle';\nimport * as Tonal from '@tonaljs/tonal';\nimport * as Scale from '@tonaljs/scale';\nimport * as Chord from '@tonaljs/chord';\nimport * as Note from '@tonaljs/note';\nimport Recorder from './Recorder';\nimport useQueryParam, {QUERY_PARAM_FORMATS} from './useQueryParam';\nimport useValueObserver from './useValueObserver';\nimport MidiDeviceSelector from './MidiDeviceSelector';\nimport Keyboard from './Keyboard';\nimport Scaleboard from './Scaleboard';\nimport MidiExport from './MidiExport';\nimport Details from './Details';\nimport Select from './Select';\nimport Range from './Range';\nimport Checkbox from './Checkbox';\nimport ChordButton from './ChordButton';\n\nconst SIZE_ASC = true;\nconst SHOW_HISTORY = true;\n\nconst strummingTimes = [0, 10, 30, 50, 75, 100, 150, 200];\nconst strummingTimesIndex = {};\nstrummingTimes.forEach((v, i) => {\n  strummingTimesIndex[v] = i;\n});\n\nfunction range(size, startAt = 0) {\n  return [...Array(size).keys()].map((i) => i + startAt);\n}\nfunction transposeByOctaves(note, shift) {\n  return `${note.pc}${note.oct + shift}`;\n}\n\nfunction getChordsBySize(chords, key) {\n  return chords\n    .map((chordType) => Chord.chord(`${key}${chordType}`))\n    .sort((a, b) => a.intervals.length - b.intervals.length)\n    .map((chord) => `${chord.tonic}${chord.aliases[0]}`);\n}\n\nconst keys = ['C', 'C#', 'D', 'D#', 'E', 'F', 'F#', 'G', 'G#', 'A', 'Bb', 'B'];\n\nconst scaleTypesChordPatterns = {\n  major: ['major', 'minor', 'minor', 'major', 'major', 'minor', 'diminished'],\n  minor: ['minor', 'diminished', 'major', 'minor', 'minor', 'major', 'major'],\n  dorian: ['minor', 'minor', 'major', 'major', 'minor', 'diminished', 'major'],\n  lydian: ['major', 'major', 'minor', 'diminished', 'major', 'minor', 'minor'],\n  phrygian: [\n    'minor',\n    'major',\n    'major',\n    'minor',\n    'diminished',\n    'major',\n    'minor',\n  ],\n  ionian: ['major', 'minor', 'minor', 'major', 'major', 'minor', 'diminished'],\n  mixolydian: [\n    'major',\n    'minor',\n    'diminished',\n    'major',\n    'minor',\n    'minor',\n    'major',\n  ],\n  locrian: ['diminished', 'major', 'minor', 'minor', 'major', 'major', 'minor'],\n};\n\nconst allScales = Object.keys(scaleTypesChordPatterns);\n\nconst romanNumerals = ['i', 'ii', 'iii', 'iv', 'v', 'vi', 'vii'];\n// const scaleTypesPosNames = {\n//   major: ['I', 'ii', 'iii', 'VI', 'V', 'vi', 'vii*'],\n//   minor: ['i', 'ii*', 'III', 'iv', 'v', 'VI', 'VII'],\n// };\nconst scaleTypesPosNames = Object.keys(scaleTypesChordPatterns).reduce(\n  (acc, scaleName) => {\n    const pattern = scaleTypesChordPatterns[scaleName];\n\n    acc[scaleName] = pattern.map((scaleType, i) => {\n      const pos = romanNumerals[i];\n\n      switch (scaleType) {\n        case 'major':\n          return pos.toUpperCase();\n        case 'minor':\n          return pos;\n        case 'diminished':\n          return pos + '\\xB0';\n        default:\n          throw new Error(`unknown scaleType '${scaleType}'`);\n      }\n    });\n\n    return acc;\n  },\n  {}\n);\n\nfunction getScaleChords(key, scaleType) {\n  return Scale.scale(key + ' ' + scaleType).notes.map((pc, pos) =>\n    getChordsBySize(\n      Scale.scaleChords(scaleTypesChordPatterns[scaleType][pos]),\n      pc\n    )\n  );\n}\n\nconst bpm = 140;\nconst beatDurationSeconds = (1 / bpm) * 60;\n\nconst NOTE_ON = 0x90;\nconst NOTE_OFF = 0x80;\nconst velocityMidi = 80;\n\nfunction onTick(events, audioApi, onMidi) {\n  let i = 0;\n  for (; i < events.length; i++) {\n    const nextEvent = events[i];\n    if (nextEvent.time > audioApi.actx.currentTime) {\n      break;\n    }\n\n    onMidi(nextEvent.message);\n  }\n\n  return i === 0 ? events : events.slice(i);\n}\n\nfunction playNoteOnOff(events, noteName, start, end) {\n  const noteMidi = Tonal.note(noteName).midi;\n\n  let updatedEvents = events;\n  // end any upcoming events for this key\n  events.forEach((ev) => {\n    if (ev.message[1] === noteMidi) {\n      ev.time = start - 0.01;\n      ev.message[0] = NOTE_OFF;\n    }\n  });\n\n  return addEvents(updatedEvents, [\n    {\n      message: [NOTE_ON, noteMidi, velocityMidi],\n      time: start,\n    },\n    {\n      message: [NOTE_OFF, noteMidi, velocityMidi],\n      time: end,\n    },\n  ]);\n}\nfunction playNoteOn(events, noteName, time) {\n  const noteMidi = Tonal.note(noteName).midi;\n\n  let updatedEvents = events;\n  return addEvents(updatedEvents, [\n    {\n      message: [NOTE_ON, noteMidi, velocityMidi],\n      time: time,\n    },\n  ]);\n}\nfunction playNoteOff(events, noteName, time) {\n  const noteMidi = Tonal.note(noteName).midi;\n\n  let updatedEvents = events;\n  return addEvents(updatedEvents, [\n    {\n      message: [NOTE_OFF, noteMidi, velocityMidi],\n      time: time,\n    },\n  ]);\n}\n\nfunction addEvents(events, newEvents) {\n  const updatedEvents = events.concat(newEvents);\n  updatedEvents.sort((a, b) => a.time - b.time);\n  return updatedEvents;\n}\n\nfunction makeOctaveScaleNoteSequence(key, octave, scaleType) {\n  const scaleNotes = Scale.scale(`${key}${octave} ${scaleType}`).notes;\n\n  scaleNotes.push(transposeByOctaves(Tonal.note(scaleNotes[0]), 1));\n\n  return scaleNotes;\n}\n\n// get the notes for a chord, for an octave\nfunction getReifiedNotesForChord(chordName, octave) {\n  const chordData = Chord.chord(chordName);\n  const tonicReified = chordData.tonic + octave;\n  const notes = chordData.intervals.map((interval) =>\n    Tonal.transpose(tonicReified, interval)\n  );\n  return notes;\n}\n\n// we need to make sure that the tonic is from the correct octave when the\n// scale spans multiple octaves\nfunction getReifiedNotesForChordForScale(chordName, scalePitchClassesNotesMap) {\n  const chordData = Chord.chord(chordName);\n  const tonicReified = scalePitchClassesNotesMap[chordData.tonic];\n  const notes = chordData.intervals.map((interval) =>\n    Note.simplify(Tonal.transpose(tonicReified, interval))\n  );\n  return notes;\n}\n\nfunction reifyScaleNotesWithOctave(scale, octave) {\n  return scale.intervals.map((interval) =>\n    Tonal.transpose(`${scale.tonic}${octave}`, interval)\n  );\n}\n\nfunction makeScaleData(key, scaleType, octave) {\n  const scale = Scale.scale(`${key} ${scaleType}`);\n  const scalePitchClasses = scale.notes;\n\n  const scaleNotes = reifyScaleNotesWithOctave(scale, octave);\n  const scalePitchClassesNotesMap = {};\n  scaleNotes.forEach((noteName) => {\n    scalePitchClassesNotesMap[Tonal.note(noteName).pc] = noteName;\n  });\n\n  const scalePosChords = new Map(\n    getScaleChords(key, scaleType).map((chordNames, pos) => {\n      return [\n        pos,\n\n        chordNames.map((chordName) => {\n          const chord = Chord.chord(chordName);\n          return {\n            pos,\n            chord,\n            chordType: scaleTypesChordPatterns[scaleType][pos],\n            chordNotesForOctave: getReifiedNotesForChordForScale(\n              chordName,\n              scalePitchClassesNotesMap\n            ),\n            chordName,\n            size:\n              chord.intervals.length * (chord.quality === 'Unknown' ? -1 : 1),\n          };\n        }),\n      ];\n    })\n  );\n\n  const sizes = new Set();\n  scalePosChords.forEach((chordDatas, pos) => {\n    chordDatas.forEach((chordData) => {\n      sizes.add(chordData.size);\n    });\n  });\n\n  return {\n    scaleType,\n    key,\n    scalePitchClasses,\n    scalePosChords,\n    scaleNotes,\n    sizes: Array.from(sizes).sort((a, b) => a - b),\n  };\n}\n\nconst flexColContainer = {\n  display: 'flex',\n};\nconst flexCol = {\n  flex: 1,\n};\nconst alignLeft = {\n  textAlign: 'left',\n};\nconst alignCenter = {textAlign: 'center'};\n\nfunction App({audioApi}) {\n  const resumeAudio = React.useCallback(() => audioApi.actx.resume(), [\n    audioApi,\n  ]);\n  const suspendAudio = React.useCallback(() => audioApi.actx.suspend(), [\n    audioApi,\n  ]);\n\n  const [key, setKey] = useQueryParam('key', 'C', QUERY_PARAM_FORMATS.string);\n  const [strumming, setStrumming] = useQueryParam(\n    'strumming',\n    strummingTimes[2],\n    QUERY_PARAM_FORMATS.integer\n  );\n\n  const [strumMode, setStrumMode] = useQueryParam(\n    'strumMode',\n    'up',\n    QUERY_PARAM_FORMATS.string\n  );\n\n  const [includeExtra, setIncludeExtra] = useQueryParam(\n    'includeExtra',\n    false,\n    QUERY_PARAM_FORMATS.boolean\n  );\n  const [oneShot, setOneShot] = useQueryParam(\n    'oneShot',\n    true,\n    QUERY_PARAM_FORMATS.boolean\n  );\n  const [lastChord, setLastChord] = React.useState(null);\n  const [octave, setOctave] = useQueryParam(\n    'octave',\n    4,\n    QUERY_PARAM_FORMATS.integer\n  );\n  const [scaleType, setScaleType] = useQueryParam(\n    'scaleType',\n    'major',\n    QUERY_PARAM_FORMATS.string\n  );\n  const [showScaleDegrees, setShowScaleDegrees] = useQueryParam(\n    'showScaleDegrees',\n    true,\n    QUERY_PARAM_FORMATS.boolean\n  );\n\n  const [scaleSteps, setScaleSteps] = useQueryParam(\n    'scaleSteps',\n    7,\n    QUERY_PARAM_FORMATS.integer\n  );\n  const [chordPaletteOctaves, setChordPaletteOctaves] = useQueryParam(\n    'chordPaletteOctaves',\n    1,\n    QUERY_PARAM_FORMATS.integer\n  );\n\n  const [highlightedKeys, setHighlightedKeys] = React.useState(null);\n  const setHighlightedChord = React.useCallback(\n    (keys) => setHighlightedKeys({keys, type: 'chord'}),\n    [setHighlightedKeys]\n  );\n\n  const [history, setHistory] = React.useState([]);\n  const clearHistory = React.useCallback(() => setHistory([]), [setHistory]);\n\n  const scaleData = React.useMemo(() => makeScaleData(key, scaleType, octave), [\n    key,\n    scaleType,\n    octave,\n  ]);\n\n  const chordDataByOctave = React.useMemo(() => {\n    return range(chordPaletteOctaves).map((octaveOffset) => {\n      return makeScaleData(key, scaleType, octave + octaveOffset);\n    });\n  }, [key, scaleType, octave, chordPaletteOctaves]);\n\n  const setHighlightedScale = React.useCallback(() => {\n    setHighlightedKeys({keys: scaleData.scaleNotes, type: 'scale'});\n  }, [scaleData]);\n\n  const [events, setEvents] = React.useState([]);\n  const [midiOut, setMidiOut] = React.useState(null);\n\n  const playScale = React.useCallback(() => {\n    setEvents((events) => {\n      let updatedEvents = events;\n      const scaleNotes = scaleData.scaleNotes.slice();\n      scaleNotes.push(Tonal.transpose(scaleNotes[0], '8P'));\n      const currentTime = audioApi.actx.currentTime;\n      let lastStartTimeOffset = 0;\n      scaleNotes.forEach((noteName) => {\n        lastStartTimeOffset += beatDurationSeconds;\n\n        updatedEvents = playNoteOnOff(\n          updatedEvents,\n          noteName,\n          currentTime + lastStartTimeOffset,\n          currentTime + lastStartTimeOffset + beatDurationSeconds\n        );\n      });\n\n      return updatedEvents;\n    });\n  }, [setEvents, audioApi, scaleData]);\n\n  const playChord = React.useCallback(\n    (chordData, strumming, strumMode, source) => {\n      const chordNotes = chordData.chordNotesForOctave;\n\n      setEvents((events) => {\n        let updatedEvents = events;\n\n        const currentTime = audioApi.actx.currentTime;\n\n        let notes = chordNotes.slice();\n\n        if (strumMode === 'down') {\n          notes.reverse();\n        } else if (strumMode === 'random') {\n          knuthShuffle(notes);\n        }\n\n        notes.forEach((noteName, i) => {\n          const strumDelay = i * (strumming / 1000);\n          if (oneShot) {\n            updatedEvents = playNoteOnOff(\n              updatedEvents,\n              noteName,\n              currentTime + strumDelay,\n              currentTime + beatDurationSeconds + i * (strumming / 1000)\n            );\n          } else {\n            updatedEvents = playNoteOn(\n              updatedEvents,\n              noteName,\n              currentTime + strumDelay\n            );\n          }\n        });\n\n        return updatedEvents;\n      });\n\n      if (source !== 'history') {\n        setHistory((s) => s.concat(chordData));\n        setLastChord(chordData.chordName);\n      }\n    },\n    [setEvents, audioApi, oneShot]\n  );\n\n  const endChord = React.useCallback(\n    (chordData, strumming, strumMode, source) => {\n      if (oneShot) return;\n      const chordNotes = chordData.chordNotesForOctave;\n\n      setEvents((events) => {\n        let updatedEvents = events;\n\n        const currentTime = audioApi.actx.currentTime;\n\n        let notes = chordNotes.slice();\n\n        notes.forEach((noteName, i) => {\n          updatedEvents = playNoteOff(updatedEvents, noteName, currentTime);\n        });\n\n        return updatedEvents;\n      });\n    },\n    [setEvents, audioApi, oneShot]\n  );\n\n  useValueObserver(scaleData, setHighlightedScale);\n\n  const onMidi = React.useMemo(() => {\n    if (midiOut) {\n      if (!midiOut.send) {\n        debugger;\n      }\n      return (message) => midiOut.send(message);\n    } else if (audioApi.dx7) {\n      return (message) => audioApi.dx7.onMidi(message);\n    }\n    return (message) => {};\n  }, [audioApi, midiOut]);\n\n  const notePlayer = React.useMemo(() => {\n    return {\n      triggerAttack(noteName) {\n        onMidi([NOTE_ON, Tonal.note(noteName).midi, velocityMidi]);\n      },\n      triggerRelease(noteName) {\n        onMidi([NOTE_OFF, Tonal.note(noteName).midi, velocityMidi]);\n      },\n    };\n  }, [onMidi]);\n\n  // startup\n  React.useEffect(() => {\n    // start event-consuming interval\n    const id = setInterval(() => {\n      setEvents((events) => onTick(events, audioApi, onMidi));\n    }, 1);\n    return () => {\n      clearInterval(id);\n    };\n  }, [onMidi, audioApi]);\n\n  return (\n    <div className=\"App\" style={alignLeft}>\n      <div /*controls*/>\n        <button onClick={suspendAudio}>pause audio</button>\n        <button onClick={resumeAudio}>resume audio</button>\n        {audioApi.dx7 && (\n          <Recorder actx={audioApi.actx} inputNode={audioApi.dx7} />\n        )}\n        <MidiDeviceSelector\n          type=\"output\"\n          selectedPort={midiOut}\n          onChange={setMidiOut}\n        />\n        <div onMouseOver={setHighlightedScale}>\n          <Select\n            label=\"key\"\n            options={keys}\n            value={scaleData.key}\n            onChange={setKey}\n          />{' '}\n          <Select\n            label=\"octave\"\n            type=\"number\"\n            options={[1, 2, 3, 4, 5, 6, 7]}\n            value={octave}\n            onChange={setOctave}\n          />{' '}\n          <Select\n            label=\"scale type\"\n            options={allScales}\n            value={scaleType}\n            onChange={setScaleType}\n          />{' '}\n          <label>scale notes: </label>\n          {scaleData.scaleNotes.map((note) => Note.simplify(note)).join()}{' '}\n          <button onClick={playScale}>play scale</button>{' '}\n          <Checkbox\n            label=\"show notes as scale degrees\"\n            onChange={setShowScaleDegrees}\n            checked={showScaleDegrees}\n          />\n        </div>\n      </div>\n      <Details summary=\"scale keyboard\" startOpen={true}>\n        <Select\n          label=\"scale steps\"\n          options={[1, 2, 3, 4, 5, 6, 7]}\n          type=\"number\"\n          value={scaleSteps}\n          onChange={setScaleSteps}\n        />\n        <Scaleboard\n          scalePitchClasses={scaleData.scalePitchClasses}\n          highlightKeys={\n            highlightedKeys && highlightedKeys.type !== 'scale'\n              ? highlightedKeys.keys\n              : null\n          }\n          setOctave={setOctave}\n          startOctave={Math.max(0, octave - 1)}\n          octaves={5}\n          highlightType={highlightedKeys ? highlightedKeys.type : 'scale'}\n          notePlayer={notePlayer}\n          showScaleDegrees={showScaleDegrees}\n          scaleSteps={scaleSteps}\n        />\n      </Details>\n      <Details summary=\"keyboard\" startOpen={true}>\n        <Keyboard\n          highlightKeys={highlightedKeys ? highlightedKeys.keys : null}\n          startOctave={Math.max(0, octave - 1)}\n          octaves={5}\n          highlightType={highlightedKeys ? highlightedKeys.type : 'scale'}\n          notePlayer={notePlayer}\n        />\n      </Details>\n      {SHOW_HISTORY && (\n        <div style={alignLeft}>\n          <details>\n            <summary style={alignLeft}>\n              <div style={{display: 'initial'}}>history/export</div>\n            </summary>\n            <div style={{padding: '8px 0'}}>\n              <MidiExport\n                bpm={bpm}\n                history={history}\n                strumming={strumming}\n                beatDurationSeconds={beatDurationSeconds}\n              />\n              <button onClick={clearHistory}>clear history</button>\n            </div>\n            <div style={{width: `90vw`, overflow: 'auto', display: 'flex'}}>\n              {history\n                .slice()\n                .reverse()\n                .map((chordData, i) => (\n                  <div key={i} style={{width: `${(1 / 7) * 100}vw`}}>\n                    <ChordButton\n                      {...{\n                        chordData,\n                        playChord,\n                        endChord,\n                        strumming,\n                        strumMode,\n                        showScaleDegrees,\n                        selected: false,\n                        onMouseOver: setHighlightedChord,\n                        source: 'history',\n                      }}\n                    />\n                  </div>\n                ))}\n              {history.length === 0 && (\n                <div>played chords will appear here</div>\n              )}\n            </div>\n          </details>\n        </div>\n      )}\n\n      <Details summary=\"chord palette\" startOpen={true}>\n        <Range\n          label=\"strumming\"\n          min={0}\n          max={strummingTimes.length - 1}\n          value={strummingTimesIndex[strumming]}\n          onChange={(value) => {\n            setStrumming(strummingTimes[value]);\n          }}\n        />\n        <Select\n          label=\"strum mode\"\n          options={['up', 'down', 'random']}\n          value={strumMode}\n          onChange={setStrumMode}\n        />{' '}\n        <Select\n          label=\"octaves\"\n          type=\"number\"\n          options={[1, 2]}\n          value={chordPaletteOctaves}\n          onChange={setChordPaletteOctaves}\n        />{' '}\n        <Checkbox\n          label=\"include extra chords\"\n          onChange={setIncludeExtra}\n          checked={includeExtra}\n        />{' '}\n        <Checkbox label=\"oneshot\" onChange={setOneShot} checked={oneShot} />\n        <div style={{...flexColContainer, ...alignCenter}}>\n          {chordDataByOctave.map((scaleData, index) => {\n            return (\n              <div style={flexCol} key={index}>\n                {scaleData.sizes\n                  .filter((size) => (includeExtra ? true : size > 0))\n                  .sort((a, b) => (SIZE_ASC ? a - b : b - a))\n                  .map((size, sizeIndex) => (\n                    <div key={sizeIndex}>\n                      {false && <div style={{flex: 1}}>{size}</div>}\n                      <br />\n                      <div key={size} style={{display: 'flex'}}>\n                        {Array.from(scaleData.scalePosChords).map(\n                          ([pos, chordDatas]) => {\n                            return (\n                              <div key={pos} style={{flex: 1}}>\n                                {sizeIndex === 0 && (\n                                  <div>\n                                    {scaleTypesPosNames[scaleType][pos]}\n                                  </div>\n                                )}\n\n                                {chordDatas\n                                  .filter(\n                                    (chordData) => chordData.size === size\n                                  )\n                                  // silly heuristic for simpler chords\n                                  .sort(\n                                    (a, b) =>\n                                      a.chordName.length - b.chordName.length\n                                  )\n                                  .map((chordData, i) => (\n                                    <ChordButton\n                                      key={i}\n                                      {...{\n                                        chordData,\n                                        playChord,\n                                        endChord,\n                                        source: 'grid',\n                                        strumming,\n                                        strumMode,\n                                        showScaleDegrees,\n                                        selected:\n                                          chordData.chordName === lastChord,\n                                        onMouseOver: setHighlightedChord,\n                                      }}\n                                    />\n                                  ))}\n                              </div>\n                            );\n                          }\n                        )}\n                      </div>\n                    </div>\n                  ))}\n              </div>\n            );\n          })}\n        </div>\n      </Details>\n      <Details summary=\"midi events\">\n        <pre style={{height: 300, overflow: 'auto'}}>\n          {events.map((ev) => JSON.stringify(ev)).join('\\n')}\n        </pre>\n      </Details>\n    </div>\n  );\n}\n\nexport default App;\n","// @flow\nimport React from 'react';\nimport useQueryParam, {QUERY_PARAM_FORMATS} from './useQueryParam';\nimport useLocalStorage from './useLocalStorage';\nimport './App.css';\nimport App from './App';\n\nconst USE_SAMPLED_DX7 = Boolean(\n  new URL(document.location.href).searchParams.get('sampled')\n);\n\nfunction nonnull<T>(v: ?T): T {\n  if (v == null) {\n    throw new Error('unexpected null');\n  }\n  return v;\n}\n\nfunction Theme() {\n  const [darkMode, setDarkMode] = useLocalStorage('darkMode', false);\n\n  React.useEffect(() => {\n    if (darkMode) {\n      nonnull(document.documentElement).classList.add('dark-mode');\n    } else {\n      nonnull(document.documentElement).classList.remove('dark-mode');\n    }\n  }, [darkMode]);\n\n  return (\n    <div style={{position: 'absolute', top: 0, right: 0}}>\n      <label>\n        dark mode:{' '}\n        <input\n          type=\"checkbox\"\n          checked={darkMode}\n          onChange={() => setDarkMode((s) => !s)}\n        />\n      </label>\n    </div>\n  );\n}\n\nfunction useRouting() {\n  const [route] = useQueryParam(\n    'route',\n    'chordpalette',\n    QUERY_PARAM_FORMATS.string\n  );\n\n  switch (route) {\n    case 'exploder':\n      return React.lazy(() => import('./MidiExploder'));\n    case 'chordpalette':\n    default:\n      return App;\n  }\n}\n\nfunction Startup() {\n  const [startedAudio, setStartedAudio] = React.useState(false);\n  const [audioApi, setAudioApi] = React.useState(null);\n\n  const onStart = React.useCallback(() => {\n    nonnull(document.querySelector('.dx7')).style.visibility = 'visible';\n    nonnull(document.querySelector('.intro')).style.display = 'none';\n\n    setStartedAudio(true);\n  }, [setStartedAudio]);\n\n  React.useEffect(() => {\n    async function initSampled() {\n      const {sampledDX7} = await import('./sampledDX7');\n\n      sampledDX7().then(({dx7, actx}) => {\n        window.initDX7Shim(dx7, actx);\n      });\n    }\n    window.onDX7Init = (dx7, actx) => {\n      if (!dx7) {\n        // fall back to sampled\n        return initSampled();\n      }\n      const newAudioApi = {\n        dx7,\n        actx,\n      };\n\n      setAudioApi(newAudioApi);\n      if (actx.state === 'running') {\n        onStart();\n      }\n    };\n    if (USE_SAMPLED_DX7) {\n      initSampled();\n    } else {\n      window.initDX7(process.env.PUBLIC_URL);\n    }\n  }, []);\n\n  const Route = useRouting();\n  if (audioApi && startedAudio) {\n    return (\n      <React.Suspense fallback={<div>loading...</div>}>\n        <div>\n          {<Route {...{audioApi}} />}\n          <Theme />\n        </div>\n      </React.Suspense>\n    );\n  }\n\n  return (\n    <div className=\"App\">\n      {audioApi ? (\n        <button\n          style={{fontSize: 42, borderRadius: 9, cursor: 'pointer'}}\n          onClick={() => {\n            audioApi.actx.resume();\n            onStart();\n          }}\n        >\n          start\n        </button>\n      ) : (\n        'loading...'\n      )}\n    </div>\n  );\n}\n\nexport default Startup;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Startup from './Startup';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Startup />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","export default {\n  container: {\n    textAlign: 'center',\n  },\n  keyboard: {\n    display: 'inline-block',\n    position: 'relative',\n    height: 70,\n    marginTop: 16,\n    marginBottom: 20,\n    cursor: 'pointer',\n  },\n  whiteKey: {\n    position: 'absolute',\n    borderBottomLeftRadius: 4,\n    borderBottomRightRadius: 4,\n    width: 20,\n    height: 70,\n    background: 'white',\n    border: 'solid 1px black',\n    zIndex: 0,\n  },\n  noteLabel: {\n    width: 20,\n    marginTop: 70,\n  },\n  highlighted: {\n    background: 'orange',\n  },\n  blackKey: {\n    position: 'absolute',\n    borderBottomLeftRadius: 3,\n    borderBottomRightRadius: 3,\n    width: 9,\n    height: 50,\n    background: 'black',\n    border: 'solid 1px black',\n\n    zIndex: 1,\n  },\n  pressed: {\n    background: '#7f4af9',\n  },\n};\n"],"sourceRoot":""}