{"version":3,"sources":["logo.svg","downloadFile.js","Recorder.js","useLocalStorage.js","MidiOutput.js","Keyboard.js","MidiExport.js","App.js","useValueObserver.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","downloadFile","blob","fileName","a","document","createElement","body","appendChild","style","url","URL","createObjectURL","href","download","click","revokeObjectURL","remove","makeNewRecorder","actx","inputNode","chunks","dest","createMediaStreamDestination","mediaRecorder","MediaRecorder","stream","connect","ondataavailable","evt","push","data","onstop","Blob","type","Recorder","props","recorderRef","React","useRef","_React$useState","useState","_React$useState2","Object","slicedToArray","recording","setRecording","toggleRecording","useCallback","s","useEffect","current","start","state","stop","react_default","onClick","memo","disabled","useLocalStorage","baseKey","initialValue","key","concat","_useState","item","window","localStorage","getItem","JSON","parse","error","console","log","_useState2","storedValue","setStoredValue","value","valueToStore","Function","setItem","stringify","MidiOutput","_ref","onChangeOutput","selectedOutput","outputs","setOutputs","navigator","requestMIDIAccess","then","access","Array","from","values","onstatechange","e","onChange","parseInt","currentTarget","indexOf","map","output","i","name","whiteNotes","notesWithSharps","Set","styles","container","textAlign","keyboard","display","position","height","marginBottom","whiteKey","borderBottomLeftRadius","borderBottomRightRadius","width","background","border","zIndex","noteLabel","marginTop","highlighted","blackKey","numKeys","length","octaves","keys","size","startAt","arguments","undefined","toConsumableArray","range","startOctave","forEach","octave","octaveOffset","note","noteOffset","noteName","noteNameSharp","objectSpread","highlightKeys","includes","left","has","MidiExport","history","beatDurationSeconds","bpm","strumming","exportHistory","midi","Midi","header","setTempo","track","addTrack","chordData","eventIdx","chordNotes","chordNotesForOctave","beatStart","strummingSeconds","strumDelay","addNote","Tonal","time","duration","toArray","SIZE_ASC","SHOW_HISTORY","USE_SAMPLED_DX7","Boolean","location","searchParams","get","strummingTimes","strummingTimesIndex","v","scaleTypesChordPatterns","major","minor","dorian","lydian","phrygian","ionian","mixolydian","locrian","allScales","romanNumerals","scaleTypesPosNames","reduce","acc","scaleName","pattern","scaleType","pos","toUpperCase","Error","getScaleChords","Scale","notes","pc","chords","chordType","Chord","sort","b","intervals","chord","tonic","aliases","NOTE_ON","NOTE_OFF","velocityMidi","playNote","events","end","noteMidi","updatedEvents","ev","message","newEvents","addEvents","getReifiedNotesForChordForScale","chordName","scalePitchClassesNotesMap","tonicReified","interval","Note","makeScaleData","scale","scalePitchClasses","scaleNotes","reifyScaleNotesWithOctave","scalePosChords","Map","chordNames","quality","chordDatasByName","sizes","chordDatas","add","chordTypeColors","diminished","buttonStyle","cursor","color","padding","paddingBottom","overflow","flexColContainer","flexCol","flex","ChordButton","playChord","setLastChord","selected","onMouseOver","borderColor","join","App","_ref2","audioApi","resumeAudio","resume","suspendAudio","suspend","_useLocalStorage","_useLocalStorage2","setKey","_useLocalStorage3","_useLocalStorage4","setStrumming","_useLocalStorage5","_useLocalStorage6","includeExtra","setIncludeExtra","lastChord","_useLocalStorage7","_useLocalStorage8","setOctave","_useLocalStorage9","_useLocalStorage10","setScaleType","_React$useState3","_React$useState4","highlightedKeys","setHighlightedKeys","_React$useState5","_React$useState6","setHistory","clearHistory","scaleData","useMemo","toggleExtra","_React$useState7","_React$useState8","setEvents","_React$useState9","_React$useState10","midiOut","setMidiOut","playScale","slice","currentTime","lastStartTimeOffset","currentValue","valueRef","prevValue","useValueObserver","id","setInterval","nextEvent","send","dx7","onMidi","onTick","clearInterval","className","src_Recorder","event","min","max","hidden","readOnly","checked","src_Keyboard","reverse","filter","sizeIndex","_ref3","_ref4","assign","Theme","_React$useState11","_React$useState12","darkMode","setDarkMode","documentElement","classList","top","right","AudioContext","Startup","_React$useState13","_React$useState14","startedAudio","setStartedAudio","_React$useState15","_React$useState16","setAudioApi","onStart","querySelector","visibility","initSampled","_initSampled","apply","this","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","Promise","all","bind","sampledDX7","sent","_ref6","initDX7Shim","onDX7Init","initDX7","process","App_App","fontSize","borderRadius","hostname","match","ReactDOM","render","src_App","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6c878b09.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","export default function downloadFile(blob, fileName) {\n  var a = document.createElement('a');\n  document.body.appendChild(a);\n  a.style = 'display: none';\n\n  const url = URL.createObjectURL(blob);\n  a.href = url;\n  a.download = fileName;\n  a.click();\n  URL.revokeObjectURL(url);\n  a.remove();\n}\n","import React from 'react';\nimport downloadFile from './downloadFile';\n\nfunction makeNewRecorder(actx, inputNode) {\n  const chunks = [];\n  const dest = actx.createMediaStreamDestination();\n  const mediaRecorder = new MediaRecorder(dest.stream);\n  inputNode.connect(dest);\n\n  mediaRecorder.ondataavailable = function(evt) {\n    // push each chunk (blobs) in an array\n    chunks.push(evt.data);\n  };\n\n  mediaRecorder.onstop = function(evt) {\n    // Make blob out of our blobs, and open it.\n    var blob = new Blob(chunks, {type: 'audio/ogg; codecs=opus'});\n\n    const fileName = 'audio.ogg';\n\n    downloadFile(blob, fileName);\n  };\n\n  return mediaRecorder;\n}\n\nfunction Recorder(props) {\n  const recorderRef = React.useRef(\n    makeNewRecorder(props.actx, props.inputNode)\n  );\n\n  const [recording, setRecording] = React.useState(false);\n\n  const toggleRecording = React.useCallback(() => setRecording(s => !s), [\n    setRecording,\n  ]);\n\n  React.useEffect(() => {\n    if (recording) {\n      recorderRef.current.start();\n    } else {\n      if (recorderRef.current.state !== 'inactive') {\n        recorderRef.current.stop();\n        recorderRef.current = makeNewRecorder(props.actx, props.inputNode);\n      }\n    }\n  }, [recording]);\n\n  return (\n    <button onClick={toggleRecording}>\n      {recording ? 'stop recording' : 'record audio'}\n    </button>\n  );\n}\n\nfunction ShimRecorder(props) {\n  if (typeof MediaRecorder == 'undefined') {\n    return <button disabled>[recording not available]</button>;\n  }\n\n  return <Recorder {...props} />;\n}\n\nexport default React.memo(ShimRecorder);\n","import {useState} from 'react';\n\nexport default function useLocalStorage(baseKey, initialValue) {\n  const key = `scaletoy-${baseKey}`;\n  // State to store our value\n  // Pass initial state function to useState so logic is only executed once\n  const [storedValue, setStoredValue] = useState(() => {\n    try {\n      // Get from local storage by key\n      const item = window.localStorage.getItem(key);\n      // Parse stored json or if none return initialValue\n      return item ? JSON.parse(item) : initialValue;\n    } catch (error) {\n      // If error also return initialValue\n      console.log(error);\n      return initialValue;\n    }\n  });\n\n  // Return a wrapped version of useState's setter function that ...\n  // ... persists the new value to localStorage.\n  const setValue = value => {\n    try {\n      // Allow value to be a function so we have same API as useState\n      const valueToStore =\n        value instanceof Function ? value(storedValue) : value;\n      // Save state\n      setStoredValue(valueToStore);\n      // Save to local storage\n      window.localStorage.setItem(key, JSON.stringify(valueToStore));\n    } catch (error) {\n      // A more advanced implementation would handle the error case\n      console.log(error);\n    }\n  };\n\n  return [storedValue, setValue];\n}\n","import React from 'react';\n\nexport default function MidiOutput({onChangeOutput, selectedOutput}) {\n  const [outputs, setOutputs] = React.useState([]);\n\n  React.useEffect(() => {\n    if (!navigator.requestMIDIAccess) {\n      return;\n    }\n    navigator.requestMIDIAccess().then(access => {\n      setOutputs(Array.from(access.outputs.values()));\n\n      access.onstatechange = function(e) {\n        setOutputs(Array.from(access.outputs.values()));\n      };\n    });\n  }, []);\n\n  return (\n    <label>\n      midi out:{' '}\n      <select\n        onChange={e => {\n          onChangeOutput(outputs[parseInt(e.currentTarget.value)]);\n        }}\n        value={outputs.indexOf(selectedOutput)}\n      >\n        <option key={-1} value={-1}>\n          (none)\n        </option>\n        {outputs.map((output, i) => (\n          <option key={i} value={i}>\n            {output.name}\n          </option>\n        ))}\n      </select>\n    </label>\n  );\n}\n","import React from 'react';\n\nfunction range(size, startAt = 0) {\n  return [...Array(size).keys()].map(i => i + startAt);\n}\n\nconst whiteNotes = ['C', 'D', 'E', 'F', 'G', 'A', 'B'];\nconst notesWithSharps = new Set(['C', 'D', 'F', 'G', 'A']);\n\nconst styles = {\n  container: {\n    textAlign: 'center',\n  },\n  keyboard: {\n    display: 'inline-block',\n    position: 'relative',\n    height: 70,\n    marginBottom: 20,\n  },\n  whiteKey: {\n    position: 'absolute',\n    borderBottomLeftRadius: 4,\n    borderBottomRightRadius: 4,\n    width: 20,\n    height: 70,\n    background: 'white',\n    border: 'solid 1px black',\n    zIndex: 0,\n  },\n  noteLabel: {\n    width: 20,\n    marginTop: 70,\n  },\n  highlighted: {\n    background: 'orange',\n  },\n  blackKey: {\n    position: 'absolute',\n    borderBottomLeftRadius: 3,\n    borderBottomRightRadius: 3,\n    width: 9,\n    height: 50,\n    background: 'black',\n    border: 'solid 1px black',\n\n    zIndex: 1,\n  },\n};\n\nfunction Keyboard(props: {\n  highlightKeys: Array<string>,\n  startOctave: number,\n  octaves: number,\n}) {\n  const numKeys = whiteNotes.length * props.octaves;\n  const keys = [];\n\n  range(props.octaves, props.startOctave).forEach((octave, octaveOffset) => {\n    whiteNotes.forEach((note, noteOffset) => {\n      const noteName = note + octave;\n      const noteNameSharp = note + '#' + octave;\n      keys.push(\n        <div\n          key={noteName}\n          style={{\n            ...styles.whiteKey,\n            ...(props.highlightKeys && props.highlightKeys.includes(noteName)\n              ? styles.highlighted\n              : null),\n            left:\n              (octaveOffset * whiteNotes.length + noteOffset) *\n              (styles.whiteKey.width - 1),\n          }}\n        >\n          <div style={styles.noteLabel}>{noteName}</div>\n        </div>\n      );\n\n      if (notesWithSharps.has(note)) {\n        keys.push(\n          <div\n            key={noteNameSharp}\n            style={{\n              ...styles.blackKey,\n              ...(props.highlightKeys &&\n              props.highlightKeys.includes(noteNameSharp)\n                ? styles.highlighted\n                : null),\n              left:\n                (octaveOffset * whiteNotes.length + noteOffset + 1) *\n                  (styles.whiteKey.width - 1) -\n                (styles.blackKey.width - 1) / 2,\n            }}\n          />\n        );\n      }\n    });\n  });\n  return (\n    <div style={styles.container}>\n      <div style={{...styles.keyboard, width: numKeys * styles.whiteKey.width}}>\n        {keys}\n      </div>\n    </div>\n  );\n}\n\nexport default React.memo(Keyboard);\n","import React from 'react';\nimport {Midi} from '@tonejs/midi';\nimport downloadFile from './downloadFile';\nimport * as Tonal from '@tonaljs/tonal';\n\nexport default function({history, beatDurationSeconds, bpm, strumming}) {\n  const exportHistory = React.useCallback(() => {\n    // create a new midi file\n    const midi = new Midi();\n    midi.header.setTempo(bpm);\n    // add a track\n    const track = midi.addTrack();\n\n    history.forEach((chordData, eventIdx) => {\n      const chordNotes = chordData.chordNotesForOctave;\n      const beatStart = eventIdx * beatDurationSeconds * 4;\n      const strummingSeconds = strumming / 1000;\n\n      chordNotes.forEach((noteName, i) => {\n        const strumDelay = i * strummingSeconds;\n\n        track.addNote({\n          midi: Tonal.note(noteName).midi,\n          // seconds\n          time: beatStart + strumDelay,\n          duration: beatDurationSeconds + strumDelay,\n        });\n      });\n    });\n\n    const blob = new Blob([midi.toArray()], {type: 'audio/midi'});\n    downloadFile(blob, 'export.mid');\n  }, [history]);\n\n  return <button onClick={exportHistory}>export midi</button>;\n}\n","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport * as Tonal from '@tonaljs/tonal';\nimport * as Scale from '@tonaljs/scale';\nimport * as Chord from '@tonaljs/chord';\nimport * as Note from '@tonaljs/note';\nimport Recorder from './Recorder';\nimport useLocalStorage from './useLocalStorage';\nimport useValueObserver from './useValueObserver';\nimport MidiOutput from './MidiOutput';\nimport Keyboard from './Keyboard';\nimport MidiExport from './MidiExport';\n\nconst SHOW_NOTE_NAMES = true;\nconst SHOW_NOTE_OCTS = true;\nconst SHOW_FULL_CHORD_NAMES = false;\nconst SIZE_ASC = true;\nconst SHOW_HISTORY = true;\nconst USE_SAMPLED_DX7 = Boolean(\n  new URL(document.location).searchParams.get('sampled')\n);\n\nconst strummingTimes = [0, 10, 30, 50, 75, 100, 150, 200];\nconst strummingTimesIndex = {};\nstrummingTimes.forEach((v, i) => {\n  strummingTimesIndex[v] = i;\n});\n\nfunction transposeByOctaves(note, shift) {\n  return `${note.pc}${note.oct + shift}`;\n}\n\nfunction getChordsBySize(chords, key) {\n  return chords\n    .map(chordType => Chord.chord(`${key}${chordType}`))\n    .sort((a, b) => a.intervals.length - b.intervals.length)\n    .map(chord => `${chord.tonic}${chord.aliases[0]}`);\n}\n\nconst keys = ['C', 'C#', 'D', 'D#', 'E', 'F', 'F#', 'G', 'G#', 'A', 'Bb', 'B'];\n\nconst scaleTypesChordPatterns = {\n  major: ['major', 'minor', 'minor', 'major', 'major', 'minor', 'diminished'],\n  minor: ['minor', 'diminished', 'major', 'minor', 'minor', 'major', 'major'],\n  dorian: ['minor', 'minor', 'major', 'major', 'minor', 'diminished', 'major'],\n  lydian: ['major', 'major', 'minor', 'diminished', 'major', 'minor', 'minor'],\n  phrygian: [\n    'minor',\n    'major',\n    'major',\n    'minor',\n    'diminished',\n    'major',\n    'minor',\n  ],\n  ionian: ['major', 'minor', 'minor', 'major', 'major', 'minor', 'diminished'],\n  mixolydian: [\n    'major',\n    'minor',\n    'diminished',\n    'major',\n    'minor',\n    'minor',\n    'major',\n  ],\n  locrian: ['diminished', 'major', 'minor', 'minor', 'major', 'major', 'minor'],\n};\n\nconst allScales = Object.keys(scaleTypesChordPatterns);\n\nconst romanNumerals = ['i', 'ii', 'iii', 'iv', 'v', 'vi', 'vii'];\n// const scaleTypesPosNames = {\n//   major: ['I', 'ii', 'iii', 'VI', 'V', 'vi', 'vii*'],\n//   minor: ['i', 'ii*', 'III', 'iv', 'v', 'VI', 'VII'],\n// };\nconst scaleTypesPosNames = Object.keys(scaleTypesChordPatterns).reduce(\n  (acc, scaleName) => {\n    const pattern = scaleTypesChordPatterns[scaleName];\n\n    acc[scaleName] = pattern.map((scaleType, i) => {\n      const pos = romanNumerals[i];\n\n      switch (scaleType) {\n        case 'major':\n          return pos.toUpperCase();\n        case 'minor':\n          return pos;\n        case 'diminished':\n          return pos + '\\xB0';\n        default:\n          throw new Error(`unknown scaleType '${scaleType}'`);\n      }\n    });\n\n    return acc;\n  },\n  {}\n);\n\nfunction getScaleChords(key, scaleType) {\n  return Scale.scale(key + ' ' + scaleType).notes.map((pc, pos) =>\n    getChordsBySize(\n      Scale.scaleChords(scaleTypesChordPatterns[scaleType][pos]),\n      pc\n    )\n  );\n}\n\nconst bpm = 140;\nconst beatDurationSeconds = (1 / bpm) * 60;\n\nconst NOTE_ON = 0x90;\nconst NOTE_OFF = 0x80;\nconst velocityMidi = 80;\n\nfunction onTick(events, audioApi, midiOut) {\n  let i = 0;\n  for (; i < events.length; i++) {\n    const nextEvent = events[i];\n    if (nextEvent.time > audioApi.actx.currentTime) {\n      break;\n    }\n\n    if (midiOut) {\n      if (!midiOut.send) {\n        debugger;\n      }\n      midiOut.send(nextEvent.message);\n    } else if (audioApi.dx7) {\n      audioApi.dx7.onMidi(nextEvent.message);\n    }\n  }\n\n  return i === 0 ? events : events.slice(i);\n}\n\nfunction playNote(events, noteName, start, end) {\n  const noteMidi = Tonal.note(noteName).midi;\n\n  let updatedEvents = events;\n  // end any upcoming events for this key\n  events.forEach(ev => {\n    if (ev.message[1] == noteMidi) {\n      ev.time = start - 0.01;\n      ev.message[0] = NOTE_OFF;\n    }\n  });\n\n  return addEvents(updatedEvents, [\n    {\n      message: [NOTE_ON, noteMidi, velocityMidi],\n      time: start,\n    },\n    {\n      message: [NOTE_OFF, noteMidi, velocityMidi],\n      time: end,\n    },\n  ]);\n}\n\nfunction addEvents(events, newEvents) {\n  const updatedEvents = events.concat(newEvents);\n  updatedEvents.sort((a, b) => a.time - b.time);\n  return updatedEvents;\n}\n\nfunction makeOctaveScaleNoteSequence(key, octave, scaleType) {\n  const scaleNotes = Scale.scale(`${key}${octave} ${scaleType}`).notes;\n\n  scaleNotes.push(transposeByOctaves(Tonal.note(scaleNotes[0]), 1));\n\n  return scaleNotes;\n}\n\n// get the notes for a chord, for an octave\nfunction getReifiedNotesForChord(chordName, octave) {\n  const chordData = Chord.chord(chordName);\n  const tonicReified = chordData.tonic + octave;\n  const notes = chordData.intervals.map(interval =>\n    Tonal.transpose(tonicReified, interval)\n  );\n  return notes;\n}\n\n// we need to make sure that the tonic is from the correct octave when the\n// scale spans multiple octaves\nfunction getReifiedNotesForChordForScale(chordName, scalePitchClassesNotesMap) {\n  const chordData = Chord.chord(chordName);\n  const tonicReified = scalePitchClassesNotesMap[chordData.tonic];\n  const notes = chordData.intervals.map(interval =>\n    Note.simplify(Tonal.transpose(tonicReified, interval))\n  );\n  return notes;\n}\n\nfunction reifyScaleNotesWithOctave(scale, octave) {\n  return scale.intervals.map(interval =>\n    Tonal.transpose(`${scale.tonic}${octave}`, interval)\n  );\n}\n\nfunction makeScaleData(key, scaleType, octave) {\n  const scale = Scale.scale(`${key} ${scaleType}`);\n  const scalePitchClasses = scale.notes;\n\n  const scaleNotes = reifyScaleNotesWithOctave(scale, octave);\n  const scalePitchClassesNotesMap = {};\n  scaleNotes.forEach(noteName => {\n    scalePitchClassesNotesMap[Tonal.note(noteName).pc] = noteName;\n  });\n\n  const scalePosChords = new Map(\n    getScaleChords(key, scaleType).map((chordNames, pos) => {\n      return [\n        pos,\n\n        chordNames.map(chordName => {\n          const chord = Chord.chord(chordName);\n          return {\n            pos,\n            chord,\n            chordType: scaleTypesChordPatterns[scaleType][pos],\n            chordNotesForOctave: getReifiedNotesForChordForScale(\n              chordName,\n              scalePitchClassesNotesMap\n            ),\n            chordName,\n            size:\n              chord.intervals.length * (chord.quality === 'Unknown' ? -1 : 1),\n          };\n        }),\n      ];\n    })\n  );\n\n  const chordDatasByName = new Map(\n    Array.from(scalePosChords.values).map(chordData => [\n      chordData.chordName,\n      chordData,\n    ])\n  );\n\n  const sizes = new Set();\n\n  scalePosChords.forEach((chordDatas, pos) => {\n    chordDatas.forEach(chordData => {\n      sizes.add(chordData.size);\n    });\n  });\n\n  return {\n    scaleType,\n    key,\n    scalePitchClasses,\n    scalePosChords,\n    scaleNotes,\n    chordDatasByName,\n    sizes: Array.from(sizes).sort((a, b) => a - b),\n  };\n}\n\nconst chordTypeColors = {\n  major: 'rgb(127,199,175)',\n  minor: 'rgb(255,158,157)',\n  diminished: 'rgb(218,216,167)',\n};\n\nconst buttonStyle = {\n  display: 'block',\n  width: '100%',\n  cursor: 'pointer',\n  color: 'black',\n  padding: 4,\n  paddingBottom: 8,\n  height: 46,\n  overflow: 'hidden',\n  textAlign: 'center',\n};\n\nconst flexColContainer = {\n  display: 'flex',\n};\nconst flexCol = {\n  flex: 1,\n};\n\nconst ChordButton = React.memo(\n  ({\n    chordData,\n    playChord,\n    setLastChord,\n    octave,\n    strumming,\n    selected,\n    onMouseOver,\n  }) => {\n    return (\n      <div\n        style={{\n          ...buttonStyle,\n          background: chordTypeColors[chordData.chordType],\n          border: '1px solid',\n          borderColor: selected ? 'rgba(0,0,0,0.2)' : 'transparent',\n        }}\n        onClick={() => {\n          playChord(chordData, octave, strumming);\n          setLastChord(chordData.chordName);\n          console.log(chordData);\n        }}\n        onMouseOver={() => {\n          onMouseOver(chordData.chordNotesForOctave);\n        }}\n      >\n        <div>\n          {chordData.chordName}\n          {SHOW_FULL_CHORD_NAMES && (\n            <div>\n              <small>\n                {chordData.chord.name.length > 3 ? (\n                  chordData.chord.name\n                ) : (\n                  // bad data, don't show\n                  <span>&nbsp;</span>\n                )}\n              </small>\n            </div>\n          )}\n          {true && (\n            <div>\n              {SHOW_NOTE_NAMES && SHOW_NOTE_OCTS && (\n                <small>{chordData.chordNotesForOctave.join()}</small>\n              )}\n\n              {SHOW_NOTE_NAMES && !SHOW_NOTE_OCTS && (\n                <small>{chordData.chord.notes.join()}</small>\n              )}\n            </div>\n          )}\n        </div>\n      </div>\n    );\n  }\n);\n\nfunction App({audioApi}) {\n  const resumeAudio = React.useCallback(() => audioApi.actx.resume(), [\n    audioApi,\n  ]);\n  const suspendAudio = React.useCallback(() => audioApi.actx.suspend(), [\n    audioApi,\n  ]);\n\n  const [key, setKey] = useLocalStorage('key', 'C');\n  const [strumming, setStrumming] = useLocalStorage(\n    'strumming',\n    strummingTimes[2]\n  );\n\n  const [includeExtra, setIncludeExtra] = useLocalStorage(\n    'includeExtra',\n    false\n  );\n  const [lastChord, setLastChord] = React.useState(null);\n  const [octave, setOctave] = useLocalStorage('octave', 4);\n  const [scaleType, setScaleType] = useLocalStorage('scaleType', 'major');\n\n  const [highlightedKeys, setHighlightedKeys] = React.useState(null);\n\n  const [history, setHistory] = React.useState([]);\n  const clearHistory = React.useCallback(() => setHistory([]), [setHistory]);\n\n  const scaleData = React.useMemo(() => makeScaleData(key, scaleType, octave), [\n    key,\n    scaleType,\n    octave,\n  ]);\n\n  const toggleExtra = React.useCallback(() => setIncludeExtra(s => !s));\n\n  const [events, setEvents] = React.useState([]);\n  const [midiOut, setMidiOut] = React.useState(null);\n\n  const playScale = React.useCallback(() => {\n    setEvents(events => {\n      let updatedEvents = events;\n      const scaleNotes = scaleData.scaleNotes.slice();\n      scaleNotes.push(Tonal.transpose(scaleNotes[0], '8P'));\n      const currentTime = audioApi.actx.currentTime;\n      let lastStartTimeOffset = 0;\n      scaleNotes.forEach(noteName => {\n        lastStartTimeOffset += beatDurationSeconds;\n\n        updatedEvents = playNote(\n          updatedEvents,\n          noteName,\n          currentTime + lastStartTimeOffset,\n          currentTime + lastStartTimeOffset + beatDurationSeconds\n        );\n      });\n\n      return updatedEvents;\n    });\n  }, [setEvents, audioApi, scaleData]);\n\n  const playChord = React.useCallback(\n    (chordData, octave, strumming) => {\n      const chordNotes = chordData.chordNotesForOctave;\n\n      setEvents(events => {\n        let updatedEvents = events;\n\n        const currentTime = audioApi.actx.currentTime;\n\n        chordNotes.forEach((noteName, i) => {\n          const strumDelay = i * (strumming / 1000);\n          updatedEvents = playNote(\n            updatedEvents,\n            noteName,\n            currentTime + strumDelay,\n            currentTime + beatDurationSeconds + i * (strumming / 1000)\n          );\n        });\n\n        return updatedEvents;\n      });\n\n      setHistory(s => s.concat(chordData));\n    },\n    [setEvents, audioApi]\n  );\n\n  useValueObserver(\n    scaleData,\n    React.useCallback(() => {\n      setHighlightedKeys(scaleData.scaleNotes);\n    }, [scaleData])\n  );\n\n  // startup\n  React.useEffect(() => {\n    // start event-consuming interval\n    const id = setInterval(() => {\n      setEvents(events => onTick(events, audioApi, midiOut));\n    }, 1);\n    return () => {\n      clearInterval(id);\n    };\n  }, [midiOut]);\n\n  return (\n    <div className=\"App\">\n      <button onClick={suspendAudio}>pause audio</button>\n      <button onClick={resumeAudio}>resume audio</button>\n      {audioApi.dx7 && (\n        <Recorder actx={audioApi.actx} inputNode={audioApi.dx7} />\n      )}\n      <MidiOutput selectedOutput={midiOut} onChangeOutput={setMidiOut} />\n      <div onMouseOver={() => setHighlightedKeys(scaleData.scaleNotes)}>\n        <label>\n          key:{' '}\n          <select\n            value={scaleData.key}\n            onChange={event => setKey(event.currentTarget.value)}\n          >\n            {keys.map(key => (\n              <option key={key} value={key}>\n                {key}\n              </option>\n            ))}\n          </select>\n        </label>{' '}\n        <label>\n          octave:{' '}\n          <select\n            value={octave}\n            onChange={event => setOctave(parseInt(event.currentTarget.value))}\n          >\n            {[1, 2, 3, 4, 5, 6, 7].map(key => (\n              <option key={key} value={key}>\n                {key}\n              </option>\n            ))}\n          </select>\n        </label>{' '}\n        <label>\n          scale type:{' '}\n          <select\n            value={scaleType}\n            onChange={event => setScaleType(event.currentTarget.value)}\n          >\n            {allScales.map(key => (\n              <option key={key} value={key}>\n                {key}\n              </option>\n            ))}\n          </select>\n        </label>{' '}\n        <label>scale notes: </label>\n        {scaleData.scaleNotes.join()}{' '}\n        <button onClick={playScale}>play scale</button>{' '}\n        <label>\n          strumming:\n          <input\n            type=\"range\"\n            min={0}\n            max={strummingTimes.length - 1}\n            value={strummingTimesIndex[strumming]}\n            onChange={e => {\n              setStrumming(strummingTimes[parseInt(e.currentTarget.value)]);\n            }}\n          />{' '}\n          <input hidden type=\"number\" value={strumming} readOnly />\n        </label>\n        <label>\n          <input\n            type=\"checkbox\"\n            onChange={toggleExtra}\n            checked={includeExtra}\n          />\n          include extra chords\n        </label>\n      </div>\n\n      <Keyboard\n        highlightKeys={highlightedKeys}\n        startOctave={octave}\n        octaves={3}\n      />\n\n      {SHOW_HISTORY && (\n        <div style={{textAlign: 'left'}}>\n          <details>\n            <summary style={{textAlign: 'left'}}>\n              <div style={{display: 'initial'}}>history/export</div>\n            </summary>\n            <MidiExport\n              bpm={bpm}\n              history={history}\n              strumming={strumming}\n              beatDurationSeconds={beatDurationSeconds}\n            />\n            <button onClick={clearHistory}>clear history</button>\n            <div style={{width: `90vw`, overflow: 'auto', display: 'flex'}}>\n              {history\n                .slice()\n                .reverse()\n                .map((chordData, i) => (\n                  <div key={i} style={{width: `${(1 / 7) * 100}vw`}}>\n                    <ChordButton\n                      {...{\n                        chordData,\n                        playChord,\n                        setLastChord: () => {},\n                        octave,\n                        strumming,\n                        selected: false,\n                        onMouseOver: setHighlightedKeys,\n                      }}\n                    />\n                  </div>\n                ))}\n              {history.length === 0 && (\n                <div>\n                  <br />\n                  played chords will appear here\n                </div>\n              )}\n            </div>\n          </details>\n        </div>\n      )}\n\n      <div style={flexColContainer}>\n        <div style={flexCol}>\n          {scaleData.sizes\n            .filter(size => (includeExtra ? true : size > 0))\n            .sort((a, b) => (SIZE_ASC ? a - b : b - a))\n            .map((size, sizeIndex) => (\n              <div key={sizeIndex}>\n                {false && <div style={{flex: 1}}>{size}</div>}\n                <br />\n                <div key={size} style={{display: 'flex'}}>\n                  {Array.from(scaleData.scalePosChords).map(\n                    ([pos, chordDatas]) => {\n                      return (\n                        <div key={pos} style={{flex: 1}}>\n                          {sizeIndex === 0 && (\n                            <div>{scaleTypesPosNames[scaleType][pos]}</div>\n                          )}\n\n                          {chordDatas\n                            .filter(chordData => chordData.size === size)\n                            // silly heuristic for simpler chords\n                            .sort(\n                              (a, b) => a.chordName.length - b.chordName.length\n                            )\n                            .map((chordData, i) => (\n                              <ChordButton\n                                key={i}\n                                {...{\n                                  chordData,\n                                  playChord,\n                                  setLastChord,\n                                  octave,\n                                  strumming,\n                                  selected: chordData.chordName === lastChord,\n                                  onMouseOver: setHighlightedKeys,\n                                }}\n                              />\n                            ))}\n                        </div>\n                      );\n                    }\n                  )}\n                </div>\n              </div>\n            ))}\n        </div>\n      </div>\n      <pre style={{height: 300, overflow: 'auto'}}>\n        {events.map(ev => JSON.stringify(ev)).join('\\n')}\n      </pre>\n    </div>\n  );\n}\n\nfunction Theme() {\n  const [darkMode, setDarkMode] = React.useState(false);\n\n  React.useEffect(() => {\n    if (darkMode) {\n      document.documentElement.classList.add('dark-mode');\n    } else {\n      document.documentElement.classList.remove('dark-mode');\n    }\n  }, [darkMode]);\n\n  return (\n    <div style={{position: 'absolute', top: 0, right: 0}}>\n      <label>\n        dark mode:{' '}\n        <input\n          type=\"checkbox\"\n          checked={darkMode}\n          onChange={() => setDarkMode(s => !s)}\n        />\n      </label>\n    </div>\n  );\n}\n\nconst CAN_AUTOPLAY_AUDIO = new AudioContext().state == 'running';\n\nfunction Startup() {\n  const [startedAudio, setStartedAudio] = React.useState(false);\n  const [audioApi, setAudioApi] = React.useState(null);\n\n  const onStart = React.useCallback(() => {\n    document.querySelector('.dx7').style.visibility = 'visible';\n    setStartedAudio(true);\n  }, [setStartedAudio]);\n\n  React.useEffect(() => {\n    async function initSampled() {\n      const {sampledDX7} = await import('./sampledDX7');\n\n      sampledDX7().then(({dx7, actx}) => {\n        window.initDX7Shim(dx7, actx);\n      });\n    }\n    window.onDX7Init = (dx7, actx) => {\n      if (!dx7) {\n        // fall back to sampled\n        return initSampled();\n      }\n      const newAudioApi = {\n        dx7,\n        actx,\n      };\n\n      setAudioApi(newAudioApi);\n      if (actx.state === 'running') {\n        onStart();\n      }\n    };\n    if (USE_SAMPLED_DX7) {\n      initSampled();\n    } else {\n      window.initDX7(process.env.PUBLIC_URL);\n    }\n  }, []);\n\n  if (audioApi && startedAudio) {\n    return (\n      <div>\n        <App audioApi={audioApi} />\n        <Theme />\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"App\">\n      {audioApi ? (\n        <button\n          style={{fontSize: 42, borderRadius: 9, cursor: 'pointer'}}\n          onClick={() => {\n            audioApi.actx.resume();\n            onStart();\n          }}\n        >\n          start\n        </button>\n      ) : (\n        'loading'\n      )}\n    </div>\n  );\n}\n\nexport default Startup;\n","import React from 'react';\n\nexport default function useValueObserver(\n  currentValue,\n  onChange: (value, prevValue) => void\n) {\n  const valueRef = React.useRef(currentValue);\n\n  React.useEffect(() => {\n    const prevValue = valueRef.current;\n    valueRef.current = currentValue;\n\n    if (prevValue !== currentValue) {\n      onChange(currentValue, prevValue);\n    }\n  }, [currentValue, onChange]);\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}