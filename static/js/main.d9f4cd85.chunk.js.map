{"version":3,"sources":["logo.svg","Recorder.js","useLocalStorage.js","MidiOutput.js","Keyboard.js","App.js","useValueObserver.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","makeNewRecorder","actx","inputNode","chunks","dest","createMediaStreamDestination","mediaRecorder","MediaRecorder","stream","connect","ondataavailable","evt","push","data","onstop","blob","Blob","type","document","createElement","fileName","a","body","appendChild","style","url","URL","createObjectURL","href","download","click","revokeObjectURL","remove","saveData","Recorder","props","recorderRef","React","useRef","_React$useState","useState","_React$useState2","Object","slicedToArray","recording","setRecording","toggleRecording","useCallback","s","useEffect","current","start","state","stop","react_default","onClick","memo","disabled","useLocalStorage","baseKey","initialValue","key","concat","_useState","item","window","localStorage","getItem","JSON","parse","error","console","log","_useState2","storedValue","setStoredValue","value","valueToStore","Function","setItem","stringify","MidiOutput","_ref","onChangeOutput","selectedOutput","outputs","setOutputs","navigator","requestMIDIAccess","then","access","Array","from","values","onstatechange","e","onChange","parseInt","currentTarget","indexOf","map","output","i","name","whiteNotes","notesWithSharps","Set","styles","container","textAlign","keyboard","display","position","height","marginTop","whiteKey","borderBottomLeftRadius","borderBottomRightRadius","width","background","border","zIndex","noteLabel","highlighted","blackKey","numKeys","length","octaves","keys","size","startAt","arguments","undefined","toConsumableArray","range","startOctave","forEach","octave","octaveOffset","note","noteOffset","noteName","noteNameSharp","objectSpread","highlightKeys","includes","left","has","SIZE_ASC","SHOW_HISTORY","USE_SAMPLED_DX7","Boolean","location","searchParams","get","strummingTimes","strummingTimesIndex","v","scaleTypesChordPatterns","major","minor","dorian","lydian","phrygian","ionian","mixolydian","locrian","allScales","romanNumerals","scaleTypesPosNames","reduce","acc","scaleName","pattern","scaleType","pos","toUpperCase","Error","getScaleChords","Scale","notes","pc","chords","chordType","Chord","sort","b","intervals","chord","tonic","aliases","beatDurationSeconds","NOTE_ON","NOTE_OFF","velocityMidi","playNote","events","end","noteMidi","Tonal","midi","updatedEvents","ev","message","time","newEvents","addEvents","getReifiedNotesForChordForScale","chordName","scalePitchClassesNotesMap","chordData","tonicReified","interval","makeScaleData","scale","scalePitchClasses","scaleNotes","reifyScaleNotesWithOctave","scalePosChords","Map","chordNames","chordNotesForOctave","quality","chordDatasByName","sizes","chordDatas","add","chordTypeColors","diminished","buttonStyle","cursor","color","padding","paddingBottom","overflow","flexColContainer","flexCol","flex","ChordButton","playChord","setLastChord","strumming","selected","onMouseOver","borderColor","join","App","_ref2","audioApi","resumeAudio","resume","suspendAudio","suspend","_useLocalStorage","_useLocalStorage2","setKey","_useLocalStorage3","_useLocalStorage4","setStrumming","_useLocalStorage5","_useLocalStorage6","includeExtra","setIncludeExtra","lastChord","_useLocalStorage7","_useLocalStorage8","setOctave","_useLocalStorage9","_useLocalStorage10","setScaleType","_React$useState3","_React$useState4","highlightedKeys","setHighlightedKeys","_React$useState5","_React$useState6","history","setHistory","scaleData","useMemo","toggleExtra","_React$useState7","_React$useState8","setEvents","_React$useState9","_React$useState10","midiOut","setMidiOut","playScale","slice","currentTime","lastStartTimeOffset","chordNotes","currentValue","valueRef","prevValue","useValueObserver","id","setInterval","nextEvent","send","dx7","onMidi","onTick","clearInterval","className","src_Recorder","event","min","max","hidden","readOnly","checked","src_Keyboard","filter","sizeIndex","_ref3","_ref4","assign","reverse","Theme","_React$useState11","_React$useState12","darkMode","setDarkMode","documentElement","classList","top","right","AudioContext","Startup","_React$useState13","_React$useState14","startedAudio","setStartedAudio","_React$useState15","_React$useState16","setAudioApi","onStart","querySelector","visibility","initSampled","_initSampled","apply","this","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","Promise","all","bind","sampledDX7","sent","_ref6","initDX7Shim","onDX7Init","initDX7","process","App_App","fontSize","borderRadius","hostname","match","ReactDOM","render","src_App","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d9f4cd85.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\n\nfunction saveData(blob, fileName) {\n  var a = document.createElement('a');\n  document.body.appendChild(a);\n  a.style = 'display: none';\n\n  const url = URL.createObjectURL(blob);\n  a.href = url;\n  a.download = fileName;\n  a.click();\n  URL.revokeObjectURL(url);\n  a.remove();\n}\n\nfunction makeNewRecorder(actx, inputNode) {\n  const chunks = [];\n  const dest = actx.createMediaStreamDestination();\n  const mediaRecorder = new MediaRecorder(dest.stream);\n  inputNode.connect(dest);\n\n  mediaRecorder.ondataavailable = function(evt) {\n    // push each chunk (blobs) in an array\n    chunks.push(evt.data);\n  };\n\n  mediaRecorder.onstop = function(evt) {\n    // Make blob out of our blobs, and open it.\n    var blob = new Blob(chunks, {type: 'audio/ogg; codecs=opus'});\n    const audioEl = document.createElement('audio');\n\n    const fileName = 'audio.ogg';\n\n    saveData(blob, fileName);\n  };\n\n  return mediaRecorder;\n}\n\nfunction Recorder(props) {\n  const recorderRef = React.useRef(\n    makeNewRecorder(props.actx, props.inputNode)\n  );\n\n  const [recording, setRecording] = React.useState(false);\n\n  const toggleRecording = React.useCallback(() => setRecording(s => !s), [\n    setRecording,\n  ]);\n\n  React.useEffect(() => {\n    if (recording) {\n      recorderRef.current.start();\n    } else {\n      if (recorderRef.current.state !== 'inactive') {\n        recorderRef.current.stop();\n        recorderRef.current = makeNewRecorder(props.actx, props.inputNode);\n      }\n    }\n  }, [recording]);\n\n  return (\n    <button onClick={toggleRecording}>\n      {recording ? 'stop recording' : 'record audio'}\n    </button>\n  );\n}\n\nfunction ShimRecorder(props) {\n  if (typeof MediaRecorder == 'undefined') {\n    return <button disabled>[recording not available]</button>;\n  }\n\n  return <Recorder {...props} />;\n}\n\nexport default React.memo(ShimRecorder);\n","import {useState} from 'react';\n\nexport default function useLocalStorage(baseKey, initialValue) {\n  const key = `scaletoy-${baseKey}`;\n  // State to store our value\n  // Pass initial state function to useState so logic is only executed once\n  const [storedValue, setStoredValue] = useState(() => {\n    try {\n      // Get from local storage by key\n      const item = window.localStorage.getItem(key);\n      // Parse stored json or if none return initialValue\n      return item ? JSON.parse(item) : initialValue;\n    } catch (error) {\n      // If error also return initialValue\n      console.log(error);\n      return initialValue;\n    }\n  });\n\n  // Return a wrapped version of useState's setter function that ...\n  // ... persists the new value to localStorage.\n  const setValue = value => {\n    try {\n      // Allow value to be a function so we have same API as useState\n      const valueToStore =\n        value instanceof Function ? value(storedValue) : value;\n      // Save state\n      setStoredValue(valueToStore);\n      // Save to local storage\n      window.localStorage.setItem(key, JSON.stringify(valueToStore));\n    } catch (error) {\n      // A more advanced implementation would handle the error case\n      console.log(error);\n    }\n  };\n\n  return [storedValue, setValue];\n}\n","import React from 'react';\n\nexport default function MidiOutput({onChangeOutput, selectedOutput}) {\n  const [outputs, setOutputs] = React.useState([]);\n\n  React.useEffect(() => {\n    if (!navigator.requestMIDIAccess) {\n      return;\n    }\n    navigator.requestMIDIAccess().then(access => {\n      setOutputs(Array.from(access.outputs.values()));\n\n      access.onstatechange = function(e) {\n        setOutputs(Array.from(access.outputs.values()));\n      };\n    });\n  }, []);\n\n  return (\n    <label>\n      midi out:{' '}\n      <select\n        onChange={e => {\n          onChangeOutput(outputs[parseInt(e.currentTarget.value)]);\n        }}\n        value={outputs.indexOf(selectedOutput)}\n      >\n        <option key={-1} value={-1}>\n          (none)\n        </option>\n        {outputs.map((output, i) => (\n          <option key={i} value={i}>\n            {output.name}\n          </option>\n        ))}\n      </select>\n    </label>\n  );\n}\n","import React from 'react';\n\nfunction range(size, startAt = 0) {\n  return [...Array(size).keys()].map(i => i + startAt);\n}\n\nconst whiteNotes = ['C', 'D', 'E', 'F', 'G', 'A', 'B'];\nconst notesWithSharps = new Set(['C', 'D', 'F', 'G', 'A']);\n\nconst styles = {\n  container: {\n    textAlign: 'center',\n  },\n  keyboard: {\n    display: 'inline-block',\n    position: 'relative',\n    height: 70,\n    marginTop: 20,\n  },\n  whiteKey: {\n    position: 'absolute',\n    borderBottomLeftRadius: 4,\n    borderBottomRightRadius: 4,\n    width: 20,\n    height: 70,\n    background: 'white',\n    border: 'solid 1px black',\n    zIndex: 0,\n  },\n  noteLabel: {\n    width: 20,\n    marginTop: 70,\n  },\n  highlighted: {\n    background: 'orange',\n  },\n  blackKey: {\n    position: 'absolute',\n    borderBottomLeftRadius: 3,\n    borderBottomRightRadius: 3,\n    width: 9,\n    height: 50,\n    background: 'black',\n    border: 'solid 1px black',\n\n    zIndex: 1,\n  },\n};\n\nfunction Keyboard(props: {\n  highlightKeys: Array<string>,\n  startOctave: number,\n  octaves: number,\n}) {\n  const numKeys = whiteNotes.length * props.octaves;\n  const keys = [];\n\n  range(props.octaves, props.startOctave).forEach((octave, octaveOffset) => {\n    whiteNotes.forEach((note, noteOffset) => {\n      const noteName = note + octave;\n      const noteNameSharp = note + '#' + octave;\n      keys.push(\n        <div\n          key={noteName}\n          style={{\n            ...styles.whiteKey,\n            ...(props.highlightKeys && props.highlightKeys.includes(noteName)\n              ? styles.highlighted\n              : null),\n            left:\n              (octaveOffset * whiteNotes.length + noteOffset) *\n              (styles.whiteKey.width - 1),\n          }}\n        >\n          <div style={styles.noteLabel}>{noteName}</div>\n        </div>\n      );\n\n      if (notesWithSharps.has(note)) {\n        keys.push(\n          <div\n            key={noteNameSharp}\n            style={{\n              ...styles.blackKey,\n              ...(props.highlightKeys &&\n              props.highlightKeys.includes(noteNameSharp)\n                ? styles.highlighted\n                : null),\n              left:\n                (octaveOffset * whiteNotes.length + noteOffset + 1) *\n                  (styles.whiteKey.width - 1) -\n                (styles.blackKey.width - 1) / 2,\n            }}\n          />\n        );\n      }\n    });\n  });\n  return (\n    <div style={styles.container}>\n      <div style={{...styles.keyboard, width: numKeys * styles.whiteKey.width}}>\n        {keys}\n      </div>\n    </div>\n  );\n}\n\nexport default React.memo(Keyboard);\n","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport * as Tonal from '@tonaljs/tonal';\nimport * as Scale from '@tonaljs/scale';\nimport * as Chord from '@tonaljs/chord';\nimport Recorder from './Recorder';\nimport useLocalStorage from './useLocalStorage';\nimport useValueObserver from './useValueObserver';\nimport MidiOutput from './MidiOutput';\nimport Keyboard from './Keyboard';\n\nconst SHOW_NOTE_NAMES = true;\nconst SHOW_NOTE_OCTS = true;\nconst SHOW_FULL_CHORD_NAMES = false;\nconst SIZE_ASC = true;\nconst SHOW_HISTORY = false;\nconst USE_SAMPLED_DX7 = Boolean(\n  new URL(document.location).searchParams.get('sampled')\n);\n\nconst strummingTimes = [0, 10, 30, 50, 75, 100, 150, 200];\nconst strummingTimesIndex = {};\nstrummingTimes.forEach((v, i) => {\n  strummingTimesIndex[v] = i;\n});\n\nfunction transposeByOctaves(note, shift) {\n  return `${note.pc}${note.oct + shift}`;\n}\n\nfunction getChordsBySize(chords, key) {\n  return chords\n    .map(chordType => Chord.chord(`${key}${chordType}`))\n    .sort((a, b) => a.intervals.length - b.intervals.length)\n    .map(chord => `${chord.tonic}${chord.aliases[0]}`);\n}\n\nconst keys = ['C', 'C#', 'D', 'D#', 'E', 'F', 'F#', 'G', 'G#', 'A', 'Bb', 'B'];\n\nconst scaleTypesChordPatterns = {\n  major: ['major', 'minor', 'minor', 'major', 'major', 'minor', 'diminished'],\n  minor: ['minor', 'diminished', 'major', 'minor', 'minor', 'major', 'major'],\n  dorian: ['minor', 'minor', 'major', 'major', 'minor', 'diminished', 'major'],\n  lydian: ['major', 'major', 'minor', 'diminished', 'major', 'minor', 'minor'],\n  phrygian: [\n    'minor',\n    'major',\n    'major',\n    'minor',\n    'diminished',\n    'major',\n    'minor',\n  ],\n  ionian: ['major', 'minor', 'minor', 'major', 'major', 'minor', 'diminished'],\n  mixolydian: [\n    'major',\n    'minor',\n    'diminished',\n    'major',\n    'minor',\n    'minor',\n    'major',\n  ],\n  locrian: ['diminished', 'major', 'minor', 'minor', 'major', 'major', 'minor'],\n};\n\nconst allScales = Object.keys(scaleTypesChordPatterns);\n\nconst romanNumerals = ['i', 'ii', 'iii', 'iv', 'v', 'vi', 'vii'];\n// const scaleTypesPosNames = {\n//   major: ['I', 'ii', 'iii', 'VI', 'V', 'vi', 'vii*'],\n//   minor: ['i', 'ii*', 'III', 'iv', 'v', 'VI', 'VII'],\n// };\nconst scaleTypesPosNames = Object.keys(scaleTypesChordPatterns).reduce(\n  (acc, scaleName) => {\n    const pattern = scaleTypesChordPatterns[scaleName];\n\n    acc[scaleName] = pattern.map((scaleType, i) => {\n      const pos = romanNumerals[i];\n\n      switch (scaleType) {\n        case 'major':\n          return pos.toUpperCase();\n        case 'minor':\n          return pos;\n        case 'diminished':\n          return pos + '\\xB0';\n        default:\n          throw new Error(`unknown scaleType '${scaleType}'`);\n      }\n    });\n\n    return acc;\n  },\n  {}\n);\n\nfunction getScaleChords(key, scaleType) {\n  return Scale.scale(key + ' ' + scaleType).notes.map((pc, pos) =>\n    getChordsBySize(\n      Scale.scaleChords(scaleTypesChordPatterns[scaleType][pos]),\n      pc\n    )\n  );\n}\n\nconst bpm = 140;\nconst beatDurationSeconds = (1 / bpm) * 60;\n\nconst NOTE_ON = 0x90;\nconst NOTE_OFF = 0x80;\nconst velocityMidi = 80;\n\nfunction onTick(events, audioApi, midiOut) {\n  let i = 0;\n  for (; i < events.length; i++) {\n    const nextEvent = events[i];\n    if (nextEvent.time > audioApi.actx.currentTime) {\n      break;\n    }\n\n    if (midiOut) {\n      if (!midiOut.send) {\n        debugger;\n      }\n      midiOut.send(nextEvent.message);\n    } else if (audioApi.dx7) {\n      audioApi.dx7.onMidi(nextEvent.message);\n    }\n  }\n\n  return i === 0 ? events : events.slice(i);\n}\n\nfunction playNote(events, noteName, start, end) {\n  const noteMidi = Tonal.note(noteName).midi;\n\n  let updatedEvents = events;\n  // end any upcoming events for this key\n  events.forEach(ev => {\n    if (ev.message[1] == noteMidi) {\n      ev.time = start - 0.01;\n      ev.message[0] = NOTE_OFF;\n    }\n  });\n\n  return addEvents(updatedEvents, [\n    {\n      message: [NOTE_ON, noteMidi, velocityMidi],\n      time: start,\n    },\n    {\n      message: [NOTE_OFF, noteMidi, velocityMidi],\n      time: end,\n    },\n  ]);\n}\n\nfunction addEvents(events, newEvents) {\n  const updatedEvents = events.concat(newEvents);\n  updatedEvents.sort((a, b) => a.time - b.time);\n  return updatedEvents;\n}\n\nfunction makeOctaveScaleNoteSequence(key, octave, scaleType) {\n  const scaleNotes = Scale.scale(`${key}${octave} ${scaleType}`).notes;\n\n  scaleNotes.push(transposeByOctaves(Tonal.note(scaleNotes[0]), 1));\n\n  return scaleNotes;\n}\n\n// get the notes for a chord, for an octave\nfunction getReifiedNotesForChord(chordName, octave) {\n  const chordData = Chord.chord(chordName);\n  const tonicReified = chordData.tonic + octave;\n  const notes = chordData.intervals.map(interval =>\n    Tonal.transpose(tonicReified, interval)\n  );\n  return notes;\n}\n\n// we need to make sure that the tonic is from the correct octave when the\n// scale spans multiple octaves\nfunction getReifiedNotesForChordForScale(chordName, scalePitchClassesNotesMap) {\n  const chordData = Chord.chord(chordName);\n  const tonicReified = scalePitchClassesNotesMap[chordData.tonic];\n  const notes = chordData.intervals.map(interval =>\n    Tonal.transpose(tonicReified, interval)\n  );\n  return notes;\n}\n\nfunction reifyScaleNotesWithOctave(scale, octave) {\n  return scale.intervals.map(interval =>\n    Tonal.transpose(`${scale.tonic}${octave}`, interval)\n  );\n}\n\nfunction makeScaleData(key, scaleType, octave) {\n  const scale = Scale.scale(`${key} ${scaleType}`);\n  const scalePitchClasses = scale.notes;\n\n  const scaleNotes = reifyScaleNotesWithOctave(scale, octave);\n  const scalePitchClassesNotesMap = {};\n  scaleNotes.forEach(noteName => {\n    scalePitchClassesNotesMap[Tonal.note(noteName).pc] = noteName;\n  });\n\n  const scalePosChords = new Map(\n    getScaleChords(key, scaleType).map((chordNames, pos) => {\n      return [\n        pos,\n\n        chordNames.map(chordName => {\n          const chord = Chord.chord(chordName);\n          return {\n            pos,\n            chord,\n            chordType: scaleTypesChordPatterns[scaleType][pos],\n            chordNotesForOctave: getReifiedNotesForChordForScale(\n              chordName,\n              scalePitchClassesNotesMap\n            ),\n            chordName,\n            size:\n              chord.intervals.length * (chord.quality === 'Unknown' ? -1 : 1),\n          };\n        }),\n      ];\n    })\n  );\n\n  const chordDatasByName = new Map(\n    Array.from(scalePosChords.values).map(chordData => [\n      chordData.chordName,\n      chordData,\n    ])\n  );\n\n  const sizes = new Set();\n\n  scalePosChords.forEach((chordDatas, pos) => {\n    chordDatas.forEach(chordData => {\n      sizes.add(chordData.size);\n    });\n  });\n\n  return {\n    scaleType,\n    key,\n    scalePitchClasses,\n    scalePosChords,\n    scaleNotes,\n    chordDatasByName,\n    sizes: Array.from(sizes).sort((a, b) => a - b),\n  };\n}\n\nconst chordTypeColors = {\n  major: 'rgb(127,199,175)',\n  minor: 'rgb(255,158,157)',\n  diminished: 'rgb(218,216,167)',\n};\n\nconst buttonStyle = {\n  display: 'block',\n  width: '100%',\n  cursor: 'pointer',\n  color: 'black',\n  padding: 4,\n  paddingBottom: 8,\n  height: 46,\n  overflow: 'hidden',\n};\n\nconst flexColContainer = {\n  display: 'flex',\n};\nconst flexCol = {\n  flex: 1,\n};\n\nconst ChordButton = React.memo(\n  ({\n    chordData,\n    playChord,\n    setLastChord,\n    octave,\n    strumming,\n    selected,\n    onMouseOver,\n  }) => {\n    return (\n      <div\n        style={{\n          ...buttonStyle,\n          background: chordTypeColors[chordData.chordType],\n          border: '1px solid',\n          borderColor: selected ? 'rgba(0,0,0,0.2)' : 'transparent',\n        }}\n        onClick={() => {\n          playChord(chordData, octave, strumming);\n          setLastChord(chordData.chordName);\n          console.log(chordData);\n        }}\n        onMouseOver={() => {\n          onMouseOver(chordData.chordNotesForOctave);\n        }}\n      >\n        <div>\n          {chordData.chordName}\n          {SHOW_FULL_CHORD_NAMES && (\n            <div>\n              <small>\n                {chordData.chord.name.length > 3 ? (\n                  chordData.chord.name\n                ) : (\n                  // bad data, don't show\n                  <span>&nbsp;</span>\n                )}\n              </small>\n            </div>\n          )}\n          {true && (\n            <div>\n              {SHOW_NOTE_NAMES && SHOW_NOTE_OCTS && (\n                <small>{chordData.chordNotesForOctave.join()}</small>\n              )}\n\n              {SHOW_NOTE_NAMES && !SHOW_NOTE_OCTS && (\n                <small>{chordData.chord.notes.join()}</small>\n              )}\n            </div>\n          )}\n        </div>\n      </div>\n    );\n  }\n);\n\nfunction App({audioApi}) {\n  const resumeAudio = React.useCallback(() => audioApi.actx.resume(), [\n    audioApi,\n  ]);\n  const suspendAudio = React.useCallback(() => audioApi.actx.suspend(), [\n    audioApi,\n  ]);\n\n  const [key, setKey] = useLocalStorage('key', 'C');\n  const [strumming, setStrumming] = useLocalStorage(\n    'strumming',\n    strummingTimes[2]\n  );\n\n  const [includeExtra, setIncludeExtra] = useLocalStorage(\n    'includeExtra',\n    false\n  );\n  const [lastChord, setLastChord] = React.useState(null);\n  const [octave, setOctave] = useLocalStorage('octave', 4);\n  const [scaleType, setScaleType] = useLocalStorage('scaleType', 'major');\n\n  const [highlightedKeys, setHighlightedKeys] = React.useState(null);\n\n  const [history, setHistory] = React.useState([]);\n\n  const scaleData = React.useMemo(() => makeScaleData(key, scaleType, octave), [\n    key,\n    scaleType,\n    octave,\n  ]);\n\n  const toggleExtra = React.useCallback(() => setIncludeExtra(s => !s));\n\n  const [events, setEvents] = React.useState([]);\n  const [midiOut, setMidiOut] = React.useState(null);\n\n  const playScale = React.useCallback(() => {\n    setEvents(events => {\n      let updatedEvents = events;\n      const scaleNotes = scaleData.scaleNotes.slice();\n      scaleNotes.push(Tonal.transpose(scaleNotes[0], '8P'));\n      const currentTime = audioApi.actx.currentTime;\n      let lastStartTimeOffset = 0;\n      scaleNotes.forEach(noteName => {\n        lastStartTimeOffset += beatDurationSeconds;\n\n        updatedEvents = playNote(\n          updatedEvents,\n          noteName,\n          currentTime + lastStartTimeOffset,\n          currentTime + lastStartTimeOffset + beatDurationSeconds\n        );\n      });\n\n      return updatedEvents;\n    });\n  }, [setEvents, audioApi, scaleData]);\n\n  const playChord = React.useCallback(\n    (chordData, octave, strumming) => {\n      const chordNotes = chordData.chordNotesForOctave;\n\n      setEvents(events => {\n        let updatedEvents = events;\n\n        const currentTime = audioApi.actx.currentTime;\n\n        chordNotes.forEach((noteName, i) => {\n          const strumDelay = i * (strumming / 1000);\n          updatedEvents = playNote(\n            updatedEvents,\n            noteName,\n            currentTime + strumDelay,\n            currentTime + beatDurationSeconds + i * (strumming / 1000)\n          );\n        });\n\n        return updatedEvents;\n      });\n\n      setHistory(s => s.concat(chordData));\n    },\n    [setEvents, audioApi]\n  );\n\n  useValueObserver(scaleData, () => {\n    setHighlightedKeys(scaleData.scaleNotes);\n  });\n\n  // startup\n  React.useEffect(() => {\n    // start event-consuming interval\n    const id = setInterval(() => {\n      setEvents(events => onTick(events, audioApi, midiOut));\n    }, 1);\n    return () => {\n      clearInterval(id);\n    };\n  }, [midiOut]);\n\n  return (\n    <div className=\"App\">\n      <button onClick={suspendAudio}>pause audio</button>\n      <button onClick={resumeAudio}>resume audio</button>\n      {audioApi.dx7 && (\n        <Recorder actx={audioApi.actx} inputNode={audioApi.dx7} />\n      )}\n      <MidiOutput selectedOutput={midiOut} onChangeOutput={setMidiOut} />\n      <div onMouseOver={() => setHighlightedKeys(scaleData.scaleNotes)}>\n        <label>\n          key:{' '}\n          <select\n            value={scaleData.key}\n            onChange={event => setKey(event.currentTarget.value)}\n          >\n            {keys.map(key => (\n              <option key={key} value={key}>\n                {key}\n              </option>\n            ))}\n          </select>\n        </label>{' '}\n        <label>\n          octave:{' '}\n          <select\n            value={octave}\n            onChange={event => setOctave(parseInt(event.currentTarget.value))}\n          >\n            {[1, 2, 3, 4, 5, 6, 7].map(key => (\n              <option key={key} value={key}>\n                {key}\n              </option>\n            ))}\n          </select>\n        </label>{' '}\n        <label>\n          scale type:{' '}\n          <select\n            value={scaleType}\n            onChange={event => setScaleType(event.currentTarget.value)}\n          >\n            {allScales.map(key => (\n              <option key={key} value={key}>\n                {key}\n              </option>\n            ))}\n          </select>\n        </label>{' '}\n        <label>scale notes: </label>\n        {scaleData.scaleNotes.join()}{' '}\n        <button onClick={playScale}>play scale</button>{' '}\n        <label>\n          strumming:\n          <input\n            type=\"range\"\n            min={0}\n            max={9}\n            value={strummingTimesIndex[strumming]}\n            onChange={e => {\n              setStrumming(strummingTimes[parseInt(e.currentTarget.value)]);\n            }}\n          />{' '}\n          <input hidden type=\"number\" value={strumming} readOnly />\n        </label>\n        <label>\n          <input\n            type=\"checkbox\"\n            onChange={toggleExtra}\n            checked={includeExtra}\n          />\n          include extra chords\n        </label>\n      </div>\n\n      <Keyboard\n        highlightKeys={highlightedKeys}\n        startOctave={octave}\n        octaves={3}\n      />\n\n      <div style={flexColContainer}>\n        <div style={flexCol}>\n          {scaleData.sizes\n            .filter(size => (includeExtra ? true : size > 0))\n            .sort((a, b) => (SIZE_ASC ? a - b : b - a))\n            .map((size, sizeIndex) => (\n              <div key={sizeIndex}>\n                {false && <div style={{flex: 1}}>{size}</div>}\n                <br />\n                <div key={size} style={{display: 'flex'}}>\n                  {Array.from(scaleData.scalePosChords).map(\n                    ([pos, chordDatas]) => {\n                      return (\n                        <div key={pos} style={{flex: 1}}>\n                          {sizeIndex === 0 && (\n                            <div>{scaleTypesPosNames[scaleType][pos]}</div>\n                          )}\n\n                          {chordDatas\n                            .filter(chordData => chordData.size === size)\n                            // silly heuristic for simpler chords\n                            .sort(\n                              (a, b) => a.chordName.length - b.chordName.length\n                            )\n                            .map((chordData, i) => (\n                              <ChordButton\n                                key={i}\n                                {...{\n                                  chordData,\n                                  playChord,\n                                  setLastChord,\n                                  octave,\n                                  strumming,\n                                  selected: chordData.chordName === lastChord,\n                                  onMouseOver: setHighlightedKeys,\n                                }}\n                              />\n                            ))}\n                        </div>\n                      );\n                    }\n                  )}\n                </div>\n              </div>\n            ))}\n        </div>\n\n        {SHOW_HISTORY && (\n          <div style={{width: '10vw'}}>\n            <details>\n              <summary>\n                <div>history</div>\n              </summary>\n              <div style={{height: '90vh', overflow: 'auto'}}>\n                {history\n                  .slice()\n                  .reverse()\n                  .map((chordData, i) => (\n                    <ChordButton\n                      key={i}\n                      {...{\n                        chordData,\n                        playChord,\n                        setLastChord: () => {},\n                        octave,\n                        strumming,\n                        selected: false,\n                        onMouseOver: setHighlightedKeys,\n                      }}\n                    />\n                  ))}\n                {history.length === 0 && (\n                  <div>\n                    <br />\n                    played chords will appear here\n                  </div>\n                )}\n              </div>\n            </details>\n          </div>\n        )}\n      </div>\n      <pre style={{height: 300, overflow: 'auto'}}>\n        {events.map(ev => JSON.stringify(ev)).join('\\n')}\n      </pre>\n    </div>\n  );\n}\n\nfunction Theme() {\n  const [darkMode, setDarkMode] = React.useState(false);\n\n  React.useEffect(() => {\n    if (darkMode) {\n      document.documentElement.classList.add('dark-mode');\n    } else {\n      document.documentElement.classList.remove('dark-mode');\n    }\n  }, [darkMode]);\n\n  return (\n    <div style={{position: 'absolute', top: 0, right: 0}}>\n      <label>\n        dark mode:{' '}\n        <input\n          type=\"checkbox\"\n          checked={darkMode}\n          onChange={() => setDarkMode(s => !s)}\n        />\n      </label>\n    </div>\n  );\n}\n\nconst CAN_AUTOPLAY_AUDIO = new AudioContext().state == 'running';\n\nfunction Startup() {\n  const [startedAudio, setStartedAudio] = React.useState(false);\n  const [audioApi, setAudioApi] = React.useState(null);\n\n  const onStart = React.useCallback(() => {\n    document.querySelector('.dx7').style.visibility = 'visible';\n    setStartedAudio(true);\n  }, [setStartedAudio]);\n\n  React.useEffect(() => {\n    async function initSampled() {\n      const {sampledDX7} = await import('./sampledDX7');\n\n      sampledDX7().then(({dx7, actx}) => {\n        window.initDX7Shim(dx7, actx);\n      });\n    }\n    window.onDX7Init = (dx7, actx) => {\n      if (!dx7) {\n        // fall back to sampled\n        return initSampled();\n      }\n      const newAudioApi = {\n        dx7,\n        actx,\n      };\n\n      setAudioApi(newAudioApi);\n      if (actx.state === 'running') {\n        onStart();\n      }\n    };\n    if (USE_SAMPLED_DX7) {\n      initSampled();\n    } else {\n      window.initDX7(process.env.PUBLIC_URL);\n    }\n  }, []);\n\n  if (audioApi && startedAudio) {\n    return (\n      <div>\n        <App audioApi={audioApi} />\n        <Theme />\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"App\">\n      {audioApi ? (\n        <button\n          style={{fontSize: 42, borderRadius: 9, cursor: 'pointer'}}\n          onClick={() => {\n            audioApi.actx.resume();\n            onStart();\n          }}\n        >\n          start\n        </button>\n      ) : (\n        'loading'\n      )}\n    </div>\n  );\n}\n\nexport default Startup;\n","import React from 'react';\n\nexport default function useValueObserver(\n  currentValue,\n  onChange: (value, prevValue) => void\n) {\n  const valueRef = React.useRef(currentValue);\n\n  React.useEffect(() => {\n    const prevValue = valueRef.current;\n    valueRef.current = currentValue;\n\n    if (prevValue !== currentValue) {\n      onChange(currentValue, prevValue);\n    }\n  }, [currentValue]);\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}