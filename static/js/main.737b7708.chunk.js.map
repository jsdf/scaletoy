{"version":3,"sources":["useKeyboardInteractions.js","useLocalStorage.js","useValueObserver.js","Keyboard.js","useQueryParam.js","downloadFile.js","Recorder.js","MidiDeviceSelector.js","Scaleboard.js","MidiExport.js","Details.js","Select.js","Range.js","Checkbox.js","ChordButton.js","App.js","Startup.js","serviceWorker.js","index.js","keyboardStyles.js","simplifyEnharmonics.js"],"names":["useKeyboardInteractions","_ref","notePlayer","_React$useState","React","useState","Set","_React$useState2","Object","_Users_jfriend_code_scaletoy_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","pressedKeys","setPressedKeys","pressedKeysRef","useRef","pressedKeysAPI","useMemo","setKeyPressed","noteName","prev","current","has","triggerAttack","updated","add","setKeyReleased","delete","triggerRelease","makeHandlers","onMouseOver","e","buttons","onMouseDown","onMouseUp","onMouseOut","useLocalStorage","baseKey","initialValue","key","concat","_useState","item","window","localStorage","getItem","JSON","parse","error","console","log","_useState2","storedValue","setStoredValue","value","valueToStore","Function","setItem","stringify","__webpack_require__","d","__webpack_exports__","useValueObserver","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","currentValue","onChange","valueRef","useEffect","prevValue","whiteNotes","notesWithSharps","highlightTypeColors","scale","chord","memo","props","numKeys","length","octaves","keys","highlightKeys","highlightType","highlightKeysSharpified","map","simplifyEnharmonics","_useKeyboardInteracti","size","startAt","arguments","undefined","_Users_jfriend_code_scaletoy_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_1__","Array","i","range","startOctave","forEach","octave","octaveOffset","note","noteOffset","noteNameSharp","push","react__WEBPACK_IMPORTED_MODULE_2___default","a","createElement","assign","style","_Users_jfriend_code_scaletoy_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","styles","whiteKey","includes","background","pressed","left","width","noteLabel","blackKey","container","keyboard","QUERY_PARAM_FORMATS","boolean","v","integer","parsed","parseInt","Number","isNaN","Error","toString","string","useQueryParam","param","format","URL","location","href","searchParams","get","url","set","history","replaceState","downloadFile","blob","fileName","document","body","appendChild","createObjectURL","download","click","revokeObjectURL","remove","makeNewRecorder","actx","inputNode","chunks","dest","createMediaStreamDestination","mediaRecorder","MediaRecorder","stream","connect","ondataavailable","evt","data","onstop","Blob","type","Recorder","recorderRef","slicedToArray","recording","setRecording","toggleRecording","useCallback","s","start","state","stop","react_default","onClick","disabled","MidiDeviceSelector","selectedPort","availablePorts","setAvailablePorts","accessType","navigator","requestMIDIAccess","then","access","from","values","onstatechange","currentTarget","indexOf","port","name","scaleDegreeImportance","objectSpread","keyboardStyles","tonicKey","marginTop","fontSize","qwerty","split","atStartOfOctave","scaleSteps","_React$useMemo","simplifiedPitchClasses","scalePitchClasses","importance","slice","simplifiedPitchClassesForImportance","notesScaleDegrees","Map","scaleDegree","sortedPitchClassesForImportance","sort","b","qwertyToNoteName","qwertyOffset","index","getQwertyOffset","Math","min","max","floor","qwertyHandlers","setOctave","addEventListener","removeEventListener","toConsumableArray","isTonic","showScaleDegrees","MidiExport","beatDurationSeconds","bpm","strumming","exportHistory","midi","Midi","header","setTempo","track","addTrack","chordData","eventIdx","chordNotes","chordNotesForOctave","beatStart","strummingSeconds","strumDelay","addNote","Tonal","time","duration","toArray","Details","summary","children","startOpen","open","setOpen","onToggle","preventDefault","stopPropagation","Select","label","options","event","Range","step","formatValue","showValue","Fragment","readOnly","Checkbox","checked","chordTypeColors","major","minor","diminished","buttonStyle","display","cursor","color","padding","paddingBottom","height","overflow","textAlign","playChord","setLastChord","strumMode","selected","noteNames","intervals","join","chordType","border","borderColor","chordName","onMouseEnter","SIZE_ASC","SHOW_HISTORY","strummingTimes","strummingTimesIndex","scaleTypesChordPatterns","dorian","lydian","phrygian","ionian","mixolydian","locrian","allScales","romanNumerals","scaleTypesPosNames","reduce","acc","scaleName","pattern","scaleType","pos","toUpperCase","getScaleChords","Scale","notes","pc","chords","Chord","tonic","aliases","NOTE_ON","NOTE_OFF","velocityMidi","playNote","events","end","noteMidi","updatedEvents","ev","message","newEvents","addEvents","getReifiedNotesForChordForScale","scalePitchClassesNotesMap","tonicReified","interval","Note","makeScaleData","scaleNotes","reifyScaleNotesWithOctave","scalePosChords","chordNames","quality","chordDatasByName","sizes","chordDatas","flexColContainer","flexCol","flex","alignLeft","alignCenter","App","audioApi","resumeAudio","resume","suspendAudio","suspend","_useQueryParam","_useQueryParam2","setKey","_useQueryParam3","_useQueryParam4","setStrumming","_useQueryParam5","_useQueryParam6","setStrumMode","_useQueryParam7","_useQueryParam8","includeExtra","setIncludeExtra","lastChord","_useQueryParam9","_useQueryParam10","_useQueryParam11","_useQueryParam12","setScaleType","_useQueryParam13","_useQueryParam14","setShowScaleDegrees","_useQueryParam15","_useQueryParam16","setScaleSteps","_React$useState3","_React$useState4","highlightedKeys","setHighlightedKeys","setHighlightedChord","_React$useState5","_React$useState6","setHistory","clearHistory","scaleData","setHighlightedScale","_React$useState7","_React$useState8","setEvents","_React$useState9","_React$useState10","midiOut","setMidiOut","playScale","currentTime","lastStartTimeOffset","reverse","knuthShuffle","onMidi","send","dx7","id","setInterval","nextEvent","onTick","clearInterval","className","src_Recorder","src_Scaleboard","Keyboard","src_ChordButton","filter","sizeIndex","_ref2","_ref3","USE_SAMPLED_DX7","Boolean","nonnull","Theme","_useLocalStorage","_useLocalStorage2","darkMode","setDarkMode","documentElement","classList","position","top","right","Startup","startedAudio","setStartedAudio","setAudioApi","onStart","querySelector","visibility","initSampled","_initSampled","apply","this","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","next","Promise","all","bind","sampledDX7","sent","initDX7Shim","onDX7Init","initDX7","process","Route","lazy","useRouting","Suspense","fallback","borderRadius","hostname","match","ReactDOM","render","src_Startup","getElementById","serviceWorker","ready","registration","unregister","marginBottom","borderBottomLeftRadius","borderBottomRightRadius","zIndex","highlighted","_tonaljs_tonal__WEBPACK_IMPORTED_MODULE_0__","_tonaljs_note__WEBPACK_IMPORTED_MODULE_1__","noteNameSimplified"],"mappings":"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","file":"static/js/main.737b7708.chunk.js","sourcesContent":["import React from 'react';\n\nexport default function useKeyboardInteractions({notePlayer}) {\n  const [pressedKeys, setPressedKeys] = React.useState(() => new Set());\n\n  const pressedKeysRef = React.useRef(new Set());\n\n  const pressedKeysAPI = React.useMemo(() => {\n    return {\n      setKeyPressed(noteName) {\n        const prev = pressedKeysRef.current;\n\n        if (!prev.has(noteName)) {\n          notePlayer.triggerAttack(noteName);\n          const updated = new Set(prev).add(noteName);\n          pressedKeysRef.current = updated;\n          setPressedKeys(updated);\n        }\n      },\n      setKeyReleased(noteName) {\n        const prev = pressedKeysRef.current;\n\n        if (prev.has(noteName)) {\n          const updated = new Set(prev);\n          updated.delete(noteName);\n          pressedKeysRef.current = updated;\n          setPressedKeys(updated);\n          notePlayer.triggerRelease(noteName);\n        }\n      },\n    };\n  }, [setPressedKeys]);\n\n  function makeHandlers(noteName) {\n    return {\n      onMouseOver: (e) => {\n        if (e.buttons > 0) {\n          pressedKeysAPI.setKeyPressed(noteName);\n        }\n      },\n      onMouseDown: () => {\n        pressedKeysAPI.setKeyPressed(noteName);\n      },\n      onMouseUp: () => {\n        pressedKeysAPI.setKeyReleased(noteName);\n      },\n      onMouseOut: () => {\n        pressedKeysAPI.setKeyReleased(noteName);\n      },\n    };\n  }\n\n  return {pressedKeys, pressedKeysAPI, makeHandlers};\n}\n","import {useState} from 'react';\n\nexport default function useLocalStorage(baseKey, initialValue) {\n  const key = `scaletoy-${baseKey}`;\n  // State to store our value\n  // Pass initial state function to useState so logic is only executed once\n  const [storedValue, setStoredValue] = useState(() => {\n    try {\n      // Get from local storage by key\n      const item = window.localStorage.getItem(key);\n      // Parse stored json or if none return initialValue\n      return item ? JSON.parse(item) : initialValue;\n    } catch (error) {\n      // If error also return initialValue\n      console.log(error);\n      return initialValue;\n    }\n  });\n\n  // Return a wrapped version of useState's setter function that ...\n  // ... persists the new value to localStorage.\n  const setValue = value => {\n    try {\n      // Allow value to be a function so we have same API as useState\n      const valueToStore =\n        value instanceof Function ? value(storedValue) : value;\n      // Save state\n      setStoredValue(valueToStore);\n      // Save to local storage\n      window.localStorage.setItem(key, JSON.stringify(valueToStore));\n    } catch (error) {\n      // A more advanced implementation would handle the error case\n      console.log(error);\n    }\n  };\n\n  return [storedValue, setValue];\n}\n","import React from 'react';\n\nexport default function useValueObserver(\n  currentValue,\n  onChange: (value, prevValue) => void\n) {\n  const valueRef = React.useRef(currentValue);\n\n  React.useEffect(() => {\n    const prevValue = valueRef.current;\n    valueRef.current = currentValue;\n\n    if (prevValue !== currentValue) {\n      onChange(currentValue, prevValue);\n    }\n  }, [currentValue, onChange]);\n}\n","import React from 'react';\nimport simplifyEnharmonics from './simplifyEnharmonics';\nimport useKeyboardInteractions from './useKeyboardInteractions';\nimport styles from './keyboardStyles';\n\nfunction range(size, startAt = 0) {\n  return [...Array(size).keys()].map((i) => i + startAt);\n}\n\nconst whiteNotes = ['C', 'D', 'E', 'F', 'G', 'A', 'B'];\nconst notesWithSharps = new Set(['C', 'D', 'F', 'G', 'A']);\n\nconst highlightTypeColors = {\n  scale: '#4287f5',\n  chord: 'orange',\n};\n\nfunction Keyboard(props: {\n  highlightKeys: Array<string>;\n  startOctave: number;\n  octaves: number;\n  highlightType: string;\n  notePlayer: Object;\n}) {\n  const numKeys = whiteNotes.length * props.octaves;\n  const keys = [];\n\n  const {highlightKeys, highlightType, notePlayer} = props;\n\n  const highlightKeysSharpified = React.useMemo(\n    () => (highlightKeys ? highlightKeys.map(simplifyEnharmonics) : null),\n    [highlightKeys]\n  );\n\n  const {pressedKeys, makeHandlers} = useKeyboardInteractions({notePlayer});\n\n  range(props.octaves, props.startOctave).forEach((octave, octaveOffset) => {\n    whiteNotes.forEach((note, noteOffset) => {\n      const noteName = note + octave;\n      const noteNameSharp = note + '#' + octave;\n      keys.push(\n        <div\n          key={noteName}\n          {...makeHandlers(noteName)}\n          style={{\n            ...styles.whiteKey,\n            ...(highlightKeysSharpified &&\n            highlightKeysSharpified.includes(noteName)\n              ? {background: highlightTypeColors[highlightType]}\n              : null),\n            ...(pressedKeys.has(noteName) ? styles.pressed : null),\n            left:\n              (octaveOffset * whiteNotes.length + noteOffset) *\n              (styles.whiteKey.width - 1),\n          }}\n        >\n          <div style={styles.noteLabel}>{note === 'C' ? noteName : note}</div>\n        </div>\n      );\n\n      if (notesWithSharps.has(note)) {\n        keys.push(\n          <div\n            key={noteNameSharp}\n            {...makeHandlers(noteNameSharp)}\n            style={{\n              ...styles.blackKey,\n              ...(highlightKeysSharpified &&\n              highlightKeysSharpified.includes(noteNameSharp)\n                ? {background: highlightTypeColors[highlightType]}\n                : null),\n              left:\n                (octaveOffset * whiteNotes.length + noteOffset + 1) *\n                  (styles.whiteKey.width - 1) -\n                (styles.blackKey.width - 1) / 2,\n            }}\n          />\n        );\n      }\n    });\n  });\n  return (\n    <div style={styles.container}>\n      <div style={{...styles.keyboard, width: numKeys * styles.whiteKey.width}}>\n        {keys}\n      </div>\n    </div>\n  );\n}\n\nexport default React.memo(Keyboard);\n","import {useState} from 'react';\n\nexport const QUERY_PARAM_FORMATS = {\n  boolean: {\n    parse: (v) => !(v == null || v === 'false'),\n    stringify: (v) => JSON.stringify(v),\n  },\n  integer: {\n    parse: (v) => {\n      const parsed = parseInt(v, 10);\n      if (Number.isNaN(parsed)) {\n        debugger;\n        throw new Error('invalid int when parsing: ' + v);\n      }\n      return parsed;\n    },\n    stringify: (v) => v.toString(),\n  },\n  string: {\n    parse: (v) => v,\n    stringify: (v) => v,\n  },\n};\n\nexport default function useQueryParam(param, initialValue, format) {\n  // State to store our value\n  // Pass initial state function to useState so logic is only executed once\n  const [storedValue, setStoredValue] = useState(() => {\n    try {\n      // Get from url by param\n      const item = new URL(window.location.href).searchParams.get(param);\n      // Parse stored json or if none return initialValue\n      return item != null ? format.parse(item) : initialValue;\n    } catch (error) {\n      // If error also return initialValue\n      console.log(error);\n      return initialValue;\n    }\n  });\n\n  // Return a wrapped version of useState's setter function that ...\n  // ... persists the new value to query params.\n  const setValue = (value) => {\n    try {\n      // Allow value to be a function so we have same API as useState\n      const valueToStore =\n        typeof value === 'function' ? value(storedValue) : value;\n      // Save state\n      setStoredValue(valueToStore);\n\n      const url = new URL(window.location.href);\n      url.searchParams.set(param, format.stringify(valueToStore));\n      window.history.replaceState(null, null, url.toString());\n    } catch (error) {\n      // A more advanced implementation would handle the error case\n      console.log(error);\n    }\n  };\n\n  return [storedValue, setValue];\n}\n","export default function downloadFile(blob, fileName) {\n  var a = document.createElement('a');\n  document.body.appendChild(a);\n  a.style = 'display: none';\n\n  const url = URL.createObjectURL(blob);\n  a.href = url;\n  a.download = fileName;\n  a.click();\n  URL.revokeObjectURL(url);\n  a.remove();\n}\n","import React from 'react';\nimport downloadFile from './downloadFile';\n\nfunction makeNewRecorder(actx, inputNode) {\n  const chunks = [];\n  const dest = actx.createMediaStreamDestination();\n  const mediaRecorder = new MediaRecorder(dest.stream);\n  inputNode.connect(dest);\n\n  mediaRecorder.ondataavailable = function(evt) {\n    // push each chunk (blobs) in an array\n    chunks.push(evt.data);\n  };\n\n  mediaRecorder.onstop = function(evt) {\n    // Make blob out of our blobs, and open it.\n    var blob = new Blob(chunks, {type: 'audio/ogg; codecs=opus'});\n\n    const fileName = 'audio.ogg';\n\n    downloadFile(blob, fileName);\n  };\n\n  return mediaRecorder;\n}\n\nfunction Recorder(props) {\n  const recorderRef = React.useRef(\n    makeNewRecorder(props.actx, props.inputNode)\n  );\n\n  const [recording, setRecording] = React.useState(false);\n\n  const toggleRecording = React.useCallback(() => setRecording(s => !s), [\n    setRecording,\n  ]);\n\n  React.useEffect(() => {\n    if (recording) {\n      recorderRef.current.start();\n    } else {\n      if (recorderRef.current.state !== 'inactive') {\n        recorderRef.current.stop();\n        recorderRef.current = makeNewRecorder(props.actx, props.inputNode);\n      }\n    }\n  }, [recording]);\n\n  return (\n    <button onClick={toggleRecording}>\n      {recording ? 'stop recording' : 'record audio'}\n    </button>\n  );\n}\n\nfunction ShimRecorder(props) {\n  if (typeof MediaRecorder == 'undefined') {\n    return <button disabled>[recording not available]</button>;\n  }\n\n  return <Recorder {...props} />;\n}\n\nexport default React.memo(ShimRecorder);\n","import React from 'react';\n\nexport default function MidiDeviceSelector({type, onChange, selectedPort}) {\n  const [availablePorts, setAvailablePorts] = React.useState([]);\n\n  const accessType = type == 'input' ? 'inputs' : 'outputs';\n\n  React.useEffect(() => {\n    if (!navigator.requestMIDIAccess) {\n      return;\n    }\n    navigator.requestMIDIAccess().then(access => {\n      setAvailablePorts(Array.from(access[accessType].values()));\n\n      access.onstatechange = function(e) {\n        setAvailablePorts(Array.from(access[accessType].values()));\n      };\n    });\n  }, []);\n\n  return (\n    <label>\n      midi {type == 'input' ? 'in' : 'out'}:{' '}\n      <select\n        onChange={e => {\n          onChange(availablePorts[parseInt(e.currentTarget.value)]);\n        }}\n        value={availablePorts.indexOf(selectedPort)}\n      >\n        <option key={-1} value={-1}>\n          (none)\n        </option>\n        {availablePorts.map((port, i) => (\n          <option key={i} value={i}>\n            {port.name}\n          </option>\n        ))}\n      </select>\n    </label>\n  );\n}\n","import React from 'react';\nimport simplifyEnharmonics from './simplifyEnharmonics';\nimport useKeyboardInteractions from './useKeyboardInteractions';\nimport keyboardStyles from './keyboardStyles';\n\n// tonic, dominant, submediant, mediant, supertonic, leading tone, subdominant\nconst scaleDegreeImportance = [1, 5, 6, 3, 2, 7];\n\nfunction range(size, startAt = 0) {\n  return [...Array(size).keys()].map((i) => i + startAt);\n}\n\nconst styles = {\n  ...keyboardStyles,\n  tonicKey: {\n    background: '#ccc',\n  },\n  noteLabel: {\n    width: 20,\n    marginTop: 70,\n    fontSize: 10,\n  },\n};\n\nconst highlightTypeColors = {\n  scale: '#4287f5',\n  chord: 'orange',\n};\n\nconst qwerty = \"asdfghjkl;'\".split('');\n\nfunction wrap(kX, kLowerBound, kUpperBound) {\n  let range_size = kUpperBound - kLowerBound + 1;\n\n  if (kX < kLowerBound)\n    kX += range_size * ((kLowerBound - kX) / range_size + 1);\n\n  return kLowerBound + ((kX - kLowerBound) % range_size);\n}\n\nfunction getQwertyOffset(key) {\n  const index = qwerty.indexOf(key);\n  if (index > -1) {\n    return index;\n  }\n  return null;\n}\n\nfunction atStartOfOctave(note) {\n  return note[0] > 'B';\n}\n\nfunction Scaleboard(props: {\n  highlightKeys: Array<string>;\n  startOctave: number;\n  octaves: number;\n  highlightType: string;\n  notePlayer: Object;\n  scalePitchClasses: Array<string>;\n  showScaleDegrees: boolean;\n  scaleSteps: number;\n  setOctave: (s) => void;\n}) {\n  const numKeys = props.scaleSteps * props.octaves;\n  const keys = [];\n\n  const {highlightKeys, highlightType, notePlayer} = props;\n\n  const highlightKeysSharpified = React.useMemo(\n    () => (highlightKeys ? highlightKeys.map(simplifyEnharmonics) : null),\n    [highlightKeys]\n  );\n\n  const {pressedKeys, pressedKeysAPI, makeHandlers} = useKeyboardInteractions({\n    notePlayer,\n  });\n\n  const {\n    simplifiedPitchClasses,\n    importance,\n    simplifiedPitchClassesForImportance,\n    notesScaleDegrees,\n    sortedPitchClassesForImportance,\n  } = React.useMemo(() => {\n    const simplifiedPitchClasses = props.scalePitchClasses.map(\n      simplifyEnharmonics\n    );\n    const importance = scaleDegreeImportance.slice(0, props.scaleSteps);\n\n    const simplifiedPitchClassesForImportance = importance.map(\n      (i) => simplifiedPitchClasses[i - 1]\n    );\n\n    const notesScaleDegrees = new Map(\n      scaleDegreeImportance.map((scaleDegree) => [\n        simplifiedPitchClasses[scaleDegree - 1],\n        scaleDegree,\n      ])\n    );\n\n    const sortedPitchClassesForImportance = simplifiedPitchClassesForImportance\n      .slice()\n      .sort((a, b) => {\n        if (atStartOfOctave(a) === atStartOfOctave(b)) {\n          return a < b ? -1 : 1;\n        }\n\n        return atStartOfOctave(a) ? -1 : 1;\n      });\n\n    return {\n      simplifiedPitchClasses,\n      importance,\n      simplifiedPitchClassesForImportance,\n      notesScaleDegrees,\n      sortedPitchClassesForImportance,\n    };\n  }, [props.scalePitchClasses, props.scaleSteps]);\n\n  const qwertyToNoteName = React.useCallback(\n    (key) => {\n      const qwertyOffset = getQwertyOffset(key);\n      if (qwertyOffset == null) {\n        return null;\n      }\n\n      const pitchClass =\n        sortedPitchClassesForImportance[\n          qwertyOffset % sortedPitchClassesForImportance.length\n        ];\n\n      return (\n        pitchClass +\n        Math.min(\n          7,\n          Math.max(\n            0,\n            props.startOctave +\n              Math.floor(qwertyOffset / sortedPitchClassesForImportance.length)\n          )\n        )\n      );\n    },\n    [sortedPitchClassesForImportance, props.startOctave]\n  );\n\n  React.useEffect(() => {\n    const qwertyHandlers = {\n      onKeyDown(e) {\n        const noteName = qwertyToNoteName(e.key);\n        if (noteName != null) {\n          pressedKeysAPI.setKeyPressed(noteName);\n        }\n        switch (e.key) {\n          case 'z':\n            props.setOctave((s) => Math.max(s - 1, 0));\n            break;\n          case 'x':\n            props.setOctave((s) => Math.min(s + 1, 7));\n            break;\n        }\n      },\n      onKeyUp(e) {\n        const noteName = qwertyToNoteName(e.key);\n        if (noteName != null) {\n          pressedKeysAPI.setKeyReleased(noteName);\n        }\n      },\n    };\n\n    document.addEventListener('keydown', qwertyHandlers.onKeyDown);\n    document.addEventListener('keyup', qwertyHandlers.onKeyUp);\n    return () => {\n      document.removeEventListener('keydown', qwertyHandlers.onKeyDown);\n      document.removeEventListener('keyup', qwertyHandlers.onKeyUp);\n    };\n  }, [pressedKeysAPI, qwertyToNoteName, props.setOctave]);\n\n  range(props.octaves, props.startOctave).forEach((octave, octaveOffset) => {\n    sortedPitchClassesForImportance.forEach((note, noteOffset) => {\n      const noteName = note + octave;\n      const isTonic = note === props.scalePitchClasses[0];\n      keys.push(\n        <div\n          key={noteName}\n          {...makeHandlers(noteName)}\n          style={{\n            ...styles.whiteKey,\n            ...(isTonic ? styles.tonicKey : null),\n            ...(highlightKeysSharpified &&\n            highlightKeysSharpified.includes(noteName)\n              ? {background: highlightTypeColors[highlightType]}\n              : null),\n            ...(pressedKeys.has(noteName) ? styles.pressed : null),\n            left:\n              (octaveOffset * simplifiedPitchClassesForImportance.length +\n                noteOffset) *\n              (styles.whiteKey.width - 1),\n          }}\n        >\n          <div style={styles.noteLabel}>\n            {props.showScaleDegrees\n              ? notesScaleDegrees.get(note)\n              : isTonic\n              ? noteName\n              : note}\n          </div>\n        </div>\n      );\n    });\n  });\n  return (\n    <div style={styles.container}>\n      <div style={{...styles.keyboard, width: numKeys * styles.whiteKey.width}}>\n        {keys}\n      </div>\n    </div>\n  );\n}\n\nexport default React.memo(Scaleboard);\n","import React from 'react';\nimport {Midi} from '@tonejs/midi';\nimport downloadFile from './downloadFile';\nimport * as Tonal from '@tonaljs/tonal';\n\nexport default function({history, beatDurationSeconds, bpm, strumming}) {\n  const exportHistory = React.useCallback(() => {\n    // create a new midi file\n    const midi = new Midi();\n    midi.header.setTempo(bpm);\n    // add a track\n    const track = midi.addTrack();\n\n    history.forEach((chordData, eventIdx) => {\n      const chordNotes = chordData.chordNotesForOctave;\n      const beatStart = eventIdx * beatDurationSeconds * 2;\n      const strummingSeconds = strumming / 1000;\n\n      chordNotes.forEach((noteName, i) => {\n        const strumDelay = i * strummingSeconds;\n\n        track.addNote({\n          midi: Tonal.note(noteName).midi,\n          // seconds\n          time: beatStart + strumDelay,\n          duration: beatDurationSeconds + strumDelay,\n        });\n      });\n    });\n\n    const blob = new Blob([midi.toArray()], {type: 'audio/midi'});\n    downloadFile(blob, 'export.mid');\n  }, [history]);\n\n  return <button onClick={exportHistory}>export midi</button>;\n}\n","import React from 'react';\n\nexport default function Details({summary, children, startOpen}) {\n  const [open, setOpen] = React.useState(startOpen);\n\n  const onToggle = React.useCallback(\n    (e) => {\n      e.preventDefault();\n      e.stopPropagation();\n      setOpen(!open);\n    },\n    [open]\n  );\n\n  return (\n    <details open={open}>\n      <summary onClick={onToggle}>{summary}</summary>\n      {open && children}\n    </details>\n  );\n}\n","import React from 'react';\n\nexport default function Select({label, options, value, onChange}) {\n  return (\n    <label>\n      {label}:{' '}\n      <select\n        value={value}\n        onChange={React.useCallback(\n          (event) => onChange(event.currentTarget.value),\n          [onChange]\n        )}\n      >\n        {options.map((key) => {\n          return (\n            <option key={key} value={key}>\n              {key}\n            </option>\n          );\n        })}\n      </select>\n    </label>\n  );\n}\n","import React from 'react';\n\nexport default function Range({\n  label,\n  min,\n  max,\n  step,\n  value,\n  formatValue,\n  showValue,\n  onChange,\n}) {\n  return (\n    <label>\n      {label}:{' '}\n      <input\n        type=\"range\"\n        min={min}\n        max={max}\n        value={value}\n        onChange={React.useCallback(\n          (e) => {\n            onChange(parseInt(e.currentTarget.value));\n          },\n          [onChange]\n        )}\n      />\n      {showValue && (\n        <>\n          {' '}\n          <input\n            type=\"number\"\n            value={formatValue ? formatValue(value) : value}\n            readOnly\n          />\n        </>\n      )}\n    </label>\n  );\n}\n","import React from 'react';\n\nexport default function Checkbox({label, checked, onChange}) {\n  return (\n    <label>\n      <input\n        type=\"checkbox\"\n        onChange={React.useCallback(() => onChange((s) => !s), [onChange])}\n        checked={checked}\n      />\n      {label}\n    </label>\n  );\n}\n","import React from 'react';\n\nconst SHOW_NOTE_NAMES = true;\nconst SHOW_NOTE_OCTS = true;\nconst SHOW_FULL_CHORD_NAMES = false;\n\nconst chordTypeColors = {\n  major: 'rgb(127,199,175)',\n  minor: 'rgb(255,158,157)',\n  diminished: 'rgb(218,216,167)',\n};\n\nconst buttonStyle = {\n  display: 'block',\n  width: '100%',\n  cursor: 'pointer',\n  color: 'black',\n  padding: 4,\n  paddingBottom: 8,\n  height: 46,\n  overflow: 'hidden',\n  textAlign: 'center',\n};\n\nexport default React.memo(function ChordButton({\n  chordData,\n  playChord,\n  setLastChord,\n  octave,\n  strumming,\n  strumMode,\n  selected,\n  showScaleDegrees,\n  onMouseOver,\n}) {\n  let noteNames = null;\n\n  if (SHOW_NOTE_NAMES) {\n    if (showScaleDegrees) {\n      noteNames = (\n        <div>\n          <small>\n            {chordData.chord.intervals\n              // .map((v) => v.replace(/\\D*/g, ''))\n              .join()}\n          </small>\n        </div>\n      );\n    } else {\n      noteNames = (\n        <div>\n          <small>\n            {SHOW_NOTE_OCTS\n              ? chordData.chordNotesForOctave.join()\n              : chordData.chord.notes.join()}\n          </small>\n        </div>\n      );\n    }\n  }\n\n  return (\n    <div\n      style={{\n        ...buttonStyle,\n        background: chordTypeColors[chordData.chordType],\n        border: '1px solid',\n        borderColor: selected ? 'rgba(0,0,0,0.2)' : 'transparent',\n      }}\n      onMouseDown={() => {\n        playChord(chordData, octave, strumming, strumMode);\n        setLastChord(chordData.chordName);\n        console.log(chordData);\n      }}\n      onMouseEnter={(e) => {\n        if (e.buttons > 0) {\n          playChord(chordData, octave, strumming, strumMode);\n          setLastChord(chordData.chordName);\n        }\n        onMouseOver(chordData.chordNotesForOctave);\n      }}\n    >\n      <div>\n        {chordData.chordName}\n        {SHOW_FULL_CHORD_NAMES && (\n          <div>\n            <small>\n              {chordData.chord.name.length > 3 ? (\n                chordData.chord.name\n              ) : (\n                // bad data, don't show\n                <span>&nbsp;</span>\n              )}\n            </small>\n          </div>\n        )}\n        {noteNames}\n      </div>\n    </div>\n  );\n});\n","import React from 'react';\nimport {knuthShuffle} from 'knuth-shuffle';\nimport * as Tonal from '@tonaljs/tonal';\nimport * as Scale from '@tonaljs/scale';\nimport * as Chord from '@tonaljs/chord';\nimport * as Note from '@tonaljs/note';\nimport Recorder from './Recorder';\nimport useQueryParam, {QUERY_PARAM_FORMATS} from './useQueryParam';\nimport useValueObserver from './useValueObserver';\nimport MidiDeviceSelector from './MidiDeviceSelector';\nimport Keyboard from './Keyboard';\nimport Scaleboard from './Scaleboard';\nimport MidiExport from './MidiExport';\nimport simplifyEnharmonics from './simplifyEnharmonics';\nimport Details from './Details';\nimport Select from './Select';\nimport Range from './Range';\nimport Checkbox from './Checkbox';\nimport ChordButton from './ChordButton';\n\nconst SIZE_ASC = true;\nconst SHOW_HISTORY = true;\n\nconst strummingTimes = [0, 10, 30, 50, 75, 100, 150, 200];\nconst strummingTimesIndex = {};\nstrummingTimes.forEach((v, i) => {\n  strummingTimesIndex[v] = i;\n});\n\nfunction transposeByOctaves(note, shift) {\n  return `${note.pc}${note.oct + shift}`;\n}\n\nfunction getChordsBySize(chords, key) {\n  return chords\n    .map((chordType) => Chord.chord(`${key}${chordType}`))\n    .sort((a, b) => a.intervals.length - b.intervals.length)\n    .map((chord) => `${chord.tonic}${chord.aliases[0]}`);\n}\n\nconst keys = ['C', 'C#', 'D', 'D#', 'E', 'F', 'F#', 'G', 'G#', 'A', 'Bb', 'B'];\n\nconst scaleTypesChordPatterns = {\n  major: ['major', 'minor', 'minor', 'major', 'major', 'minor', 'diminished'],\n  minor: ['minor', 'diminished', 'major', 'minor', 'minor', 'major', 'major'],\n  dorian: ['minor', 'minor', 'major', 'major', 'minor', 'diminished', 'major'],\n  lydian: ['major', 'major', 'minor', 'diminished', 'major', 'minor', 'minor'],\n  phrygian: [\n    'minor',\n    'major',\n    'major',\n    'minor',\n    'diminished',\n    'major',\n    'minor',\n  ],\n  ionian: ['major', 'minor', 'minor', 'major', 'major', 'minor', 'diminished'],\n  mixolydian: [\n    'major',\n    'minor',\n    'diminished',\n    'major',\n    'minor',\n    'minor',\n    'major',\n  ],\n  locrian: ['diminished', 'major', 'minor', 'minor', 'major', 'major', 'minor'],\n};\n\nconst allScales = Object.keys(scaleTypesChordPatterns);\n\nconst romanNumerals = ['i', 'ii', 'iii', 'iv', 'v', 'vi', 'vii'];\n// const scaleTypesPosNames = {\n//   major: ['I', 'ii', 'iii', 'VI', 'V', 'vi', 'vii*'],\n//   minor: ['i', 'ii*', 'III', 'iv', 'v', 'VI', 'VII'],\n// };\nconst scaleTypesPosNames = Object.keys(scaleTypesChordPatterns).reduce(\n  (acc, scaleName) => {\n    const pattern = scaleTypesChordPatterns[scaleName];\n\n    acc[scaleName] = pattern.map((scaleType, i) => {\n      const pos = romanNumerals[i];\n\n      switch (scaleType) {\n        case 'major':\n          return pos.toUpperCase();\n        case 'minor':\n          return pos;\n        case 'diminished':\n          return pos + '\\xB0';\n        default:\n          throw new Error(`unknown scaleType '${scaleType}'`);\n      }\n    });\n\n    return acc;\n  },\n  {}\n);\n\nfunction getScaleChords(key, scaleType) {\n  return Scale.scale(key + ' ' + scaleType).notes.map((pc, pos) =>\n    getChordsBySize(\n      Scale.scaleChords(scaleTypesChordPatterns[scaleType][pos]),\n      pc\n    )\n  );\n}\n\nconst bpm = 140;\nconst beatDurationSeconds = (1 / bpm) * 60;\n\nconst NOTE_ON = 0x90;\nconst NOTE_OFF = 0x80;\nconst velocityMidi = 80;\n\nfunction onTick(events, audioApi, onMidi) {\n  let i = 0;\n  for (; i < events.length; i++) {\n    const nextEvent = events[i];\n    if (nextEvent.time > audioApi.actx.currentTime) {\n      break;\n    }\n\n    onMidi(nextEvent.message);\n  }\n\n  return i === 0 ? events : events.slice(i);\n}\n\nfunction playNote(events, noteName, start, end) {\n  const noteMidi = Tonal.note(noteName).midi;\n\n  let updatedEvents = events;\n  // end any upcoming events for this key\n  events.forEach((ev) => {\n    if (ev.message[1] == noteMidi) {\n      ev.time = start - 0.01;\n      ev.message[0] = NOTE_OFF;\n    }\n  });\n\n  return addEvents(updatedEvents, [\n    {\n      message: [NOTE_ON, noteMidi, velocityMidi],\n      time: start,\n    },\n    {\n      message: [NOTE_OFF, noteMidi, velocityMidi],\n      time: end,\n    },\n  ]);\n}\n\nfunction addEvents(events, newEvents) {\n  const updatedEvents = events.concat(newEvents);\n  updatedEvents.sort((a, b) => a.time - b.time);\n  return updatedEvents;\n}\n\nfunction makeOctaveScaleNoteSequence(key, octave, scaleType) {\n  const scaleNotes = Scale.scale(`${key}${octave} ${scaleType}`).notes;\n\n  scaleNotes.push(transposeByOctaves(Tonal.note(scaleNotes[0]), 1));\n\n  return scaleNotes;\n}\n\n// get the notes for a chord, for an octave\nfunction getReifiedNotesForChord(chordName, octave) {\n  const chordData = Chord.chord(chordName);\n  const tonicReified = chordData.tonic + octave;\n  const notes = chordData.intervals.map((interval) =>\n    Tonal.transpose(tonicReified, interval)\n  );\n  return notes;\n}\n\n// we need to make sure that the tonic is from the correct octave when the\n// scale spans multiple octaves\nfunction getReifiedNotesForChordForScale(chordName, scalePitchClassesNotesMap) {\n  const chordData = Chord.chord(chordName);\n  const tonicReified = scalePitchClassesNotesMap[chordData.tonic];\n  const notes = chordData.intervals.map((interval) =>\n    Note.simplify(Tonal.transpose(tonicReified, interval))\n  );\n  return notes;\n}\n\nfunction reifyScaleNotesWithOctave(scale, octave) {\n  return scale.intervals.map((interval) =>\n    Tonal.transpose(`${scale.tonic}${octave}`, interval)\n  );\n}\n\nfunction makeScaleData(key, scaleType, octave) {\n  const scale = Scale.scale(`${key} ${scaleType}`);\n  const scalePitchClasses = scale.notes;\n\n  const scaleNotes = reifyScaleNotesWithOctave(scale, octave);\n  const scalePitchClassesNotesMap = {};\n  scaleNotes.forEach((noteName) => {\n    scalePitchClassesNotesMap[Tonal.note(noteName).pc] = noteName;\n  });\n\n  const scalePosChords = new Map(\n    getScaleChords(key, scaleType).map((chordNames, pos) => {\n      return [\n        pos,\n\n        chordNames.map((chordName) => {\n          const chord = Chord.chord(chordName);\n          return {\n            pos,\n            chord,\n            chordType: scaleTypesChordPatterns[scaleType][pos],\n            chordNotesForOctave: getReifiedNotesForChordForScale(\n              chordName,\n              scalePitchClassesNotesMap\n            ),\n            chordName,\n            size:\n              chord.intervals.length * (chord.quality === 'Unknown' ? -1 : 1),\n          };\n        }),\n      ];\n    })\n  );\n\n  const chordDatasByName = new Map(\n    Array.from(scalePosChords.values).map((chordData) => [\n      chordData.chordName,\n      chordData,\n    ])\n  );\n\n  const sizes = new Set();\n\n  scalePosChords.forEach((chordDatas, pos) => {\n    chordDatas.forEach((chordData) => {\n      sizes.add(chordData.size);\n    });\n  });\n\n  return {\n    scaleType,\n    key,\n    scalePitchClasses,\n    scalePosChords,\n    scaleNotes,\n    chordDatasByName,\n    sizes: Array.from(sizes).sort((a, b) => a - b),\n  };\n}\n\nconst flexColContainer = {\n  display: 'flex',\n};\nconst flexCol = {\n  flex: 1,\n};\nconst alignLeft = {\n  textAlign: 'left',\n};\nconst alignCenter = {textAlign: 'center'};\n\nfunction App({audioApi}) {\n  const resumeAudio = React.useCallback(() => audioApi.actx.resume(), [\n    audioApi,\n  ]);\n  const suspendAudio = React.useCallback(() => audioApi.actx.suspend(), [\n    audioApi,\n  ]);\n\n  const [key, setKey] = useQueryParam('key', 'C', QUERY_PARAM_FORMATS.string);\n  const [strumming, setStrumming] = useQueryParam(\n    'strumming',\n    strummingTimes[2],\n    QUERY_PARAM_FORMATS.integer\n  );\n\n  const [strumMode, setStrumMode] = useQueryParam(\n    'strumMode',\n    'up',\n    QUERY_PARAM_FORMATS.string\n  );\n\n  const [includeExtra, setIncludeExtra] = useQueryParam(\n    'includeExtra',\n    false,\n    QUERY_PARAM_FORMATS.boolean\n  );\n  const [lastChord, setLastChord] = React.useState(null);\n  const [octave, setOctave] = useQueryParam(\n    'octave',\n    4,\n    QUERY_PARAM_FORMATS.integer\n  );\n  const [scaleType, setScaleType] = useQueryParam(\n    'scaleType',\n    'major',\n    QUERY_PARAM_FORMATS.string\n  );\n  const [showScaleDegrees, setShowScaleDegrees] = useQueryParam(\n    'showScaleDegrees',\n    true,\n    QUERY_PARAM_FORMATS.boolean\n  );\n\n  const [scaleSteps, setScaleSteps] = useQueryParam(\n    'scaleSteps',\n    7,\n    QUERY_PARAM_FORMATS.integer\n  );\n\n  const [highlightedKeys, setHighlightedKeys] = React.useState(null);\n  const setHighlightedChord = React.useCallback(\n    (keys) => setHighlightedKeys({keys, type: 'chord'}),\n    [setHighlightedKeys]\n  );\n\n  const [history, setHistory] = React.useState([]);\n  const clearHistory = React.useCallback(() => setHistory([]), [setHistory]);\n\n  const scaleData = React.useMemo(() => makeScaleData(key, scaleType, octave), [\n    key,\n    scaleType,\n    octave,\n  ]);\n  const setHighlightedScale = React.useCallback(() => {\n    setHighlightedKeys({keys: scaleData.scaleNotes, type: 'scale'});\n  }, [scaleData]);\n\n  const [events, setEvents] = React.useState([]);\n  const [midiOut, setMidiOut] = React.useState(null);\n\n  const playScale = React.useCallback(() => {\n    setEvents((events) => {\n      let updatedEvents = events;\n      const scaleNotes = scaleData.scaleNotes.slice();\n      scaleNotes.push(Tonal.transpose(scaleNotes[0], '8P'));\n      const currentTime = audioApi.actx.currentTime;\n      let lastStartTimeOffset = 0;\n      scaleNotes.forEach((noteName) => {\n        lastStartTimeOffset += beatDurationSeconds;\n\n        updatedEvents = playNote(\n          updatedEvents,\n          noteName,\n          currentTime + lastStartTimeOffset,\n          currentTime + lastStartTimeOffset + beatDurationSeconds\n        );\n      });\n\n      return updatedEvents;\n    });\n  }, [setEvents, audioApi, scaleData]);\n\n  const playChord = React.useCallback(\n    (chordData, octave, strumming, strumMode) => {\n      const chordNotes = chordData.chordNotesForOctave;\n\n      setEvents((events) => {\n        let updatedEvents = events;\n\n        const currentTime = audioApi.actx.currentTime;\n\n        let notes = chordNotes.slice();\n\n        if (strumMode === 'down') {\n          notes.reverse();\n        } else if (strumMode === 'random') {\n          knuthShuffle(notes);\n        }\n\n        notes.forEach((noteName, i) => {\n          const strumDelay = i * (strumming / 1000);\n          updatedEvents = playNote(\n            updatedEvents,\n            noteName,\n            currentTime + strumDelay,\n            currentTime + beatDurationSeconds + i * (strumming / 1000)\n          );\n        });\n\n        return updatedEvents;\n      });\n\n      setHistory((s) => s.concat(chordData));\n    },\n    [setEvents, audioApi]\n  );\n\n  useValueObserver(scaleData, setHighlightedScale);\n\n  const onMidi = React.useMemo(() => {\n    if (midiOut) {\n      if (!midiOut.send) {\n        debugger;\n      }\n      return (message) => midiOut.send(message);\n    } else if (audioApi.dx7) {\n      return (message) => audioApi.dx7.onMidi(message);\n    }\n    return (message) => {};\n  }, [audioApi, midiOut]);\n\n  const notePlayer = React.useMemo(() => {\n    return {\n      triggerAttack(noteName) {\n        onMidi([NOTE_ON, Tonal.note(noteName).midi, velocityMidi]);\n      },\n      triggerRelease(noteName) {\n        onMidi([NOTE_OFF, Tonal.note(noteName).midi, velocityMidi]);\n      },\n    };\n  }, [onMidi]);\n\n  // startup\n  React.useEffect(() => {\n    // start event-consuming interval\n    const id = setInterval(() => {\n      setEvents((events) => onTick(events, audioApi, onMidi));\n    }, 1);\n    return () => {\n      clearInterval(id);\n    };\n  }, [onMidi]);\n\n  return (\n    <div className=\"App\" style={alignLeft}>\n      <div /*controls*/>\n        <button onClick={suspendAudio}>pause audio</button>\n        <button onClick={resumeAudio}>resume audio</button>\n        {audioApi.dx7 && (\n          <Recorder actx={audioApi.actx} inputNode={audioApi.dx7} />\n        )}\n        <MidiDeviceSelector\n          type=\"output\"\n          selectedPort={midiOut}\n          onChange={setMidiOut}\n        />\n        <div onMouseOver={setHighlightedScale}>\n          <Select\n            label=\"key\"\n            options={keys}\n            value={scaleData.key}\n            onChange={setKey}\n          />{' '}\n          <Select\n            label=\"octave\"\n            options={[1, 2, 3, 4, 5, 6, 7]}\n            value={octave}\n            onChange={setOctave}\n          />{' '}\n          <Select\n            label=\"scale type\"\n            options={allScales}\n            value={scaleType}\n            onChange={setScaleType}\n          />{' '}\n          <label>scale notes: </label>\n          {scaleData.scaleNotes.map((note) => Note.simplify(note)).join()}{' '}\n          <button onClick={playScale}>play scale</button>{' '}\n          <Checkbox\n            label=\"show notes as scale degrees\"\n            onChange={setShowScaleDegrees}\n            checked={showScaleDegrees}\n          />\n        </div>\n      </div>\n      <Details summary=\"scale keyboard\" startOpen={true}>\n        <Select\n          label=\"scale steps\"\n          options={[1, 2, 3, 4, 5, 6, 7]}\n          value={scaleSteps}\n          onChange={setScaleSteps}\n        />\n        <Scaleboard\n          scalePitchClasses={scaleData.scalePitchClasses}\n          highlightKeys={\n            highlightedKeys && highlightedKeys.type !== 'scale'\n              ? highlightedKeys.keys\n              : null\n          }\n          setOctave={setOctave}\n          startOctave={Math.max(0, octave - 1)}\n          octaves={5}\n          highlightType={highlightedKeys ? highlightedKeys.type : 'scale'}\n          notePlayer={notePlayer}\n          showScaleDegrees={showScaleDegrees}\n          scaleSteps={scaleSteps}\n        />\n      </Details>\n      <Details summary=\"keyboard\" startOpen={true}>\n        <Keyboard\n          highlightKeys={highlightedKeys ? highlightedKeys.keys : null}\n          startOctave={Math.max(0, octave - 1)}\n          octaves={5}\n          highlightType={highlightedKeys ? highlightedKeys.type : 'scale'}\n          notePlayer={notePlayer}\n        />\n      </Details>\n      {SHOW_HISTORY && (\n        <div style={alignLeft}>\n          <details>\n            <summary style={alignLeft}>\n              <div style={{display: 'initial'}}>history/export</div>\n            </summary>\n            <div style={{padding: '8px 0'}}>\n              <MidiExport\n                bpm={bpm}\n                history={history}\n                strumming={strumming}\n                beatDurationSeconds={beatDurationSeconds}\n              />\n              <button onClick={clearHistory}>clear history</button>\n            </div>\n            <div style={{width: `90vw`, overflow: 'auto', display: 'flex'}}>\n              {history\n                .slice()\n                .reverse()\n                .map((chordData, i) => (\n                  <div key={i} style={{width: `${(1 / 7) * 100}vw`}}>\n                    <ChordButton\n                      {...{\n                        chordData,\n                        playChord,\n                        setLastChord: () => {},\n                        octave,\n                        strumming,\n                        strumMode,\n                        showScaleDegrees,\n                        selected: false,\n                        onMouseOver: setHighlightedChord,\n                      }}\n                    />\n                  </div>\n                ))}\n              {history.length === 0 && (\n                <div>played chords will appear here</div>\n              )}\n            </div>\n          </details>\n        </div>\n      )}\n\n      <Details summary=\"chord palette\" startOpen={true}>\n        <Range\n          label=\"strumming\"\n          min={0}\n          max={strummingTimes.length - 1}\n          value={strummingTimesIndex[strumming]}\n          onChange={(value) => {\n            setStrumming(strummingTimes[value]);\n          }}\n        />\n        <Select\n          label=\"strum mode\"\n          options={['up', 'down', 'random']}\n          value={strumMode}\n          onChange={setStrumMode}\n        />{' '}\n        <Checkbox\n          label=\"include extra chords\"\n          onChange={setIncludeExtra}\n          checked={includeExtra}\n        />\n        <div style={{...flexColContainer, ...alignCenter}}>\n          <div style={flexCol}>\n            {scaleData.sizes\n              .filter((size) => (includeExtra ? true : size > 0))\n              .sort((a, b) => (SIZE_ASC ? a - b : b - a))\n              .map((size, sizeIndex) => (\n                <div key={sizeIndex}>\n                  {false && <div style={{flex: 1}}>{size}</div>}\n                  <br />\n                  <div key={size} style={{display: 'flex'}}>\n                    {Array.from(scaleData.scalePosChords).map(\n                      ([pos, chordDatas]) => {\n                        return (\n                          <div key={pos} style={{flex: 1}}>\n                            {sizeIndex === 0 && (\n                              <div>{scaleTypesPosNames[scaleType][pos]}</div>\n                            )}\n\n                            {chordDatas\n                              .filter((chordData) => chordData.size === size)\n                              // silly heuristic for simpler chords\n                              .sort(\n                                (a, b) =>\n                                  a.chordName.length - b.chordName.length\n                              )\n                              .map((chordData, i) => (\n                                <ChordButton\n                                  key={i}\n                                  {...{\n                                    chordData,\n                                    playChord,\n                                    setLastChord,\n                                    octave,\n                                    strumming,\n                                    strumMode,\n                                    showScaleDegrees,\n                                    selected: chordData.chordName === lastChord,\n                                    onMouseOver: setHighlightedChord,\n                                  }}\n                                />\n                              ))}\n                          </div>\n                        );\n                      }\n                    )}\n                  </div>\n                </div>\n              ))}\n          </div>\n        </div>\n      </Details>\n      <Details summary=\"midi events\">\n        <pre style={{height: 300, overflow: 'auto'}}>\n          {events.map((ev) => JSON.stringify(ev)).join('\\n')}\n        </pre>\n      </Details>\n    </div>\n  );\n}\n\nexport default App;\n","// @flow\nimport React from 'react';\nimport useQueryParam, {QUERY_PARAM_FORMATS} from './useQueryParam';\nimport useLocalStorage from './useLocalStorage';\nimport './App.css';\nimport App from './App';\n\nconst USE_SAMPLED_DX7 = Boolean(\n  new URL(document.location.href).searchParams.get('sampled')\n);\n\nfunction nonnull<T>(v: ?T): T {\n  if (v == null) {\n    throw new Error('unexpected null');\n  }\n  return v;\n}\n\nfunction Theme() {\n  const [darkMode, setDarkMode] = useLocalStorage('darkMode', false);\n\n  React.useEffect(() => {\n    if (darkMode) {\n      nonnull(document.documentElement).classList.add('dark-mode');\n    } else {\n      nonnull(document.documentElement).classList.remove('dark-mode');\n    }\n  }, [darkMode]);\n\n  return (\n    <div style={{position: 'absolute', top: 0, right: 0}}>\n      <label>\n        dark mode:{' '}\n        <input\n          type=\"checkbox\"\n          checked={darkMode}\n          onChange={() => setDarkMode(s => !s)}\n        />\n      </label>\n    </div>\n  );\n}\n\nfunction useRouting() {\n  const [route] = useQueryParam(\n    'route',\n    'chordpalette',\n    QUERY_PARAM_FORMATS.string\n  );\n\n  switch (route) {\n    case 'exploder':\n      return React.lazy(() => import('./MidiExploder'));\n    case 'chordpalette':\n    default:\n      return App;\n  }\n}\n\nfunction Startup() {\n  const [startedAudio, setStartedAudio] = React.useState(false);\n  const [audioApi, setAudioApi] = React.useState(null);\n\n  const onStart = React.useCallback(() => {\n    nonnull(document.querySelector('.dx7')).style.visibility = 'visible';\n    setStartedAudio(true);\n  }, [setStartedAudio]);\n\n  React.useEffect(() => {\n    async function initSampled() {\n      const {sampledDX7} = await import('./sampledDX7');\n\n      sampledDX7().then(({dx7, actx}) => {\n        window.initDX7Shim(dx7, actx);\n      });\n    }\n    window.onDX7Init = (dx7, actx) => {\n      if (!dx7) {\n        // fall back to sampled\n        return initSampled();\n      }\n      const newAudioApi = {\n        dx7,\n        actx,\n      };\n\n      setAudioApi(newAudioApi);\n      if (actx.state === 'running') {\n        onStart();\n      }\n    };\n    if (USE_SAMPLED_DX7) {\n      initSampled();\n    } else {\n      window.initDX7(process.env.PUBLIC_URL);\n    }\n  }, []);\n\n  const Route = useRouting();\n  if (audioApi && startedAudio) {\n    return (\n      <React.Suspense fallback={<div>loading...</div>}>\n        <div>\n          {<Route {...{audioApi}} />}\n          <Theme />\n        </div>\n      </React.Suspense>\n    );\n  }\n\n  return (\n    <div className=\"App\">\n      {audioApi ? (\n        <button\n          style={{fontSize: 42, borderRadius: 9, cursor: 'pointer'}}\n          onClick={() => {\n            audioApi.actx.resume();\n            onStart();\n          }}\n        >\n          start\n        </button>\n      ) : (\n        'loading...'\n      )}\n    </div>\n  );\n}\n\nexport default Startup;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Startup from './Startup';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Startup />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","export default {\n  container: {\n    textAlign: 'center',\n  },\n  keyboard: {\n    display: 'inline-block',\n    position: 'relative',\n    height: 70,\n    marginTop: 16,\n    marginBottom: 20,\n    cursor: 'pointer',\n  },\n  whiteKey: {\n    position: 'absolute',\n    borderBottomLeftRadius: 4,\n    borderBottomRightRadius: 4,\n    width: 20,\n    height: 70,\n    background: 'white',\n    border: 'solid 1px black',\n    zIndex: 0,\n  },\n  noteLabel: {\n    width: 20,\n    marginTop: 70,\n  },\n  highlighted: {\n    background: 'orange',\n  },\n  blackKey: {\n    position: 'absolute',\n    borderBottomLeftRadius: 3,\n    borderBottomRightRadius: 3,\n    width: 9,\n    height: 50,\n    background: 'black',\n    border: 'solid 1px black',\n\n    zIndex: 1,\n  },\n  pressed: {\n    background: '#7f4af9',\n  },\n};\n","import * as Tonal from '@tonaljs/tonal';\nimport * as Note from '@tonaljs/note';\n\n// convert flats and multiple sharps to natural or sharp form\nexport default function simplifyEnharmonics(noteName) {\n  const noteNameSimplified = Note.simplify(noteName);\n  if (Tonal.note(noteNameSimplified).acc === 'b') {\n    return Note.enharmonic(noteNameSimplified);\n  }\n\n  return noteNameSimplified;\n}\n"],"sourceRoot":""}