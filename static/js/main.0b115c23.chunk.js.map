{"version":3,"sources":["simplifyEnharmonics.js","Details.js","Checkbox.js","useKeyboardInteractions.js","useLocalStorage.js","useValueObserver.js","Keyboard.js","downloadFile.js","Recorder.js","MidiDeviceSelector.js","Scaleboard.js","MidiExport.js","Select.js","Range.js","ChordButton.js","Sticky.js","NearbyChords.js","App.js","Synth.js","Startup.js","serviceWorker.js","index.js","useQueryParam.js","keyboardStyles.js"],"names":["__webpack_require__","d","__webpack_exports__","simplifyEnharmonics","_tonaljs_tonal__WEBPACK_IMPORTED_MODULE_0__","_tonaljs_note__WEBPACK_IMPORTED_MODULE_1__","noteName","noteNameSimplified","Note","Tonal","acc","Details","_ref","summary","children","startOpen","_React$useState","React","useState","_React$useState2","Object","_Users_jfriend_code_scaletoy_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","open","setOpen","onToggle","useCallback","e","preventDefault","stopPropagation","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","Fragment","onClick","Checkbox","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","label","checked","onChange","align","type","useKeyboardInteractions","notePlayer","Set","pressedKeys","setPressedKeys","pressedKeysRef","useRef","pressedKeysAPI","useMemo","setKeyPressed","prev","current","has","triggerAttack","updated","add","setKeyReleased","delete","triggerRelease","makeHandlers","onMouseOver","buttons","onMouseDown","onMouseUp","onMouseOut","useLocalStorage","baseKey","initialValue","key","concat","_useState","item","window","localStorage","getItem","JSON","parse","error","console","log","_useState2","storedValue","setStoredValue","value","valueToStore","Function","setItem","stringify","useValueObserver","currentValue","valueRef","useEffect","prevValue","whiteNotes","notesWithSharps","highlightTypeColors","scale","keys","memo","props","numKeys","length","octaves","highlightKeys","highlightScale","highlightKeysSharpified","map","highlightScaleSharpified","getKeyHighlightStyles","note","sharp","_Users_jfriend_code_scaletoy_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","includes","background","boxShadow","_useKeyboardInteracti","size","startAt","arguments","undefined","_Users_jfriend_code_scaletoy_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_1__","Array","i","range","startOctave","forEach","octave","octaveOffset","noteOffset","noteNameSharp","push","react__WEBPACK_IMPORTED_MODULE_2___default","assign","style","styles","whiteKey","pressed","left","width","noteLabel","blackKey","container","keyboard","downloadFile","blob","fileName","document","body","appendChild","url","URL","createObjectURL","href","download","click","revokeObjectURL","remove","makeNewRecorder","actx","inputNode","chunks","dest","createMediaStreamDestination","mediaRecorder","MediaRecorder","stream","connect","ondataavailable","evt","data","onstop","Blob","Recorder","recorderRef","slicedToArray","recording","setRecording","toggleRecording","s","start","state","stop","react_default","disabled","MidiDeviceSelector","selectedPort","availablePorts","setAvailablePorts","accessType","navigator","requestMIDIAccess","then","access","from","values","onstatechange","parseInt","currentTarget","indexOf","port","name","scaleDegreeImportance","objectSpread","keyboardStyles","tonicKey","marginTop","fontSize","chord","qwerty","split","atStartOfOctave","highlightType","scaleSteps","_React$useMemo","simplifiedPitchClasses","scalePitchClasses","importance","slice","simplifiedPitchClassesForImportance","notesScaleDegrees","Map","scaleDegree","sortedPitchClassesForImportance","sort","b","qwertyToNoteName","qwertyOffset","index","getQwertyOffset","Math","min","max","floor","qwertyHandlers","setOctave","addEventListener","removeEventListener","toConsumableArray","isTonic","showScaleDegrees","get","MidiExport","history","beatDurationSeconds","bpm","strumming","exportHistory","midi","Midi","header","setTempo","track","addTrack","chordData","eventIdx","chordNotes","chordNotesForOctave","beatStart","strummingSeconds","strumDelay","addNote","time","duration","toArray","Select","options","event","parseFloat","Range","step","formatValue","showValue","readOnly","chordTypeColors","major","minor","diminished","buttonStyle","display","cursor","color","padding","paddingBottom","height","overflow","textAlign","playChord","endChord","source","strumMode","selected","noteNames","chordStartedRef","intervals","join","chordType","border","borderColor","onMouseEnter","onMouseLeave","chordName","Sticky","className","sticky","onSetSticky","position","top","zIndex","right","enabled","NearbyChords","scaleData","setHighlightedKeys","lastChord","content","symbol","rotations","src_ChordButton","SIZE_ASC","SHOW_HISTORY","strummingTimes","strummingTimesIndex","v","scaleTypesChordPatterns","dorian","lydian","phrygian","ionian","mixolydian","locrian","allScales","romanNumerals","scaleTypesPosNames","reduce","scaleName","pattern","scaleType","degreeRoman","toUpperCase","Error","getScaleChords","Scale","notes","pc","degree","chords","Chord","tonic","aliases","getChordsBySize","NOTE_ON","NOTE_OFF","velocityMidi","playNoteOnOff","events","end","noteMidi","updatedEvents","ev","message","addEvents","newEvents","makeChordData","chordTonic","scalePitchClassesNotesMap","scaleNotesDegreeMap","chordAbstract","tonicReified","interval","getReifiedNotesForChordForScale","_loop","rot","Interval","rotationTonic","rotChordName","rotatedChord","empty","pitchClasses","quality","makeScaleData","scaleNotes","reifyScaleNotesWithOctave","oct","scaleDegreeChords","chordNames","sizes","chordDatas","flexColContainer","flexCol","flex","alignLeft","alignCenter","App","audioApi","resumeAudio","resume","suspendAudio","suspend","_useQueryParam","useQueryParam","QUERY_PARAM_FORMATS","string","_useQueryParam2","setKey","_useQueryParam3","integer","_useQueryParam4","setStrumming","_useQueryParam5","_useQueryParam6","setStrumMode","_useQueryParam7","boolean","_useQueryParam8","includeExtra","setIncludeExtra","_useQueryParam9","_useQueryParam10","oneShot","setOneShot","setLastChord","_useQueryParam11","_useQueryParam12","_useQueryParam13","_useQueryParam14","setScaleType","_useQueryParam15","_useQueryParam16","setShowScaleDegrees","_useQueryParam17","_useQueryParam18","setScaleSteps","_useQueryParam19","_useQueryParam20","chordPaletteOctaves","setChordPaletteOctaves","_React$useState3","_React$useState4","setHistory","clearHistory","_React$useState5","_React$useState6","highlightedKeys","_React$useState7","_React$useState8","highlightedScale","setHighlightedScale","setHighlightedScaleToCurrentScale","chordDataByOctave","_React$useState9","_React$useState10","setEvents","_React$useState11","_React$useState12","midiOut","setMidiOut","_React$useState13","_React$useState14","stickySection","setStickySection","playScale","currentTime","lastStartTimeOffset","reverse","knuthShuffle","playNoteOn","playNoteOff","filter","_event$message","status","data1","onMidi","send","dx7","id","setInterval","nextEvent","onTick","clearInterval","controlsSection","src_Recorder","scaleKeyboardSection","src_Scaleboard","chromaticKeyboardSection","Keyboard","nearbyChordsSection","historySection","chordPaletteSection","sizeIndex","_ref2","_ref3","midiEventLogSection","publicUrl","process","USE_SAMPLED_DX7","Boolean","location","searchParams","banklist","extractName","offset","c","String","fromCharCode","initDX7","done","errHandler","controllerScripts","AWPF","polyfill","isAudioWorkletPolyfilled","DX7","importScripts","samplesPerBuffer","gainNode","createGain","destination","catch","loadSampled","_callee","_yield$import","sampledDX7","regenerator_default","wrap","_context","next","Promise","all","bind","sent","t0","t1","sampled","t2","abrupt","_callee2","_context2","resolve","Synth","midiIn","setMidiIn","bank","setBank","_useState3","_useState4","bankData","setBankData","_useState5","_useState6","patch","setPatch","mountedRef","changeBankRef","filename","reject","fetch","resp","arrayBuffer","byteLength","patches","Uint8Array","subarray","voice","loadBank","find","p","onmidimessage","newPatchData","nonnull","Theme","_useLocalStorage","_useLocalStorage2","darkMode","setDarkMode","documentElement","classList","AudioContext","Startup","startedAudio","setStartedAudio","setAudioApi","onStart","querySelector","_x2","_loadSynth","apply","this","loadSynth","synth","Route","lazy","useRouting","Suspense","fallback","borderRadius","hostname","match","ReactDOM","render","src_Startup","getElementById","serviceWorker","ready","registration","unregister","parsed","Number","isNaN","toString","param","format","set","replaceState","marginBottom","borderBottomLeftRadius","borderBottomRightRadius","highlighted"],"mappings":"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","file":"static/js/main.0b115c23.chunk.js","sourcesContent":["import * as Tonal from '@tonaljs/tonal';\nimport * as Note from '@tonaljs/note';\n\n// convert flats and multiple sharps to natural or sharp form\nexport default function simplifyEnharmonics(noteName) {\n  const noteNameSimplified = Note.simplify(noteName);\n  if (Tonal.note(noteNameSimplified).acc === 'b') {\n    return Note.enharmonic(noteNameSimplified);\n  }\n\n  return noteNameSimplified;\n}\n","import React from 'react';\n\nexport default function Details({summary, children, startOpen}) {\n  const [open, setOpen] = React.useState(startOpen);\n\n  const onToggle = React.useCallback(\n    (e) => {\n      e.preventDefault();\n      e.stopPropagation();\n      setOpen(!open);\n    },\n    [open]\n  );\n\n  return (\n    <>\n      <details open={open}>\n        <summary onClick={onToggle}>{summary}</summary>\n        {open && children}\n      </details>\n    </>\n  );\n}\n","import React from 'react';\n\nexport default function Checkbox({label, checked, onChange, align}) {\n  return (\n    <label>\n      {align === 'right' && label}\n      <input\n        type=\"checkbox\"\n        onChange={React.useCallback(() => onChange(!checked), [\n          checked,\n          onChange,\n        ])}\n        checked={checked}\n      />\n      {align !== 'right' && label}\n    </label>\n  );\n}\n","import React from 'react';\n\nexport default function useKeyboardInteractions({notePlayer}) {\n  const [pressedKeys, setPressedKeys] = React.useState(() => new Set());\n\n  const pressedKeysRef = React.useRef(new Set());\n\n  const pressedKeysAPI = React.useMemo(() => {\n    return {\n      setKeyPressed(noteName) {\n        const prev = pressedKeysRef.current;\n\n        if (!prev.has(noteName)) {\n          notePlayer.triggerAttack(noteName);\n          const updated = new Set(prev).add(noteName);\n          pressedKeysRef.current = updated;\n          setPressedKeys(updated);\n        }\n      },\n      setKeyReleased(noteName) {\n        const prev = pressedKeysRef.current;\n\n        if (prev.has(noteName)) {\n          const updated = new Set(prev);\n          updated.delete(noteName);\n          pressedKeysRef.current = updated;\n          setPressedKeys(updated);\n          notePlayer.triggerRelease(noteName);\n        }\n      },\n    };\n  }, [setPressedKeys, notePlayer]);\n\n  function makeHandlers(noteName) {\n    return {\n      onMouseOver: (e) => {\n        if (e.buttons > 0) {\n          pressedKeysAPI.setKeyPressed(noteName);\n        }\n      },\n      onMouseDown: () => {\n        pressedKeysAPI.setKeyPressed(noteName);\n      },\n      onMouseUp: () => {\n        pressedKeysAPI.setKeyReleased(noteName);\n      },\n      onMouseOut: () => {\n        pressedKeysAPI.setKeyReleased(noteName);\n      },\n    };\n  }\n\n  return {pressedKeys, pressedKeysAPI, makeHandlers};\n}\n","import {useState} from 'react';\n\nexport default function useLocalStorage(baseKey, initialValue) {\n  const key = `scaletoy-${baseKey}`;\n  // State to store our value\n  // Pass initial state function to useState so logic is only executed once\n  const [storedValue, setStoredValue] = useState(() => {\n    try {\n      // Get from local storage by key\n      const item = window.localStorage.getItem(key);\n      // Parse stored json or if none return initialValue\n      return item ? JSON.parse(item) : initialValue;\n    } catch (error) {\n      // If error also return initialValue\n      console.log(error);\n      return initialValue;\n    }\n  });\n\n  // Return a wrapped version of useState's setter function that ...\n  // ... persists the new value to localStorage.\n  const setValue = value => {\n    try {\n      // Allow value to be a function so we have same API as useState\n      const valueToStore =\n        value instanceof Function ? value(storedValue) : value;\n      // Save state\n      setStoredValue(valueToStore);\n      // Save to local storage\n      window.localStorage.setItem(key, JSON.stringify(valueToStore));\n    } catch (error) {\n      // A more advanced implementation would handle the error case\n      console.log(error);\n    }\n  };\n\n  return [storedValue, setValue];\n}\n","import React from 'react';\n\nexport default function useValueObserver(\n  currentValue,\n  onChange: (value, prevValue) => void\n) {\n  const valueRef = React.useRef(currentValue);\n\n  React.useEffect(() => {\n    const prevValue = valueRef.current;\n    valueRef.current = currentValue;\n\n    if (prevValue !== currentValue) {\n      onChange(currentValue, prevValue);\n    }\n  }, [currentValue, onChange]);\n}\n","import React from 'react';\nimport simplifyEnharmonics from './simplifyEnharmonics';\nimport useKeyboardInteractions from './useKeyboardInteractions';\nimport styles from './keyboardStyles';\n\nfunction range(size, startAt = 0) {\n  return [...Array(size).keys()].map((i) => i + startAt);\n}\n\nconst whiteNotes = ['C', 'D', 'E', 'F', 'G', 'A', 'B'];\nconst notesWithSharps = new Set(['C', 'D', 'F', 'G', 'A']);\n\nconst highlightTypeColors = {\n  scale: '#0867ff',\n  keys: 'orange',\n};\n\nfunction Keyboard(props: {\n  highlightKeys: Array<string>,\n  highlightScale: Array<string>,\n  startOctave: number,\n  octaves: number,\n  notePlayer: Object,\n}) {\n  const numKeys = whiteNotes.length * props.octaves;\n  const keys = [];\n\n  const {highlightKeys, highlightScale, notePlayer} = props;\n\n  const highlightKeysSharpified = React.useMemo(\n    () => (highlightKeys ? highlightKeys.map(simplifyEnharmonics) : null),\n    [highlightKeys]\n  );\n\n  const highlightScaleSharpified = React.useMemo(\n    () => (highlightScale ? highlightScale.map(simplifyEnharmonics) : null),\n    [highlightScale]\n  );\n\n  const getKeyHighlightStyles = React.useCallback(\n    (note, noteName) => {\n      const sharp = note[1] === '#';\n      return {\n        ...(highlightKeysSharpified &&\n        highlightKeysSharpified.includes(noteName)\n          ? {background: highlightTypeColors.keys}\n          : null),\n        ...(highlightScaleSharpified && highlightScaleSharpified.includes(note)\n          ? {boxShadow: `inset -0px -4px ${highlightTypeColors.scale}`}\n          : {boxShadow: `inset -0px -4px #${sharp ? '333' : 'aaa'}`}),\n      };\n    },\n    [highlightScaleSharpified, highlightKeysSharpified]\n  );\n\n  const {pressedKeys, makeHandlers} = useKeyboardInteractions({notePlayer});\n\n  range(props.octaves, props.startOctave).forEach((octave, octaveOffset) => {\n    whiteNotes.forEach((note, noteOffset) => {\n      const noteName = note + octave;\n      const noteNameSharp = note + '#' + octave;\n      keys.push(\n        <div\n          key={noteName}\n          {...makeHandlers(noteName)}\n          style={{\n            ...styles.whiteKey,\n            ...getKeyHighlightStyles(note, noteName),\n            ...(pressedKeys.has(noteName) ? styles.pressed : null),\n            left:\n              (octaveOffset * whiteNotes.length + noteOffset) *\n              (styles.whiteKey.width - 1),\n          }}\n        >\n          <div style={styles.noteLabel}>{note === 'C' ? noteName : note}</div>\n        </div>\n      );\n\n      if (notesWithSharps.has(note)) {\n        keys.push(\n          <div\n            key={noteNameSharp}\n            {...makeHandlers(noteNameSharp)}\n            style={{\n              ...styles.blackKey,\n              ...getKeyHighlightStyles(note + '#', noteNameSharp),\n              ...(pressedKeys.has(noteNameSharp) ? styles.pressed : null),\n              left:\n                (octaveOffset * whiteNotes.length + noteOffset + 1) *\n                  (styles.whiteKey.width - 1) -\n                (styles.blackKey.width - 1) / 2,\n            }}\n          />\n        );\n      }\n    });\n  });\n  return (\n    <div style={styles.container}>\n      <div style={{...styles.keyboard, width: numKeys * styles.whiteKey.width}}>\n        {keys}\n      </div>\n    </div>\n  );\n}\n\nexport default React.memo(Keyboard);\n","export default function downloadFile(blob, fileName) {\n  var a = document.createElement('a');\n  document.body.appendChild(a);\n  a.style = 'display: none';\n\n  const url = URL.createObjectURL(blob);\n  a.href = url;\n  a.download = fileName;\n  a.click();\n  URL.revokeObjectURL(url);\n  a.remove();\n}\n","import React from 'react';\nimport downloadFile from './downloadFile';\n\nfunction makeNewRecorder(actx, inputNode) {\n  const chunks = [];\n  const dest = actx.createMediaStreamDestination();\n  const mediaRecorder = new MediaRecorder(dest.stream);\n  inputNode.connect(dest);\n\n  mediaRecorder.ondataavailable = function(evt) {\n    // push each chunk (blobs) in an array\n    chunks.push(evt.data);\n  };\n\n  mediaRecorder.onstop = function(evt) {\n    // Make blob out of our blobs, and open it.\n    var blob = new Blob(chunks, {type: 'audio/ogg; codecs=opus'});\n\n    const fileName = 'audio.ogg';\n\n    downloadFile(blob, fileName);\n  };\n\n  return mediaRecorder;\n}\n\nfunction Recorder(props) {\n  const recorderRef = React.useRef(\n    makeNewRecorder(props.actx, props.inputNode)\n  );\n\n  const [recording, setRecording] = React.useState(false);\n\n  const toggleRecording = React.useCallback(() => setRecording(s => !s), [\n    setRecording,\n  ]);\n\n  React.useEffect(() => {\n    if (recording) {\n      recorderRef.current.start();\n    } else {\n      if (recorderRef.current.state !== 'inactive') {\n        recorderRef.current.stop();\n        recorderRef.current = makeNewRecorder(props.actx, props.inputNode);\n      }\n    }\n  }, [recording]);\n\n  return (\n    <button onClick={toggleRecording}>\n      {recording ? 'stop recording' : 'record audio'}\n    </button>\n  );\n}\n\nfunction ShimRecorder(props) {\n  if (typeof MediaRecorder == 'undefined') {\n    return <button disabled>[recording not available]</button>;\n  }\n\n  return <Recorder {...props} />;\n}\n\nexport default React.memo(ShimRecorder);\n","import React from 'react';\n\nexport default function MidiDeviceSelector({type, onChange, selectedPort}) {\n  const [availablePorts, setAvailablePorts] = React.useState([]);\n\n  const accessType = type == 'input' ? 'inputs' : 'outputs';\n\n  React.useEffect(() => {\n    if (!navigator.requestMIDIAccess) {\n      return;\n    }\n    navigator.requestMIDIAccess().then((access) => {\n      setAvailablePorts(Array.from(access[accessType].values()));\n\n      access.onstatechange = function(e) {\n        setAvailablePorts(Array.from(access[accessType].values()));\n      };\n    });\n  }, []);\n\n  return (\n    <label>\n      midi {type == 'input' ? 'in' : 'out'}:{' '}\n      <select\n        onChange={(e) => {\n          onChange(availablePorts[parseInt(e.currentTarget.value)]);\n        }}\n        value={availablePorts.indexOf(selectedPort)}\n      >\n        <option key={-1} value={-1}>\n          (none)\n        </option>\n        {availablePorts.map((port, i) => (\n          <option key={i} value={i}>\n            {port.name}\n          </option>\n        ))}\n      </select>\n    </label>\n  );\n}\n","import React from 'react';\nimport simplifyEnharmonics from './simplifyEnharmonics';\nimport useKeyboardInteractions from './useKeyboardInteractions';\nimport keyboardStyles from './keyboardStyles';\n\n// tonic, dominant, submediant, mediant, supertonic, leading tone, subdominant\nconst scaleDegreeImportance = [1, 5, 6, 3, 2, 7];\n\nfunction range(size, startAt = 0) {\n  return [...Array(size).keys()].map((i) => i + startAt);\n}\n\nconst styles = {\n  ...keyboardStyles,\n  tonicKey: {\n    background: '#ccc',\n  },\n  noteLabel: {\n    width: 20,\n    marginTop: 70,\n    fontSize: 10,\n  },\n};\n\nconst highlightTypeColors = {\n  scale: '#4287f5',\n  chord: 'orange',\n};\n\nconst qwerty = \"asdfghjkl;'\".split('');\n\nfunction wrap(kX, kLowerBound, kUpperBound) {\n  let range_size = kUpperBound - kLowerBound + 1;\n\n  if (kX < kLowerBound)\n    kX += range_size * ((kLowerBound - kX) / range_size + 1);\n\n  return kLowerBound + ((kX - kLowerBound) % range_size);\n}\n\nfunction getQwertyOffset(key) {\n  const index = qwerty.indexOf(key);\n  if (index > -1) {\n    return index;\n  }\n  return null;\n}\n\nfunction atStartOfOctave(note) {\n  return note[0] > 'B';\n}\n\nconst highlightType = 'chord';\n\nfunction Scaleboard(props: {\n  highlightKeys: Array<string>,\n  startOctave: number,\n  octaves: number,\n  notePlayer: Object,\n  scalePitchClasses: Array<string>,\n  showScaleDegrees: boolean,\n  scaleSteps: number,\n  setOctave: (s) => void,\n}) {\n  const numKeys = props.scaleSteps * props.octaves;\n  const keys = [];\n\n  const {highlightKeys, notePlayer} = props;\n\n  const highlightKeysSharpified = React.useMemo(\n    () => (highlightKeys ? highlightKeys.map(simplifyEnharmonics) : null),\n    [highlightKeys]\n  );\n\n  const {pressedKeys, pressedKeysAPI, makeHandlers} = useKeyboardInteractions({\n    notePlayer,\n  });\n\n  const {\n    simplifiedPitchClasses,\n    importance,\n    simplifiedPitchClassesForImportance,\n    notesScaleDegrees,\n    sortedPitchClassesForImportance,\n  } = React.useMemo(() => {\n    const simplifiedPitchClasses = props.scalePitchClasses.map(\n      simplifyEnharmonics\n    );\n    const importance = scaleDegreeImportance.slice(0, props.scaleSteps);\n\n    const simplifiedPitchClassesForImportance = importance.map(\n      (i) => simplifiedPitchClasses[i - 1]\n    );\n\n    const notesScaleDegrees = new Map(\n      scaleDegreeImportance.map((scaleDegree) => [\n        simplifiedPitchClasses[scaleDegree - 1],\n        scaleDegree,\n      ])\n    );\n\n    const sortedPitchClassesForImportance = simplifiedPitchClassesForImportance\n      .slice()\n      .sort((a, b) => {\n        if (atStartOfOctave(a) === atStartOfOctave(b)) {\n          return a < b ? -1 : 1;\n        }\n\n        return atStartOfOctave(a) ? -1 : 1;\n      });\n\n    return {\n      simplifiedPitchClasses,\n      importance,\n      simplifiedPitchClassesForImportance,\n      notesScaleDegrees,\n      sortedPitchClassesForImportance,\n    };\n  }, [props.scalePitchClasses, props.scaleSteps]);\n\n  const qwertyToNoteName = React.useCallback(\n    (key) => {\n      const qwertyOffset = getQwertyOffset(key);\n      if (qwertyOffset == null) {\n        return null;\n      }\n\n      const pitchClass =\n        sortedPitchClassesForImportance[\n          qwertyOffset % sortedPitchClassesForImportance.length\n        ];\n\n      return (\n        pitchClass +\n        Math.min(\n          7,\n          Math.max(\n            0,\n            props.startOctave +\n              Math.floor(qwertyOffset / sortedPitchClassesForImportance.length)\n          )\n        )\n      );\n    },\n    [sortedPitchClassesForImportance, props.startOctave]\n  );\n\n  React.useEffect(() => {\n    const qwertyHandlers = {\n      onKeyDown(e) {\n        const noteName = qwertyToNoteName(e.key);\n        if (noteName != null) {\n          pressedKeysAPI.setKeyPressed(noteName);\n        }\n        switch (e.key) {\n          case 'z':\n            props.setOctave((s) => Math.max(s - 1, 0));\n            break;\n          case 'x':\n            props.setOctave((s) => Math.min(s + 1, 7));\n            break;\n        }\n      },\n      onKeyUp(e) {\n        const noteName = qwertyToNoteName(e.key);\n        if (noteName != null) {\n          pressedKeysAPI.setKeyReleased(noteName);\n        }\n      },\n    };\n\n    document.addEventListener('keydown', qwertyHandlers.onKeyDown);\n    document.addEventListener('keyup', qwertyHandlers.onKeyUp);\n    return () => {\n      document.removeEventListener('keydown', qwertyHandlers.onKeyDown);\n      document.removeEventListener('keyup', qwertyHandlers.onKeyUp);\n    };\n  }, [pressedKeysAPI, qwertyToNoteName, props.setOctave]);\n\n  range(props.octaves, props.startOctave).forEach((octave, octaveOffset) => {\n    sortedPitchClassesForImportance.forEach((note, noteOffset) => {\n      const noteName = note + octave;\n      const isTonic = note === props.scalePitchClasses[0];\n      keys.push(\n        <div\n          key={noteName}\n          {...makeHandlers(noteName)}\n          style={{\n            ...styles.whiteKey,\n            ...(isTonic ? styles.tonicKey : null),\n            ...(highlightKeysSharpified &&\n            highlightKeysSharpified.includes(noteName)\n              ? {background: highlightTypeColors[highlightType]}\n              : null),\n            ...(pressedKeys.has(noteName) ? styles.pressed : null),\n            left:\n              (octaveOffset * simplifiedPitchClassesForImportance.length +\n                noteOffset) *\n              (styles.whiteKey.width - 1),\n          }}\n        >\n          <div style={styles.noteLabel}>\n            {props.showScaleDegrees\n              ? notesScaleDegrees.get(note)\n              : isTonic\n              ? noteName\n              : note}\n          </div>\n        </div>\n      );\n    });\n  });\n  return (\n    <div style={styles.container}>\n      <div style={{...styles.keyboard, width: numKeys * styles.whiteKey.width}}>\n        {keys}\n      </div>\n    </div>\n  );\n}\n\nexport default React.memo(Scaleboard);\n","import React from 'react';\nimport {Midi} from '@tonejs/midi';\nimport downloadFile from './downloadFile';\nimport * as Tonal from '@tonaljs/tonal';\n\nexport default function({history, beatDurationSeconds, bpm, strumming}) {\n  const exportHistory = React.useCallback(() => {\n    // create a new midi file\n    const midi = new Midi();\n    midi.header.setTempo(bpm);\n    // add a track\n    const track = midi.addTrack();\n\n    history.forEach((chordData, eventIdx) => {\n      const chordNotes = chordData.chordNotesForOctave;\n      const beatStart = eventIdx * beatDurationSeconds * 2;\n      const strummingSeconds = strumming / 1000;\n\n      chordNotes.forEach((noteName, i) => {\n        const strumDelay = i * strummingSeconds;\n\n        track.addNote({\n          midi: Tonal.note(noteName).midi,\n          // seconds\n          time: beatStart + strumDelay,\n          duration: beatDurationSeconds + strumDelay,\n        });\n      });\n    });\n\n    const blob = new Blob([midi.toArray()], {type: 'audio/midi'});\n    downloadFile(blob, 'export.mid');\n  }, [history]);\n\n  return <button onClick={exportHistory}>export midi</button>;\n}\n","import React from 'react';\n\nexport default function Select({label, options, type, value, onChange}) {\n  return (\n    <label>\n      {label}:{' '}\n      <select\n        value={value}\n        onChange={React.useCallback(\n          (event) =>\n            onChange(\n              type === 'number'\n                ? parseFloat(event.currentTarget.value)\n                : event.currentTarget.value\n            ),\n          [onChange, type]\n        )}\n      >\n        {options.map((key) => {\n          return (\n            <option key={key} value={key}>\n              {key}\n            </option>\n          );\n        })}\n      </select>\n    </label>\n  );\n}\n","import React from 'react';\n\nexport default function Range({\n  label,\n  min,\n  max,\n  step,\n  value,\n  formatValue,\n  showValue,\n  onChange,\n}) {\n  return (\n    <label>\n      {label}:{' '}\n      <input\n        type=\"range\"\n        min={min}\n        max={max}\n        value={value}\n        onChange={React.useCallback(\n          (e) => {\n            onChange(parseInt(e.currentTarget.value));\n          },\n          [onChange]\n        )}\n      />\n      {showValue && (\n        <>\n          {' '}\n          <input\n            type=\"number\"\n            value={formatValue ? formatValue(value) : value}\n            readOnly\n          />\n        </>\n      )}\n    </label>\n  );\n}\n","import React from 'react';\n\nimport {useRef} from 'react';\n\nconst SHOW_NOTE_NAMES = true;\nconst SHOW_NOTE_OCTS = true;\nconst SHOW_FULL_CHORD_NAMES = false;\n\nconst chordTypeColors = {\n  major: 'rgb(127,199,175)',\n  minor: 'rgb(255,158,157)',\n  diminished: 'rgb(218,216,167)',\n};\n\nconst buttonStyle = {\n  display: 'block',\n  width: '100%',\n  cursor: 'pointer',\n  color: 'black',\n  padding: 4,\n  paddingBottom: 8,\n  height: SHOW_FULL_CHORD_NAMES ? 62 : 46,\n  overflow: 'hidden',\n  textAlign: 'center',\n};\n\nexport default React.memo(function ChordButton({\n  chordData,\n  playChord,\n  endChord,\n  source,\n  octave,\n  strumming,\n  strumMode,\n  selected,\n  showScaleDegrees,\n  onMouseOver,\n}) {\n  let noteNames = null;\n\n  const chordStartedRef = useRef(false);\n\n  if (SHOW_NOTE_NAMES) {\n    if (showScaleDegrees) {\n      noteNames = (\n        <div>\n          <small>\n            {chordData.chord ? chordData.chord.intervals.join() : ''}\n          </small>\n        </div>\n      );\n    } else {\n      noteNames = (\n        <div>\n          <small>\n            {SHOW_NOTE_OCTS\n              ? chordData.chordNotesForOctave.join()\n              : chordData.chord.notes.join()}\n          </small>\n        </div>\n      );\n    }\n  }\n\n  return (\n    <div\n      style={{\n        ...buttonStyle,\n        background: chordTypeColors[chordData.chordType] || '#ccc',\n        border: '1px solid',\n        borderColor: selected ? 'rgba(0,0,0,0.2)' : 'transparent',\n      }}\n      onMouseDown={() => {\n        chordStartedRef.current = true;\n        playChord(chordData, strumming, strumMode, source);\n        console.log(chordData);\n      }}\n      onMouseUp={() => {\n        if (chordStartedRef.current) {\n          endChord(chordData, strumming, strumMode, source);\n        }\n        chordStartedRef.current = false;\n      }}\n      onMouseEnter={(e) => {\n        if (e.buttons > 0) {\n          chordStartedRef.current = true;\n          playChord(chordData, strumming, strumMode, source);\n        }\n        onMouseOver(chordData.chordNotesForOctave);\n      }}\n      onMouseLeave={(e) => {\n        if (e.buttons > 0) {\n          if (chordStartedRef.current) {\n            endChord(chordData, strumming, strumMode, source);\n          }\n          chordStartedRef.current = false;\n        }\n      }}\n    >\n      <div>\n        {chordData.chordName}\n        {SHOW_FULL_CHORD_NAMES && (\n          <div>\n            <small>\n              {chordData.chord.name.length > 3 ? (\n                chordData.chord.name\n              ) : (\n                // bad data, don't show\n                <span>&nbsp;</span>\n              )}\n            </small>\n          </div>\n        )}\n        {noteNames}\n      </div>\n    </div>\n  );\n});\n","import React from 'react';\nimport Checkbox from './Checkbox';\n\nexport default function Sticky({\n  children,\n  className,\n  name,\n  sticky,\n  onSetSticky,\n}) {\n  return (\n    <div\n      className={className}\n      style={\n        sticky\n          ? {position: 'sticky', top: -1, zIndex: 2}\n          : {position: 'relative'}\n      }\n    >\n      {children}\n      <div style={{position: 'absolute', top: 1, right: 1}}>\n        <Checkbox\n          label=\"sticky\"\n          onChange={React.useCallback(\n            (enabled) => {\n              onSetSticky(name, enabled);\n            },\n            [onSetSticky, name]\n          )}\n          checked={sticky}\n          align=\"right\"\n        />\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\nimport simplifyEnharmonics from './simplifyEnharmonics';\nimport ChordButton from './ChordButton';\n\nexport default function NearbyChords({\n  scaleData,\n  playChord,\n  endChord,\n  strumming,\n  strumMode,\n  showScaleDegrees,\n  setHighlightedKeys,\n  lastChord,\n}) {\n  const content = !lastChord ? null : (\n    <>\n      {`${lastChord.chord.symbol}` +\n        (lastChord.chord.name.length > 2 ? ` (${lastChord.chord.name})` : '')}\n      {lastChord.rotations && (\n        <div style={{display: 'flex'}}>\n          {lastChord.rotations.map((chordData, i) => {\n            return (\n              <div\n                key={i}\n                style={{\n                  width: `${(1 / 7) * 100}vw`,\n                  height: 46,\n                  overflow: 'hidden',\n                }}\n              >\n                <ChordButton\n                  {...{\n                    chordData,\n                    playChord,\n                    endChord,\n                    strumming,\n                    strumMode,\n                    showScaleDegrees,\n                    selected: false,\n                    onMouseOver: setHighlightedKeys,\n                    source: 'nearby',\n                  }}\n                />\n              </div>\n            );\n          })}\n        </div>\n      )}\n    </>\n  );\n\n  return <div style={{height: 60, overflow: 'hidden'}}>{content}</div>;\n}\n","import React from 'react';\nimport {knuthShuffle} from 'knuth-shuffle';\nimport * as Tonal from '@tonaljs/tonal';\nimport * as Interval from '@tonaljs/interval';\n\nimport * as Scale from '@tonaljs/scale';\nimport * as Chord from '@tonaljs/chord';\nimport * as Note from '@tonaljs/note';\nimport Recorder from './Recorder';\nimport useQueryParam, {QUERY_PARAM_FORMATS} from './useQueryParam';\nimport useValueObserver from './useValueObserver';\nimport MidiDeviceSelector from './MidiDeviceSelector';\nimport Keyboard from './Keyboard';\nimport Scaleboard from './Scaleboard';\nimport MidiExport from './MidiExport';\nimport Details from './Details';\nimport Select from './Select';\nimport Range from './Range';\nimport Checkbox from './Checkbox';\nimport ChordButton from './ChordButton';\nimport Sticky from './Sticky';\nimport simplifyEnharmonics from './simplifyEnharmonics';\nimport NearbyChords from './NearbyChords';\n\nconst SIZE_ASC = true;\nconst SHOW_HISTORY = true;\n\nconst strummingTimes = [0, 10, 30, 50, 75, 100, 150, 200];\nconst strummingTimesIndex = {};\nstrummingTimes.forEach((v, i) => {\n  strummingTimesIndex[v] = i;\n});\n\nfunction range(size, startAt = 0) {\n  return [...Array(size).keys()].map((i) => i + startAt);\n}\nfunction transposeByOctaves(note, shift) {\n  return `${note.pc}${note.oct + shift}`;\n}\n\nfunction getChordsBySize(chords, pc) {\n  return chords\n    .map((chordType) => Chord.get(`${pc}${chordType}`))\n    .sort((a, b) => a.intervals.length - b.intervals.length)\n    .map((chord) => `${chord.tonic}${chord.aliases[0]}`);\n}\n\nconst keys = ['C', 'C#', 'D', 'D#', 'E', 'F', 'F#', 'G', 'G#', 'A', 'Bb', 'B'];\n\nconst scaleTypesChordPatterns = {\n  major: ['major', 'minor', 'minor', 'major', 'major', 'minor', 'diminished'],\n  minor: ['minor', 'diminished', 'major', 'minor', 'minor', 'major', 'major'],\n  dorian: ['minor', 'minor', 'major', 'major', 'minor', 'diminished', 'major'],\n  lydian: ['major', 'major', 'minor', 'diminished', 'major', 'minor', 'minor'],\n  phrygian: [\n    'minor',\n    'major',\n    'major',\n    'minor',\n    'diminished',\n    'major',\n    'minor',\n  ],\n  ionian: ['major', 'minor', 'minor', 'major', 'major', 'minor', 'diminished'],\n  mixolydian: [\n    'major',\n    'minor',\n    'diminished',\n    'major',\n    'minor',\n    'minor',\n    'major',\n  ],\n  locrian: ['diminished', 'major', 'minor', 'minor', 'major', 'major', 'minor'],\n};\n\nconst allScales = Object.keys(scaleTypesChordPatterns);\n\nconst romanNumerals = ['i', 'ii', 'iii', 'iv', 'v', 'vi', 'vii'];\n// const scaleTypesPosNames = {\n//   major: ['I', 'ii', 'iii', 'VI', 'V', 'vi', 'vii*'],\n//   minor: ['i', 'ii*', 'III', 'iv', 'v', 'VI', 'VII'],\n// };\nconst scaleTypesPosNames = Object.keys(scaleTypesChordPatterns).reduce(\n  (acc, scaleName) => {\n    const pattern = scaleTypesChordPatterns[scaleName];\n\n    acc[scaleName] = pattern.map((scaleType, i) => {\n      const degreeRoman = romanNumerals[i];\n\n      switch (scaleType) {\n        case 'major':\n          return degreeRoman.toUpperCase();\n        case 'minor':\n          return degreeRoman;\n        case 'diminished':\n          return degreeRoman + '\\xB0';\n        default:\n          throw new Error(`unknown scaleType '${scaleType}'`);\n      }\n    });\n\n    return acc;\n  },\n  {}\n);\n\nfunction getScaleChords(key, scaleType) {\n  return Scale.scale(key + ' ' + scaleType).notes.map((pc, degree) =>\n    getChordsBySize(\n      Scale.scaleChords(scaleTypesChordPatterns[scaleType][degree]),\n      simplifyEnharmonics(pc)\n    )\n  );\n}\n\nconst bpm = 140;\nconst beatDurationSeconds = (1 / bpm) * 60;\n\nconst NOTE_ON = 0x90;\nconst NOTE_OFF = 0x80;\nconst velocityMidi = 80;\n\nfunction onTick(events, audioApi, onMidi) {\n  let i = 0;\n  for (; i < events.length; i++) {\n    const nextEvent = events[i];\n    if (nextEvent.time > audioApi.actx.currentTime) {\n      break;\n    }\n\n    onMidi(nextEvent.message);\n  }\n\n  return i === 0 ? events : events.slice(i);\n}\n\nfunction playNoteOnOff(events, noteName, start, end) {\n  const noteMidi = Tonal.note(noteName).midi;\n\n  let updatedEvents = events;\n  // end any upcoming events for this key\n  events.forEach((ev) => {\n    if (ev.message[1] === noteMidi) {\n      ev.time = start - 0.01;\n      ev.message[0] = NOTE_OFF;\n    }\n  });\n\n  return addEvents(updatedEvents, [\n    {\n      message: [NOTE_ON, noteMidi, velocityMidi],\n      time: start,\n    },\n    {\n      message: [NOTE_OFF, noteMidi, velocityMidi],\n      time: end,\n    },\n  ]);\n}\nfunction playNoteOn(events, noteName, time) {\n  const noteMidi = Tonal.note(noteName).midi;\n\n  let updatedEvents = events;\n  return addEvents(updatedEvents, [\n    {\n      message: [NOTE_ON, noteMidi, velocityMidi],\n      time: time,\n    },\n  ]);\n}\nfunction playNoteOff(events, noteName, time) {\n  const noteMidi = Tonal.note(noteName).midi;\n\n  let updatedEvents = events;\n  return addEvents(updatedEvents, [\n    {\n      message: [NOTE_OFF, noteMidi, velocityMidi],\n      time: time,\n    },\n  ]);\n}\n\nfunction addEvents(events, newEvents) {\n  const updatedEvents = events.concat(newEvents);\n  updatedEvents.sort((a, b) => a.time - b.time);\n  return updatedEvents;\n}\n\nfunction makeOctaveScaleNoteSequence(key, octave, scaleType) {\n  const scaleNotes = Scale.scale(`${key}${octave} ${scaleType}`).notes;\n\n  scaleNotes.push(transposeByOctaves(Tonal.note(scaleNotes[0]), 1));\n\n  return scaleNotes;\n}\n\n// get the notes for a chord, for an octave\nfunction getReifiedNotesForChord(chordName, octave) {\n  const chordData = Chord.get(chordName);\n  const tonicReified = chordData.tonic + octave;\n  const notes = chordData.intervals.map((interval) =>\n    Tonal.transpose(tonicReified, interval)\n  );\n  return notes;\n}\n\n// we need to make sure that the tonic is from the correct octave when the\n// scale spans multiple octaves\nfunction getReifiedNotesForChordForScale(chordName, scalePitchClassesNotesMap) {\n  const chordData = Chord.get(chordName);\n  const tonicReified = scalePitchClassesNotesMap[chordData.tonic];\n  const notes = chordData.intervals.map((interval) =>\n    Note.simplify(Tonal.transpose(tonicReified, interval))\n  );\n  return notes;\n}\n\nfunction reifyScaleNotesWithOctave(scale, octave) {\n  return scale.intervals.map((interval) =>\n    Tonal.transpose(`${scale.tonic}${octave}`, interval)\n  );\n}\n\nfunction makeChordData(\n  chordName,\n  chordTonic,\n  degree,\n  scaleType,\n  scalePitchClassesNotesMap,\n  scaleNotesDegreeMap,\n  startOctave\n) {\n  const chordAbstract = Chord.get(chordName);\n\n  const chord = Chord.getChord(\n    chordName.slice(chordAbstract.tonic.length),\n    chordTonic,\n    chordTonic\n  );\n  const chordNotesForOctave = getReifiedNotesForChordForScale(\n    chordName,\n    scalePitchClassesNotesMap\n  );\n\n  const rotations = [];\n  for (let rot = 0; rot < chordNotesForOctave.length; rot++) {\n    const maxInterval = Interval.num(\n      chord.intervals[chord.intervals.length - 1]\n    );\n\n    // this method will not correctly invert larger chords\n    if (maxInterval >= 7) break;\n    const rotationTonic = chord.tonic;\n\n    const rotChordName = chord.symbol.slice(Tonal.note(chord.tonic).pc.length);\n    const rotatedChord = Chord.getChord(\n      rotChordName,\n      rotationTonic,\n      chordNotesForOctave[rot] // root\n    );\n    if (rotatedChord.empty) {\n      // dunno how to invert this\n      break;\n    }\n    rotations.push({\n      chordName: chord.symbol,\n      chord: rotatedChord,\n      chordNotesForOctave: rotatedChord.intervals.map((interval) =>\n        simplifyEnharmonics(Tonal.transpose(rotatedChord.tonic, interval))\n      ),\n    });\n  }\n\n  return {\n    degree,\n    chord,\n    chordType: scaleTypesChordPatterns[scaleType][degree],\n    chordNotesForOctave,\n    pitchClasses: chord.notes,\n    chordName,\n    rotations,\n    size: chord.intervals.length * (chord.quality === 'Unknown' ? -1 : 1),\n  };\n}\nfunction makeScaleData(key, scaleType, octave) {\n  const scale = Scale.scale(`${key} ${scaleType}`);\n  const scalePitchClasses = scale.notes;\n\n  const scaleNotes = reifyScaleNotesWithOctave(scale, octave);\n  const scaleNotesDegreeMap = {};\n  const scalePitchClassesNotesMap = {};\n  scaleNotes.forEach((noteName, degree) => {\n    scaleNotesDegreeMap[noteName] = degree;\n    scalePitchClassesNotesMap[\n      simplifyEnharmonics(Tonal.note(noteName).pc)\n    ] = noteName;\n  });\n\n  const startOctave = Tonal.note(scaleNotes[0]).oct;\n\n  const scaleDegreeChords = new Map(\n    getScaleChords(key, scaleType).map((chordNames, degree) => {\n      return [\n        degree,\n        chordNames.map((chordName) =>\n          makeChordData(\n            chordName,\n            scaleNotes[degree],\n            degree,\n            scaleType,\n            scalePitchClassesNotesMap,\n            scaleNotesDegreeMap,\n            startOctave\n          )\n        ),\n      ];\n    })\n  );\n\n  const sizes = new Set();\n  scaleDegreeChords.forEach((chordDatas, degree) => {\n    chordDatas.forEach((chordData) => {\n      sizes.add(chordData.size);\n    });\n  });\n\n  return {\n    scaleType,\n    key,\n    scalePitchClasses,\n    scaleDegreeChords,\n    scaleNotes,\n    sizes: Array.from(sizes).sort((a, b) => a - b),\n  };\n}\n\nconst flexColContainer = {\n  display: 'flex',\n};\nconst flexCol = {\n  flex: 1,\n};\nconst alignLeft = {\n  textAlign: 'left',\n};\nconst alignCenter = {textAlign: 'center'};\n\nfunction App({audioApi}) {\n  const resumeAudio = React.useCallback(() => audioApi.actx.resume(), [\n    audioApi,\n  ]);\n  const suspendAudio = React.useCallback(() => audioApi.actx.suspend(), [\n    audioApi,\n  ]);\n\n  const [key, setKey] = useQueryParam('key', 'C', QUERY_PARAM_FORMATS.string);\n  const [strumming, setStrumming] = useQueryParam(\n    'strumming',\n    strummingTimes[2],\n    QUERY_PARAM_FORMATS.integer\n  );\n\n  const [strumMode, setStrumMode] = useQueryParam(\n    'strumMode',\n    'up',\n    QUERY_PARAM_FORMATS.string\n  );\n\n  const [includeExtra, setIncludeExtra] = useQueryParam(\n    'includeExtra',\n    false,\n    QUERY_PARAM_FORMATS.boolean\n  );\n  const [oneShot, setOneShot] = useQueryParam(\n    'oneShot',\n    true,\n    QUERY_PARAM_FORMATS.boolean\n  );\n  const [lastChord, setLastChord] = React.useState(null);\n  const [octave, setOctave] = useQueryParam(\n    'octave',\n    4,\n    QUERY_PARAM_FORMATS.integer\n  );\n  const [scaleType, setScaleType] = useQueryParam(\n    'scaleType',\n    'major',\n    QUERY_PARAM_FORMATS.string\n  );\n  const [showScaleDegrees, setShowScaleDegrees] = useQueryParam(\n    'showScaleDegrees',\n    true,\n    QUERY_PARAM_FORMATS.boolean\n  );\n\n  const [scaleSteps, setScaleSteps] = useQueryParam(\n    'scaleSteps',\n    7,\n    QUERY_PARAM_FORMATS.integer\n  );\n  const [chordPaletteOctaves, setChordPaletteOctaves] = useQueryParam(\n    'chordPaletteOctaves',\n    1,\n    QUERY_PARAM_FORMATS.integer\n  );\n\n  const [history, setHistory] = React.useState([]);\n  const clearHistory = React.useCallback(() => setHistory([]), [setHistory]);\n\n  const scaleData = React.useMemo(() => makeScaleData(key, scaleType, octave), [\n    key,\n    scaleType,\n    octave,\n  ]);\n\n  const [highlightedKeys, setHighlightedKeys] = React.useState(null);\n  const [highlightedScale, setHighlightedScale] = React.useState(null);\n\n  const setHighlightedScaleToCurrentScale = React.useCallback(\n    () => setHighlightedScale(scaleData.scalePitchClasses),\n    [scaleData.scalePitchClasses]\n  );\n\n  const chordDataByOctave = React.useMemo(() => {\n    return range(chordPaletteOctaves).map((octaveOffset) => {\n      return makeScaleData(key, scaleType, octave + octaveOffset);\n    });\n  }, [key, scaleType, octave, chordPaletteOctaves]);\n\n  const [events, setEvents] = React.useState([]);\n  const [midiOut, setMidiOut] = React.useState(null);\n  const [stickySection, setStickySection] = React.useState(null);\n  const onSetSticky = React.useCallback(\n    (name, enabled) => {\n      setStickySection((s) => (enabled ? name : null));\n    },\n    [setStickySection]\n  );\n\n  const playScale = React.useCallback(() => {\n    setEvents((events) => {\n      let updatedEvents = events;\n      const scaleNotes = scaleData.scaleNotes.slice();\n      scaleNotes.push(Tonal.transpose(scaleNotes[0], '8P'));\n      const currentTime = audioApi.actx.currentTime;\n      let lastStartTimeOffset = 0;\n      scaleNotes.forEach((noteName) => {\n        lastStartTimeOffset += beatDurationSeconds;\n\n        updatedEvents = playNoteOnOff(\n          updatedEvents,\n          noteName,\n          currentTime + lastStartTimeOffset,\n          currentTime + lastStartTimeOffset + beatDurationSeconds\n        );\n      });\n\n      return updatedEvents;\n    });\n  }, [setEvents, audioApi, scaleData]);\n\n  const playChord = React.useCallback(\n    (chordData, strumming, strumMode, source) => {\n      const chordNotes = chordData.chordNotesForOctave;\n\n      setEvents((events) => {\n        let updatedEvents = events;\n\n        const currentTime = audioApi.actx.currentTime;\n\n        let notes = chordNotes.slice();\n\n        if (strumMode === 'down') {\n          notes.reverse();\n        } else if (strumMode === 'random') {\n          knuthShuffle(notes);\n        }\n\n        notes.forEach((noteName, i) => {\n          const strumDelay = i * (strumming / 1000);\n          if (oneShot) {\n            updatedEvents = playNoteOnOff(\n              updatedEvents,\n              noteName,\n              currentTime + strumDelay,\n              currentTime + beatDurationSeconds + i * (strumming / 1000)\n            );\n          } else {\n            updatedEvents = playNoteOn(\n              updatedEvents,\n              noteName,\n              currentTime + strumDelay\n            );\n          }\n        });\n\n        return updatedEvents;\n      });\n\n      if (source !== 'history' && source !== 'nearby') {\n        setHistory((s) => s.concat(chordData));\n        setLastChord(chordData);\n      }\n    },\n    [setEvents, audioApi, oneShot]\n  );\n\n  const endChord = React.useCallback(\n    (chordData, strumming, strumMode, source) => {\n      if (oneShot) return;\n      const chordNotes = chordData.chordNotesForOctave;\n\n      setEvents((events) => {\n        let updatedEvents = events;\n\n        const currentTime = audioApi.actx.currentTime;\n\n        let notes = chordNotes.slice();\n\n        notes.forEach((noteName, i) => {\n          const noteMidi = Tonal.note(noteName).midi;\n          updatedEvents = playNoteOff(\n            updatedEvents,\n            noteName,\n            currentTime\n          ).filter(\n            // remove any future note on for this note (e.g. strumming delayed starts)\n            (event) => {\n              const [status, data1] = event.message;\n              return !(status === NOTE_ON && data1 === noteMidi);\n            }\n          );\n        });\n\n        return updatedEvents;\n      });\n    },\n    [setEvents, audioApi, oneShot]\n  );\n\n  useValueObserver(scaleData, setHighlightedScaleToCurrentScale);\n  React.useEffect(() => {\n    setHighlightedScaleToCurrentScale();\n  }, []);\n\n  const onMidi = React.useMemo(() => {\n    if (midiOut) {\n      if (!midiOut.send) {\n        debugger;\n      }\n      return (message) => midiOut.send(message);\n    } else if (audioApi.dx7) {\n      return (message) => audioApi.dx7.onMidi(message);\n    }\n    return (message) => {};\n  }, [audioApi, midiOut]);\n\n  const notePlayer = React.useMemo(() => {\n    return {\n      triggerAttack(noteName) {\n        onMidi([NOTE_ON, Tonal.note(noteName).midi, velocityMidi]);\n      },\n      triggerRelease(noteName) {\n        onMidi([NOTE_OFF, Tonal.note(noteName).midi, velocityMidi]);\n      },\n    };\n  }, [onMidi]);\n\n  // startup\n  React.useEffect(() => {\n    // start event-consuming interval\n    const id = setInterval(() => {\n      setEvents((events) => onTick(events, audioApi, onMidi));\n    }, 1);\n    return () => {\n      clearInterval(id);\n    };\n  }, [onMidi, audioApi]);\n\n  const controlsSection = (\n    <div>\n      <button onClick={suspendAudio}>pause audio</button>\n      <button onClick={resumeAudio}>resume audio</button>\n      {audioApi.dx7 && (\n        <Recorder actx={audioApi.actx} inputNode={audioApi.dx7} />\n      )}\n      <MidiDeviceSelector\n        type=\"output\"\n        selectedPort={midiOut}\n        onChange={setMidiOut}\n      />\n      <div>\n        <Select\n          label=\"key\"\n          options={keys}\n          value={scaleData.key}\n          onChange={setKey}\n        />{' '}\n        <Select\n          label=\"octave\"\n          type=\"number\"\n          options={[1, 2, 3, 4, 5, 6, 7]}\n          value={octave}\n          onChange={setOctave}\n        />{' '}\n        <Select\n          label=\"scale type\"\n          options={allScales}\n          value={scaleType}\n          onChange={setScaleType}\n        />{' '}\n        <label>scale notes: </label>\n        {scaleData.scaleNotes.map((note) => Note.simplify(note)).join()}{' '}\n        <button onClick={playScale}>play scale</button>{' '}\n        <Checkbox\n          label=\"show notes as scale degrees\"\n          onChange={setShowScaleDegrees}\n          checked={showScaleDegrees}\n        />\n      </div>\n    </div>\n  );\n\n  const scaleKeyboardSection = (\n    <Sticky\n      name=\"scaleKeyboardSection\"\n      onSetSticky={onSetSticky}\n      sticky={stickySection === 'scaleKeyboardSection'}\n      className=\"background\"\n    >\n      <Details summary=\"scale keyboard\" startOpen={true}>\n        <Select\n          label=\"scale steps\"\n          options={[1, 2, 3, 4, 5, 6, 7]}\n          type=\"number\"\n          value={scaleSteps}\n          onChange={setScaleSteps}\n        />\n        <Scaleboard\n          scalePitchClasses={scaleData.scalePitchClasses}\n          highlightKeys={highlightedKeys}\n          setOctave={setOctave}\n          startOctave={Math.max(0, octave - 1)}\n          octaves={5}\n          notePlayer={notePlayer}\n          showScaleDegrees={showScaleDegrees}\n          scaleSteps={scaleSteps}\n        />\n      </Details>\n    </Sticky>\n  );\n\n  const chromaticKeyboardSection = (\n    <Sticky\n      name=\"chromaticKeyboardSection\"\n      onSetSticky={onSetSticky}\n      sticky={stickySection === 'chromaticKeyboardSection'}\n      className=\"background\"\n    >\n      <Details summary=\"keyboard\" startOpen={true}>\n        <Keyboard\n          highlightKeys={highlightedKeys}\n          highlightScale={highlightedScale}\n          startOctave={Math.max(0, octave - 1)}\n          octaves={5}\n          notePlayer={notePlayer}\n        />\n      </Details>\n    </Sticky>\n  );\n\n  const nearbyChordsSection = (\n    <Sticky\n      name=\"nearbyChordsSection\"\n      onSetSticky={onSetSticky}\n      sticky={stickySection === 'nearbyChordsSection'}\n      className=\"background\"\n    >\n      <Details summary=\"nearby chords\" startOpen={true}>\n        <NearbyChords\n          {...{\n            scaleData,\n            playChord,\n            endChord,\n            strumming,\n            strumMode,\n            showScaleDegrees,\n            setHighlightedKeys,\n            lastChord,\n          }}\n        />\n      </Details>\n    </Sticky>\n  );\n\n  const historySection = SHOW_HISTORY && (\n    <div style={alignLeft}>\n      <details>\n        <summary style={alignLeft}>\n          <div style={{display: 'initial'}}>history/export</div>\n        </summary>\n        <div style={{padding: '8px 0'}}>\n          <MidiExport\n            bpm={bpm}\n            history={history}\n            strumming={strumming}\n            beatDurationSeconds={beatDurationSeconds}\n          />\n          <button onClick={clearHistory}>clear history</button>\n        </div>\n        <div style={{width: `90vw`, overflow: 'auto', display: 'flex'}}>\n          {history\n            .slice()\n            .reverse()\n            .map((chordData, i) => (\n              <div key={i} style={{width: `${(1 / 7) * 100}vw`}}>\n                <ChordButton\n                  {...{\n                    chordData,\n                    playChord,\n                    endChord,\n                    strumming,\n                    strumMode,\n                    showScaleDegrees,\n                    selected: false,\n                    onMouseOver: setHighlightedKeys,\n                    source: 'history',\n                  }}\n                />\n              </div>\n            ))}\n          {history.length === 0 && <div>played chords will appear here</div>}\n        </div>\n      </details>\n    </div>\n  );\n\n  const chordPaletteSection = (\n    <Details summary=\"chord palette\" startOpen={true}>\n      <Range\n        label=\"strumming\"\n        min={0}\n        max={strummingTimes.length - 1}\n        value={strummingTimesIndex[strumming]}\n        onChange={(value) => {\n          setStrumming(strummingTimes[value]);\n        }}\n      />\n      <Select\n        label=\"strum mode\"\n        options={['up', 'down', 'random']}\n        value={strumMode}\n        onChange={setStrumMode}\n      />{' '}\n      <Select\n        label=\"octaves\"\n        type=\"number\"\n        options={[1, 2]}\n        value={chordPaletteOctaves}\n        onChange={setChordPaletteOctaves}\n      />{' '}\n      <Checkbox\n        label=\"include extra chords\"\n        onChange={setIncludeExtra}\n        checked={includeExtra}\n      />{' '}\n      <Checkbox label=\"oneshot\" onChange={setOneShot} checked={oneShot} />\n      <div style={{...flexColContainer, ...alignCenter}}>\n        {chordDataByOctave.map((scaleData, index) => {\n          return (\n            <div style={flexCol} key={index}>\n              {scaleData.sizes\n                .filter((size) => (includeExtra ? true : size > 0))\n                .sort((a, b) => (SIZE_ASC ? a - b : b - a))\n                .map((size, sizeIndex) => (\n                  <div key={sizeIndex}>\n                    {false && <div style={{flex: 1}}>{size}</div>}\n                    <br />\n                    <div key={size} style={{display: 'flex'}}>\n                      {Array.from(scaleData.scaleDegreeChords).map(\n                        ([degree, chordDatas]) => {\n                          return (\n                            <div key={degree} style={{flex: 1}}>\n                              {sizeIndex === 0 && (\n                                <div>\n                                  {scaleTypesPosNames[scaleType][degree]}\n                                </div>\n                              )}\n\n                              {chordDatas\n                                .filter((chordData) => chordData.size === size)\n                                // silly heuristic for simpler chords\n                                .sort(\n                                  (a, b) =>\n                                    a.chordName.length - b.chordName.length\n                                )\n                                .map((chordData, i) => (\n                                  <ChordButton\n                                    key={i}\n                                    {...{\n                                      chordData,\n                                      playChord,\n                                      endChord,\n                                      source: 'grid',\n                                      strumming,\n                                      strumMode,\n                                      showScaleDegrees,\n                                      selected:\n                                        lastChord &&\n                                        chordData.chordName ===\n                                          lastChord.chordName,\n                                      onMouseOver: setHighlightedKeys,\n                                    }}\n                                  />\n                                ))}\n                            </div>\n                          );\n                        }\n                      )}\n                    </div>\n                  </div>\n                ))}\n            </div>\n          );\n        })}\n      </div>\n    </Details>\n  );\n\n  const midiEventLogSection = (\n    <Details summary=\"midi events\">\n      <pre style={{height: 300, overflow: 'auto'}}>\n        {events.map((ev) => JSON.stringify(ev)).join('\\n')}\n      </pre>\n    </Details>\n  );\n\n  return (\n    <div className=\"App\" style={alignLeft}>\n      {controlsSection}\n      {scaleKeyboardSection}\n      {chromaticKeyboardSection}\n      {nearbyChordsSection}\n      {historySection}\n      {chordPaletteSection}\n      {midiEventLogSection}\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\n\nimport {useRef, useEffect, useState} from 'react';\n\nimport MidiDeviceSelector from './MidiDeviceSelector';\n\nimport Select from './Select';\n\nconst publicUrl = process.env.PUBLIC_URL;\n\nconst USE_SAMPLED_DX7 = Boolean(\n  new URL(document.location.href).searchParams.get('sampled')\n);\n\nconst banklist = [\n  'rom1a.syx',\n  'rom1b.syx',\n  'rom2a.syx',\n  'rom2b.syx',\n  'rom3a.syx',\n  'rom3b.syx',\n  'rom4a.syx',\n  'rom4b.syx',\n  'eno.syx',\n];\n\nfunction extractName(\n  data,\n  offset = 118 // 118 for packed, 145 for unpacked\n) {\n  let name = '';\n  for (let n = 0; n < 10; n++) {\n    let c = data[n + offset];\n    switch (c) {\n      case 92:\n        c = 'Y';\n        break; // yen\n      case 126:\n        c = '>';\n        break; // >>\n      case 127:\n        c = '<';\n        break; // <<\n      default:\n        if (c < 32 || c > 127) c = 32;\n        break;\n    }\n    name += String.fromCharCode(c);\n  }\n  return name;\n}\n\nfunction loadBank(filename) {\n  var url = publicUrl + '/wam/dx7/presets/' + filename;\n  return new Promise((resolve, reject) => {\n    fetch(url).then((resp) => {\n      resp.arrayBuffer().then((data) => {\n        // -- packed bank with sysex frame (32 patches)\n        if (data.byteLength != 4104) reject();\n        const patches = [];\n        data = new Uint8Array(data);\n        data = data.subarray(6, 4102);\n        for (var i = 0; i < 32; i++) {\n          var offset = i * 128;\n          var voice = data.subarray(offset, offset + 128);\n          var name = extractName(voice);\n          patches.push({name, voice});\n        }\n        resolve(patches);\n      });\n    });\n  });\n}\n\nfunction initDX7(actx, done) {\n  const errHandler = (e) => {\n    console.error(e);\n    debugger;\n  };\n\n  var controllerScripts = [\n    publicUrl + '/wam/wamsdk/wam-controller.js',\n    publicUrl + '/wam/dx7/dx7-awn.js',\n  ];\n\n  /* global AWPF, DX7 */\n  AWPF.polyfill(actx, controllerScripts)\n    .then(function() {\n      if (AWPF.isAudioWorkletPolyfilled) {\n        done(null, actx);\n        return;\n      }\n      DX7.importScripts(publicUrl, actx)\n        .then(() => {\n          const dx7 = new DX7(actx, {samplesPerBuffer: 256});\n          var gainNode = actx.createGain();\n\n          dx7.connect(gainNode);\n          // TODO implement volume control\n          // gainNode.gain.setValueAtTime(0.2, actx.currentTime);\n\n          gainNode.connect(actx.destination);\n\n          done(dx7, actx);\n        })\n        .catch(errHandler);\n    })\n    .catch(errHandler);\n}\n\nasync function loadSampled(actx) {\n  const {sampledDX7} = await import('./sampledDX7');\n  return {sampled: true, ...(await sampledDX7(actx))};\n}\nexport async function loadSynth(actx) {\n  if (USE_SAMPLED_DX7) {\n    return await loadSampled(actx);\n  } else {\n    const audioApi = await new Promise((resolve) =>\n      initDX7(actx, (dx7, actx) => resolve({dx7, actx}))\n    );\n    if (!audioApi.dx7) {\n      // fall back to sampled\n      return await loadSampled(actx);\n    } else {\n      return audioApi;\n    }\n  }\n}\n\nexport function Synth({audioApi}) {\n  const [midiIn, setMidiIn] = React.useState(null);\n\n  const [bank, setBank] = useState(banklist[0]);\n  const [bankData, setBankData] = useState(null);\n  const [patch, setPatch] = useState('E.PIANO 1 ');\n\n  const mountedRef = useRef(true);\n  useEffect(() => {\n    return () => {\n      mountedRef.current = false;\n    };\n  }, []);\n\n  const changeBankRef = useRef();\n  if (!changeBankRef.current) {\n    changeBankRef.current = (bank) => {\n      loadBank(bank).then((bankData) => {\n        if (!mountedRef.current) return;\n        setBankData(bankData);\n\n        if (!bankData.find((p) => p.name === patch)) {\n          setPatch(bankData[0].name);\n        }\n      });\n    };\n  }\n\n  useEffect(() => {\n    changeBankRef.current(bank);\n  }, [bank]);\n\n  useEffect(() => {\n    if (midiIn == null) {\n      return;\n    }\n    midiIn.onmidimessage = (message) => {\n      if (audioApi) {\n        audioApi.dx7.onMidi(message.data);\n      }\n    };\n    return () => {\n      midiIn.onmidimessage = null;\n    };\n  }, [midiIn, audioApi]);\n\n  useEffect(() => {\n    if (!mountedRef.current) return;\n    changeBankRef.current(banklist[0]);\n  }, [audioApi]);\n\n  useEffect(() => {\n    if (!patch || !bankData) {\n      return;\n    }\n    const newPatchData = bankData.find((p) => p.name === patch) || bankData[0];\n    if (newPatchData && audioApi && audioApi.dx7.setPatch) {\n      audioApi.dx7.setPatch(newPatchData.voice);\n    }\n  }, [patch, bankData, audioApi]);\n\n  if (audioApi.sampled) {\n    return null\n  }\n\n  return (\n    <div className=\"dx7\">\n      <details open>\n        <summary>synthesizer</summary>\n        <div id=\"content\">\n          <div id=\"topbar\">\n            <div>webDX7</div>\n            <div className=\"right\">\n              <div className=\"control\">\n                <Select\n                  label=\"bank\"\n                  options={banklist}\n                  value={bank}\n                  onChange={(value) => setBank(value)}\n                />\n              </div>\n\n              <div className=\"control\">\n                <Select\n                  label=\"patch\"\n                  options={bankData ? bankData.map((patch) => patch.name) : []}\n                  value={patch}\n                  onChange={(value) => setPatch(value)}\n                />\n              </div>\n\n              <div className=\"control\">\n                <MidiDeviceSelector\n                  type=\"input\"\n                  selectedPort={midiIn}\n                  onChange={setMidiIn}\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n      </details>\n    </div>\n  );\n}\n","// @flow\nimport React from 'react';\nimport useQueryParam, {QUERY_PARAM_FORMATS} from './useQueryParam';\nimport useLocalStorage from './useLocalStorage';\nimport './App.css';\nimport App from './App';\nimport {Synth, loadSynth} from './Synth';\n\nfunction nonnull<T>(v: ?T): T {\n  if (v == null) {\n    throw new Error('unexpected null');\n  }\n  return v;\n}\n\nfunction Theme() {\n  const [darkMode, setDarkMode] = useLocalStorage('darkMode', false);\n\n  React.useEffect(() => {\n    if (darkMode) {\n      nonnull(document.documentElement).classList.add('dark-mode');\n    } else {\n      nonnull(document.documentElement).classList.remove('dark-mode');\n    }\n  }, [darkMode]);\n\n  return (\n    <div style={{position: 'absolute', top: 0, right: 0}}>\n      <label>\n        dark mode:{' '}\n        <input\n          type=\"checkbox\"\n          checked={darkMode}\n          onChange={() => setDarkMode((s) => !s)}\n        />\n      </label>\n    </div>\n  );\n}\n\nfunction useRouting() {\n  const [route] = useQueryParam(\n    'route',\n    'chordpalette',\n    QUERY_PARAM_FORMATS.string\n  );\n\n  switch (route) {\n    case 'exploder':\n      return React.lazy(() => import('./MidiExploder'));\n    case 'chordpalette':\n    default:\n      return App;\n  }\n}\n\nlet actx = new AudioContext();\n\nfunction Startup() {\n  const [startedAudio, setStartedAudio] = React.useState(false);\n  const [audioApi, setAudioApi] = React.useState(null);\n\n  const onStart = React.useCallback(() => {\n    nonnull(document.querySelector('.intro')).style.display = 'none';\n\n    setStartedAudio(true);\n  }, [setStartedAudio]);\n\n  React.useEffect(() => {\n    loadSynth(actx).then((audioApi) => {\n      setAudioApi(audioApi);\n\n      if (audioApi.actx.state === 'running') {\n        onStart();\n      }\n    });\n  }, [onStart]);\n\n  const synth = <Synth audioApi={audioApi} />;\n\n  const Route = useRouting();\n  if (audioApi && startedAudio) {\n    return (\n      <>\n        {synth}\n        <React.Suspense fallback={<div>loading...</div>}>\n          <div>\n            <Route {...{audioApi}} />\n            <Theme />\n          </div>\n        </React.Suspense>\n      </>\n    );\n  }\n\n  return (\n    <>\n      <div className=\"App\">\n        {audioApi ? (\n          <button\n            style={{fontSize: 42, borderRadius: 9, cursor: 'pointer'}}\n            onClick={() => {\n              audioApi.actx.resume();\n              onStart();\n            }}\n          >\n            start\n          </button>\n        ) : (\n          'loading...'\n        )}\n      </div>\n    </>\n  );\n}\n\nexport default Startup;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Startup from './Startup';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Startup />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import {useState} from 'react';\n\nexport const QUERY_PARAM_FORMATS = {\n  boolean: {\n    parse: (v) => !(v == null || v === 'false'),\n    stringify: (v) => JSON.stringify(v),\n  },\n  integer: {\n    parse: (v) => {\n      const parsed = parseInt(v, 10);\n      if (Number.isNaN(parsed)) {\n        debugger;\n        throw new Error('invalid int when parsing: ' + v);\n      }\n      return parsed;\n    },\n    stringify: (v) => v.toString(),\n  },\n  string: {\n    parse: (v) => v,\n    stringify: (v) => v,\n  },\n};\n\nexport default function useQueryParam(param, initialValue, format) {\n  // State to store our value\n  // Pass initial state function to useState so logic is only executed once\n  const [storedValue, setStoredValue] = useState(() => {\n    try {\n      // Get from url by param\n      const item = new URL(window.location.href).searchParams.get(param);\n      // Parse stored json or if none return initialValue\n      return item != null ? format.parse(item) : initialValue;\n    } catch (error) {\n      // If error also return initialValue\n      console.log(error);\n      return initialValue;\n    }\n  });\n\n  // Return a wrapped version of useState's setter function that ...\n  // ... persists the new value to query params.\n  const setValue = (value) => {\n    try {\n      // Allow value to be a function so we have same API as useState\n      const valueToStore =\n        typeof value === 'function' ? value(storedValue) : value;\n      // Save state\n      setStoredValue(valueToStore);\n\n      const url = new URL(window.location.href);\n      url.searchParams.set(param, format.stringify(valueToStore));\n      window.history.replaceState(null, null, url.toString());\n    } catch (error) {\n      // A more advanced implementation would handle the error case\n      console.log(error);\n    }\n  };\n\n  return [storedValue, setValue];\n}\n","export default {\n  container: {\n    textAlign: 'center',\n  },\n  keyboard: {\n    display: 'inline-block',\n    position: 'relative',\n    height: 70,\n    marginTop: 16,\n    marginBottom: 20,\n    cursor: 'pointer',\n  },\n  whiteKey: {\n    position: 'absolute',\n    borderBottomLeftRadius: 4,\n    borderBottomRightRadius: 4,\n    width: 20,\n    height: 70,\n    background: 'white',\n    border: 'solid 1px black',\n    zIndex: 0,\n  },\n  noteLabel: {\n    width: 20,\n    marginTop: 70,\n  },\n  highlighted: {\n    background: 'orange',\n  },\n  blackKey: {\n    position: 'absolute',\n    borderBottomLeftRadius: 3,\n    borderBottomRightRadius: 3,\n    width: 9,\n    height: 50,\n    background: '#000',\n    border: 'solid 1px black',\n\n    zIndex: 1,\n  },\n  pressed: {\n    background: '#7f4af9',\n  },\n};\n"],"sourceRoot":""}